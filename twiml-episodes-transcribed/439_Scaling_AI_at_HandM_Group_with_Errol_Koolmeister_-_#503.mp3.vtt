WEBVTT

00:00.000 --> 00:16.720
All right, everyone. I am on the line with Errol Coolmaster. Errol is head of AI foundation

00:16.720 --> 00:21.520
at H&M Group. Errol, welcome to the Twomel AI podcast.

00:21.520 --> 00:23.840
Thank you so much. It's a pleasure to be here.

00:23.840 --> 00:29.320
Hey, it's great to have you on the show and I'm looking forward to digging into our conversation.

00:29.320 --> 00:33.080
I'd love to have you start us off by sharing a bit about your journey.

00:33.080 --> 00:35.480
How did you come to work in AI?

00:35.480 --> 00:40.360
Yeah, thank you so much. My journey really started about 15 years ago.

00:40.360 --> 00:43.480
I was still in school studying finance.

00:43.480 --> 00:49.160
I got the opportunity to join one of the largest bank here in the Nordic region of Europe.

00:49.160 --> 00:53.000
So I joined Nordia Bank, basically as a fraud analyst in the beginning.

00:53.000 --> 00:55.400
Keep in mind, this was 15 years ago.

00:55.400 --> 01:01.720
We weren't into deep tech back then. Basically, I was set at the position where they said,

01:01.720 --> 01:07.640
can you help us fix the fraud? So immediately, I was exposed to real-time problems,

01:08.520 --> 01:14.120
trying to in real-time work with the credit card companies to stop it.

01:14.840 --> 01:19.000
In the past, it was just rule-based, given that I had a finance background studying math

01:19.000 --> 01:25.000
at the time. I started doing statistical analysis, improving the results significantly,

01:25.000 --> 01:29.800
back then, my love for data, machine learning, and algorithms were born.

01:30.680 --> 01:36.520
So basically, I just took it from there. I then, of course, graduated.

01:36.520 --> 01:39.720
Went on to be a part of building up the fraud unit in the bank.

01:40.440 --> 01:45.480
Did that for a few years when I went on to actually anti-monolondering?

01:45.480 --> 01:49.640
So I was a part of building up the first detection systems in the bank as well,

01:50.520 --> 01:53.480
which was really interesting. I did that for about three years.

01:53.480 --> 01:57.480
And algorithms, screening, I couldn't get enough of it.

01:58.360 --> 02:01.880
I had my first child, and my second child during that period,

02:02.600 --> 02:06.360
when I realized I need some more exposure to data problems.

02:06.840 --> 02:12.600
I felt like this field is moving so fast. So I got to opportunity within the bank to have

02:13.320 --> 02:18.200
open roles, so to say. So I moved around a little bit in the bank every day.

02:18.200 --> 02:23.400
Was it the children that gave you the insight that you needed more exposure to data?

02:23.400 --> 02:24.600
The data problems?

02:24.600 --> 02:29.160
Definitely. Here is Sweden. We are very, we are very luxurious.

02:29.160 --> 02:33.080
We get a lot of free time. We get children. We get about a year off.

02:34.280 --> 02:38.360
I didn't take all the time, but it makes you think a little bit about what should I focus on.

02:38.840 --> 02:39.640
Okay.

02:39.640 --> 02:43.160
I realized I want to go broader, for all of these folks in and of me.

02:44.680 --> 02:49.160
So at that time, I had the opportunity to start playing around with Hadoop installations, Vanilla.

02:49.160 --> 02:55.800
Of course, this was our early days still. I had the opportunity to integrate the SaaS platform

02:55.800 --> 03:01.160
with Hadoop, distributed computing, early days of Spark, and I just was hooked.

03:02.040 --> 03:05.560
So I deep-dived into the technical aspect of data science.

03:06.920 --> 03:11.960
And I just couldn't get enough. I really love this field, and I have a strong passion for it.

03:12.840 --> 03:16.760
After a year or so, in that relatively free role, I got a phone call.

03:16.760 --> 03:23.800
And it was from a headhunter working at London, and they were recruiting for lead data scientists

03:23.800 --> 03:30.120
role for Vodafone Group. So basically, the second largest cell phone provider in the world.

03:31.560 --> 03:38.280
And I said, this is a great opportunity. So I decided to take my kids and wife and move to the UK,

03:39.240 --> 03:44.680
where I worked out to their global office, setting up their AI department as one of their

03:44.680 --> 03:50.040
lead data scientists. So, still, early days for me and early days for Vodafone. So I had the

03:50.040 --> 03:56.040
opportunity to work with some very talented individuals, and being a part of building out that team

03:56.040 --> 04:05.400
that I think is now over 500 people. We still, I would say, had set up infrastructure that I had

04:05.400 --> 04:11.400
some problems with today's perspective on the premium, large clusters, distributed computing,

04:11.400 --> 04:16.600
and very long lead times to actually rolling out models. So I got a little bit of frustrated.

04:17.160 --> 04:21.880
I like living in the fast lane, especially when it comes to extracting value.

04:22.840 --> 04:27.800
So I spent about a year and a half in London when I had the opportunity to actually start

04:27.800 --> 04:35.080
my own business. So I spent a bit of a lot of time in airports moving back and forth between

04:35.080 --> 04:42.280
Sweden and London, servicing clients, primarily banks and startups, with AI implementations.

04:43.400 --> 04:49.560
But after less than a year, my partner decided to pull out, and my good friends that think

04:49.560 --> 04:54.600
big analytics that was purchased by Territate, gave me a call and asked why not to join us,

04:54.600 --> 05:00.680
not to partners pull them. So I decided to do so. I came in as a director of data science for

05:00.680 --> 05:06.280
the Nordics Eastern Europe, Russia, managing a team of 25 people approximately.

05:07.080 --> 05:13.800
And what I did was traveling around in this region, advising the large corporations on how to

05:13.800 --> 05:22.840
implement AI and data. I did so for about a year. Then I get a really interesting phone call

05:23.560 --> 05:28.040
from one of the largest companies, not just here in the Nordics, but also in the world.

05:28.040 --> 05:36.600
H&M Group said, Hey, we are investing heavily in AI. We want to build out this internal capability.

05:36.600 --> 05:45.640
Can you help us do it? I at that point I said, okay, so do you have buying from senior stakeholders?

05:45.640 --> 05:51.080
Do you have budget? And do you have data? And I got a positive answer to all three of those.

05:51.800 --> 05:57.080
And I said, okay, let's do it. And that was two and a half years ago. And I haven't stopped

05:57.080 --> 06:03.720
running since. That's fantastic. So for those who may not be familiar with H&M Group,

06:04.680 --> 06:09.160
tell us a little bit about the company. So the H&M Group, of course,

06:09.160 --> 06:16.200
come from the original H&M brand that would started in 1947 here in Sweden in a small town called

06:16.200 --> 06:22.760
Vesteros. It was a very successful business model in the beginning. The founder,

06:22.760 --> 06:29.080
Aling Passion said he wanted to democratize fashion. Fashion in the pre-war era was relatively

06:29.080 --> 06:36.680
expensive. So he basically cut prices and made it available for everyone. In the off-the-war

06:36.680 --> 06:41.800
Europe, everybody wanted to kind of get the economy started. So this was a spot on.

06:42.440 --> 06:49.000
The model was so successful. So in around year 2000, they had 2000 stores when we opened in

06:49.000 --> 06:57.800
Manhattan. And now today, 20 years later, we have 5,000 stores globally. H&M, of course,

06:58.840 --> 07:03.080
the group consists of more than the H&M brand, which is very well known for most people.

07:03.080 --> 07:11.240
We have other brands like weekday, monkey, another story, H&M home, etc. So we as a group,

07:11.240 --> 07:17.560
we serve all of them. And most additionally, these initiatives are still being centrally managed

07:17.560 --> 07:25.000
out of Sweden. Okay, nice. And what you mentioned, you got that call that said that they wanted to

07:26.040 --> 07:33.800
invest heavily in AI. What stage was H&M at when they gave that call?

07:34.680 --> 07:41.560
So I mean, so the listeners listening to this, you probably met the CEOs or the senior managers

07:41.560 --> 07:48.120
who says, hey, AI, I've heard about it at a conference somewhere. What is it? Shouldn't we be

07:48.120 --> 07:56.280
investing in it? H&M came to that conclusion in around 2016. That meant that the CEO at the

07:56.280 --> 08:02.760
time called you on passion, the grandson of the founder, bent to business development, and he gave

08:02.760 --> 08:07.160
that line pretty much. What are we doing within AI? So business development went out into the

08:07.160 --> 08:13.640
business and said, we got some bad news. We're not doing much. We do have a CRM department.

08:13.640 --> 08:18.200
We do have some central initiatives here and there, but hey, we're H&M. We're not doing it a

08:18.200 --> 08:23.640
scale. We're not taking advantage of our economy of scale economy we could be doing here.

08:24.440 --> 08:31.160
So business development, they engage in external consultancy firm for the first proof of

08:31.160 --> 08:37.720
concepts in around 2017, with the aim to go to production if they were good. They were good,

08:37.720 --> 08:43.000
their first indicative results. So they went to production. They started to see payback

08:43.000 --> 08:48.360
immediately. The return on investment was less than a year in most of the business cases they

08:48.360 --> 08:55.720
started. It was so successful. So in 2018, when I got that call, they decided to establish AI

08:55.720 --> 09:02.920
as its own function. And a function in H&M is kind of a big deal. One private act is sustainability

09:02.920 --> 09:07.640
department. If you know H&M a little bit sustainability is something very important for us,

09:07.640 --> 09:16.200
then you can imagine how important AI is now. So maybe tell us a little bit about various

09:16.200 --> 09:26.040
use cases for AI at H&M. How do you organize them? Do you think about them by business unit or

09:26.040 --> 09:31.320
by functional area? I'm imagining that or based on our previous conversation that there's

09:31.320 --> 09:39.720
quite broad use at this point. Yeah. So H&M covers the entire value chain of a retail company,

09:39.720 --> 09:47.000
except actually manufacturing the clothes. So for us, AI needs to cover the entire value chain.

09:47.000 --> 09:52.760
We have an end-to-end responsibility here. So when we started assessment of what use cases to

09:52.760 --> 10:00.680
actually do, we looked on value and feasibility. So we wanted to pick the low hanging fruits first,

10:00.680 --> 10:06.840
which was a very good strategy. So we looked on, okay, in the beginning of the cycle,

10:06.840 --> 10:11.960
when we're starting to, before we start manufacturing the clothes, when we actually do the design,

10:12.760 --> 10:19.640
can we detect the trends? They're going to be interesting relevant in eight months when

10:19.640 --> 10:24.680
we're going to get the clothes back. So we started one of the use cases was fashion forecasting,

10:25.400 --> 10:29.720
very interesting looking on social media, whether the trends. So our designers could go in

10:30.280 --> 10:35.960
with their hypotheses and actually validate them in this tool. How the parts of this was,

10:35.960 --> 10:42.200
of course, demand forecasting. So when we do have some of these things, how much should we buy?

10:42.920 --> 10:48.040
That's also very important for us. In the past, when we had hyper growth in the physical retail,

10:48.040 --> 10:51.800
we could just say we're going to grow 10% next year. If we didn't reach that target,

10:51.800 --> 10:57.240
we could open a new store and put all the garments there and just sell them out anyway.

10:57.240 --> 11:01.800
Now we needed to be more granular in our predictions. So demand forecasting for the company was,

11:01.800 --> 11:08.040
of course, something we focused quite a lot on. Then on the other side, we needed to a way to

11:08.040 --> 11:15.640
negotiate with different production plants. So we applied AI into different pricing algorithms,

11:15.640 --> 11:22.920
in negotiations, and also vendor selection algorithms for the production part. On top of that,

11:22.920 --> 11:28.920
when everything is produced, we need to allocate them to warehouses. So allocation became a

11:28.920 --> 11:33.880
relatively good use case for us as well. What garments should go ware and to what stores should

11:33.880 --> 11:39.400
again. It's not a one-size-fits-all. It needs to be individual depending on the market as well.

11:40.200 --> 11:46.120
And then, of course, in the end of the sales cycle, we need to handle pricing. So markdowns for

11:46.120 --> 11:51.720
the online store was one of our more successful use cases. And then, of course, covering everything

11:51.720 --> 11:56.760
is the personalization, recommendation engines, and tailored offering for our customers.

11:56.760 --> 12:02.360
So those were our main relatively high-level use cases that we focused on most recently.

12:03.880 --> 12:09.720
So you joined H&M at a time where the company had completed several

12:11.000 --> 12:19.960
proof-of-concept efforts, had demonstrated some value. I believe didn't have much of a team

12:19.960 --> 12:26.280
relied primarily on external resources at this point. What were your first steps in

12:28.440 --> 12:33.400
taking on the challenge to scale this more broadly within the organization?

12:35.480 --> 12:40.520
It's a very good question. And I think my first reaction when joining H&M is what have I given

12:40.520 --> 12:48.760
myself into? It was relatively what it's nested with some really talented consultants,

12:48.760 --> 12:53.080
but they were focused so much on value. And I came in with the perspective of course with value,

12:53.080 --> 12:59.960
but how do I scale these type of efforts? I started thinking how do we actually recruit the

12:59.960 --> 13:04.840
amount of people that we need to recruit to replace these consultants? How do we streamline the

13:04.840 --> 13:11.240
technology and architecture? So one of the first things we started doing was communicating a lot

13:11.240 --> 13:16.840
more around the topics we were working on to make the market aware of that we were doing this

13:16.840 --> 13:21.320
type of investments to be able to attract talent into some of the very challenging

13:21.320 --> 13:27.720
problems we were working on. So we started crafting a story line that we wanted to introduce

13:28.360 --> 13:34.120
to the general market as well. You should never underestimate communication to create a bit of bus

13:34.120 --> 13:39.400
in the Nordics because that's primarily where we started out, but also then more globally as well.

13:39.400 --> 13:47.400
Then of course popping the hood of all the use cases, looking at the technical architecture,

13:48.280 --> 13:53.640
trying to understand what the external consultant's firm had actually built. So some of the first

13:53.640 --> 14:00.840
thing I did was going out and hiring more technical people that could understand the engineering aspect

14:01.640 --> 14:06.120
is one thing to build a model, but it's another thing to push it to production and keep it there,

14:06.120 --> 14:12.040
which requires a lot of engineering effort. So my first hire was some really senior machine learning

14:12.040 --> 14:19.240
engineers and we created something we call a reference architecture because we wanted to maintain

14:19.240 --> 14:24.600
autonomy of the actual data science teams that were building the algorithms and the products

14:25.240 --> 14:29.720
to be able to run as fast as possible but to be able to get as much central support as possible.

14:30.520 --> 14:35.240
It didn't make sense for us to make 10 different technical choices when they were trying to solve

14:35.240 --> 14:40.840
the same problem. So we started streamlining some of these choices to be able to speed up deliveries,

14:41.640 --> 14:48.680
started to harmonize the technical choices, and then of course started taking the use case over

14:48.680 --> 14:58.920
and rolling them out at a faster pace. At that point we're there existing data scientists within

14:58.920 --> 15:05.000
different business units and you were supporting them centrally or were you also staffing up

15:05.000 --> 15:10.120
across the business in the various business units or departments?

15:11.640 --> 15:15.240
It's a very relevant question. I've seen different companies do it differently. The

15:15.240 --> 15:22.920
DGNM approach was to do it centrally from the start, basically to incubate the capability

15:22.920 --> 15:28.440
rather to spread it out, what we realized and what I realized from my experience as well is

15:28.440 --> 15:32.680
if you put a data science in a team as the only technical and algorithmic person,

15:32.680 --> 15:36.840
they're going to have a problem delivering not because they are a pad at delivering

15:37.560 --> 15:43.160
but they're not in the right context. So you tend to see a relatively high turnover of data

15:43.160 --> 15:51.240
scientists being set as an isolated island in a business unit. So we decided to initially

15:51.240 --> 16:02.040
start with a central incubation. When you kind of pull back the covers on these proof of

16:02.040 --> 16:09.720
concepts, you were looking for the, you're trying to understand them technically,

16:10.680 --> 16:17.960
but what did you also learn from a value perspective? Like often there's misalignment between

16:18.760 --> 16:24.840
the needs of a proof of concept meaning to show something flashy or fancy and the ultimate

16:24.840 --> 16:33.080
needs of the business and how you align in a sustainable long-term way. Did that kind of issue

16:33.080 --> 16:39.240
come up for you? I think that some of the really good things with the external firm that we

16:39.240 --> 16:44.840
worked, but they were really good at understanding the business requirements. They worked very closely

16:44.840 --> 16:49.480
and I think a strategy from H&M side given that they have had over the technical development

16:49.480 --> 16:54.520
to an external firm was to actually have an integrated person from the business in each use case.

16:55.080 --> 17:02.680
So the alignment around the value and the delivery of these things, I would say we're very well

17:02.680 --> 17:07.720
aligned. The problems were more on the technical side because showing something shiny

17:08.840 --> 17:16.120
doesn't always scale. My learnings and experiences start with the simplest thing that's better than

17:16.120 --> 17:21.800
random that gives some sort of initial uplift, but you can scale it better. You don't go with the

17:21.800 --> 17:27.640
most complex technology or algorithm from start because you don't know how that will scale.

17:28.520 --> 17:33.800
So it's better to create a stable and scalable infrastructure rather than focusing on the modeling

17:34.440 --> 17:40.680
from day one if you're serious about these things. And so what were some of the things that you

17:40.680 --> 17:46.440
built into that infrastructure as you started to pull these projects together? So some of the things

17:46.440 --> 17:51.640
that we did is we looked at the process and what I realized is if you understand what you're building,

17:52.440 --> 17:56.520
then you can map the processes and then you can actually automate most of the things.

17:57.720 --> 18:04.760
vis-à-vis the MLOPS type of setup. So what we did was basically to map out the development

18:04.760 --> 18:11.960
process and look on where are some of the major pain points that we have today. What I started

18:11.960 --> 18:19.560
realizing is that we had a lot of stale clusters on the cloud that weren't used 70% of the time.

18:19.560 --> 18:26.520
So we started moving over to a more scalable infrastructure. So we moved most of our development

18:26.520 --> 18:32.680
away from Jupyter notebooks into Databricks, given that then we could have on-demand compute,

18:32.680 --> 18:38.840
and we could have more virtual control over the infrastructure. So we standardized on how we

18:38.840 --> 18:45.400
actually did model development. With those things we also started looking on the the orchestration.

18:45.400 --> 18:51.000
So we standardized it a lot around the work for orchestration, went to going more into to airflow,

18:51.880 --> 18:55.720
building new pipelines into that things, and also looking on how do we production lies and how do

18:55.720 --> 19:02.440
we follow up on these things. So for each of these process step we took a few design decisions

19:03.000 --> 19:09.560
and created supporting infrastructure for that. And then did you go to the actual

19:12.520 --> 19:19.480
maybe taking a step back, were you building infrastructure and kind of promoting these proof of

19:19.480 --> 19:26.600
concepts into a more production capability at the same time, or did one come before the other?

19:26.600 --> 19:32.840
Did you pause on the PSE, build infrastructure, and then return to the PSEs to make them scale? How did

19:32.840 --> 19:41.080
you approach all of that? Yeah, I mean my general comment is super hard. But it's only concept of

19:41.080 --> 19:45.880
technical depth. So these PSEs, some of them were in production already delivering value and

19:45.880 --> 19:50.280
if you are using production delivering value, it's hard to pull back because the business is

19:50.280 --> 20:00.200
going to go crazy. But what we started doing was we slowly worked with the different products,

20:00.200 --> 20:08.280
identifying their major pain points, and gave them boilerplate code to start migrating towards.

20:09.000 --> 20:13.080
So some of the engineers they went in, they did a small proof of concept for instance moving

20:13.080 --> 20:18.520
into air flowing Kubernetes in some of the use cases and showed on the benefits and then we had

20:18.520 --> 20:26.280
them paid down the technical depth. In our OCRs, I even formulated goals for the product area to

20:26.280 --> 20:33.400
actually have no technical depth in their use cases or product in this case. So we mandated them

20:33.400 --> 20:37.560
that not all your efforts would go into new feature development and you roll out to new markets,

20:37.560 --> 20:43.720
it should be paying down the depth that we still owe on the proof of concepts.

20:46.600 --> 20:56.840
Can you walk us through a particular use case kind of before you had this infrastructure and

20:56.840 --> 21:03.800
you know once you establish the infrastructure and how that use case evolved along with

21:03.800 --> 21:07.480
the platform technologies that you put in the place?

21:08.440 --> 21:15.560
Yeah. I can tell you about the first use case we started as the H&M team,

21:15.560 --> 21:19.080
solely based on the reference architecture and how we actually developed that.

21:19.960 --> 21:26.120
So we started a sort of quantification for online, which is demand for causing for the online

21:26.120 --> 21:32.360
store, from scratch. So we wanted a green field with all the experience of all the proof of

21:32.360 --> 21:37.960
concepts you can consider in mind based on the reference architecture. Basically what we started

21:37.960 --> 21:43.560
of course with was creating this blueprint, the reference architecture, and then started building

21:43.560 --> 21:49.720
the different building blocks out of that. So from scratch, we of course made a modeling on

21:49.720 --> 21:54.840
Databricks. We created the the Airflow orchestration, the integration, the scoring, the

21:54.840 --> 22:00.600
hyper parameter tuning, the interference part and all of that. It took M2M to build out this

22:00.600 --> 22:05.960
infrastructure approximately 12 months. And I'm not going to say this was super false but given

22:05.960 --> 22:11.960
the complexity and dependencies that we had and the team was relatively new to building this,

22:11.960 --> 22:17.320
I think it was relatively good. And were you building the infrastructure for this particular

22:17.960 --> 22:23.880
product or were you building the infrastructure with many products in mind and this was kind of

22:23.880 --> 22:30.360
a tracer bullet? That's exactly the question I wanted to get to because we had all the

22:30.360 --> 22:34.840
use cases in mind. So this time we didn't just build it for one, we built it for many.

22:36.120 --> 22:41.160
And the learning that we made from that is the second use case that we started which was

22:41.160 --> 22:47.320
balancing a warehouse that took six months. Basically the same prerequisites, of course,

22:47.320 --> 22:52.760
not the same data and the same business output but the process and everything associated with it

22:52.760 --> 22:57.880
is very similar. So we could reuse much of the infrastructure because we built it in such a way.

22:57.880 --> 23:02.760
So all of a sudden we had saved 50% of development time in the new use case.

23:03.800 --> 23:10.360
And our new strategic approach is to even reduce that further with 50% and hopefully getting

23:10.360 --> 23:16.120
it down to three months in the ones that we're starting right now. So we see enormous productivity

23:16.120 --> 23:21.720
gain with designing an infrastructure that's reusable, raw data and building independent use

23:21.720 --> 23:29.400
cases at this scale because it doesn't make sense. Yeah. You've talked about some of the trade-offs

23:29.400 --> 23:36.840
between simplicity and complexity and modeling. I'm wondering if you can talk a little bit about

23:36.840 --> 23:41.960
what the portfolio looks like from that perspective, what kinds of models are you using

23:44.200 --> 23:47.640
and the way you're approaching it today now that you've built some of the infrastructure?

23:47.640 --> 23:55.160
Yeah. So most of the things that we have taken to production the last year or so are all

23:55.160 --> 24:02.440
relatively simple. Most of our models are like GBM. Like GBM is sort of a house model these days.

24:02.440 --> 24:08.600
I mean it produces good results and its computational power isn't that expensive.

24:09.320 --> 24:15.240
So we get the results that we need and it's also relatively easy to integrate into the use

24:15.240 --> 24:20.760
cases and the infrastructure that we have. When we start it out and somebody consults the early

24:20.760 --> 24:26.360
use cases and some of our early use cases, many of the people in the teams throw themselves

24:26.360 --> 24:34.280
directly into the latest research, wanted to do neural networks, wanted to get just a CR.1 uplift.

24:35.080 --> 24:41.240
But what we realize as well is this isn't a cagle competition. It is not about optimizing

24:41.240 --> 24:45.880
that metrics and that then you're done. It's about carrying it over into production

24:45.880 --> 24:52.280
into infrastructure as well. So these days we tend to start with something relatively simple

24:52.280 --> 25:02.120
as a benchmark. It can be anything from from like GBM, XGBoost and some other regression models

25:02.120 --> 25:08.760
for instance. And now we're slowly moving towards more advanced tools. So looking at

25:08.760 --> 25:15.240
the graph neural networks, et cetera, in our more latest modeling because we then see an extra

25:15.240 --> 25:22.120
need for it. So it is a relatively wide range. We have experts in all of these areas,

25:22.120 --> 25:27.960
we have optimization experts as well in some of our use cases. So we try to keep it as simple as

25:27.960 --> 25:37.880
possible but we're not 100% there yet. You talked about one of your biggest challenges being

25:37.880 --> 25:47.400
scaling your organization from zero to many employees, data scientists. Do you run into the issue

25:47.400 --> 25:53.720
of the folks that you're trying to attract wanting to play with cool, fancy, shiny toys,

25:53.720 --> 25:59.960
and here you're working with XGBoost and light GBM. How do you address that?

25:59.960 --> 26:07.960
Yeah, it's a it's a super hard. I think it also comes with seniority and I think it also comes

26:07.960 --> 26:14.920
with establishing different types of teams. What we're saying is the most valuable thing for us

26:14.920 --> 26:20.200
right now when we look on scale are the simpler models that they produce a good value and the

26:20.200 --> 26:25.640
reason to maintain and and put into production. But we also have established research teams

26:25.640 --> 26:32.440
which have as a purpose to look on how can we prove what we have today. How can we introduce more

26:32.440 --> 26:38.760
more research into these product teams but they have another time perspective. So what we tend

26:38.760 --> 26:43.800
to talk to our data scientists and machine learning engineers is that you have to consider

26:43.800 --> 26:49.400
timing into this. We have to have a positive ROI in our investment today to actually get the

26:49.400 --> 26:54.920
funding to be able to scale this but at the same time we are investing in the research

26:54.920 --> 26:58.360
for the research needs to be heavily associated with what you're doing with as well.

26:59.480 --> 27:06.040
So we are trying to have a long and a short term perspective. Can we can we attract everyone

27:06.040 --> 27:11.240
that wants to work with the latest and the shiniest thing? No, of course not. Hopefully we can get

27:11.240 --> 27:17.160
some of them and that will be enough. And hopefully one day we are advanced enough so that most

27:17.160 --> 27:23.080
of the things we're working on are the latest. But we are a company with a lot of legacy and it's

27:23.080 --> 27:32.280
going to take us a bit of time before we are there. You just touched on a topic that I hear fairly

27:32.280 --> 27:38.120
frequently when talking to folks that are in enterprise leadership positions and that is the

27:38.840 --> 27:47.560
importance of managing the project portfolio. You know needing to have some kind of swing for

27:47.560 --> 27:57.640
the fences, big goals in mind to keep executives excited and keep the funding coming in but also

27:57.640 --> 28:05.160
needing to have small wins and pick off low hanging fruit, that kind of thing. I'm wondering if

28:05.160 --> 28:12.200
you see that as well and how you approach that portfolio management aspect of the role.

28:12.200 --> 28:19.960
Yeah, I would like to put it a little bit more context as well. So we had a major reorganization

28:19.960 --> 28:25.880
recently integration AI with IT department and business development into one large unit called

28:25.880 --> 28:31.720
business tech. So these days we are enabling domain as well which means we we serve all of the

28:31.720 --> 28:38.280
the business with enabling capabilities. So the majority of the use cases actually is prioritized

28:38.280 --> 28:44.200
by other units than ourself these days and we support them with building them out. This put us

28:44.200 --> 28:50.200
in a tricky situation trying to identify how should we accelerate AI now given that we are

28:50.200 --> 28:56.600
enabling domain. So we sat down and we formulated a strategy which we called the Fountainhead which

28:56.600 --> 29:03.080
is the encapsulation of all AI capabilities. So one of the cornerstones of that is going from vertical

29:03.080 --> 29:08.440
capabilities which is basically use case by use case because we see that's not a scalable business

29:08.440 --> 29:15.880
wallet into a horizontal scaling. Basically what that does it gives us another factor of

29:15.880 --> 29:22.920
prioritizing. If we in the past prioritized our use cases in our portfolio by value and feasibility

29:22.920 --> 29:30.760
we have now added the notion of reusability. And the notion of reusability basically is because

29:30.760 --> 29:36.760
take the move box balancing of warehouses use case that we had that's in season demand for

29:36.760 --> 29:41.880
costing. If we build it just for move box this is not an infrastructure question but if we build

29:41.880 --> 29:47.320
that specifically demand for costing just for move box that means that we created once and we use

29:47.320 --> 29:54.040
it once. But if we prioritize our use cases for all the use cases now that can do in season demand

29:54.040 --> 30:00.040
for costing because we just created that capability and we prioritize them that means we reach value

30:00.040 --> 30:06.600
much faster. So we scale smarter not harder by just doing more use cases. So we have flipped

30:06.600 --> 30:14.200
the roadmap over in our portfolio of AI use cases work together with the domain and created that

30:14.200 --> 30:22.200
type of roadmap to prioritize times the value which gives us a relatively good ROI quickly

30:22.200 --> 30:28.040
within the first year is our estimate rather than a sequence with small value lumps along the

30:28.040 --> 30:33.320
way that the next few years. So we have we have spent quite a lot of time recently

30:34.440 --> 30:37.480
and are seeing that the first results already know.

30:40.440 --> 30:45.480
Maybe to replay that a little bit to make sure that I'm catching what you're saying.

30:46.440 --> 30:52.600
It sounds like you started out you had a bunch of proof of concepts and you built some

30:52.600 --> 31:00.760
fairly low level infrastructure things like Databricks and Airflow and other things to enable you

31:00.760 --> 31:09.080
to scale those proof of concepts and more recently what you're seeing is you're kind of pushing up

31:09.080 --> 31:14.280
the level of abstraction and so you're saying okay instead of you know building out this

31:15.240 --> 31:21.880
vertically integrated demand forecasting app for a particular use case. Hey well we need to do

31:21.880 --> 31:28.360
forecasting across lots of different use cases potentially. Let's build another level of platform

31:28.360 --> 31:34.600
kind of at the forecasting level or the application level. You know at the risk of throwing around

31:34.600 --> 31:41.400
too many buzzwords here. You're spot on and that's exactly what we're doing. We increased the

31:41.400 --> 31:45.000
abstraction level so I think there's a very good summary of what we're actually doing.

31:45.000 --> 31:51.400
Focusing more on the reusability effect notches on technology but on the output as well.

31:52.600 --> 31:59.240
Because we are right now obsessed with scaling the value aspect. I did the math that is not

31:59.240 --> 32:06.120
complicated. If we are 100 people today or 120 issue working on the AI use cases we have around

32:06.840 --> 32:13.560
10 use cases in production right now. If we're going to have all our core operational decisions

32:13.560 --> 32:18.680
amplified by AI by 2025 which is our tech clip that we're aiming towards. We're going to need

32:18.680 --> 32:24.280
thousands of people if we're scaling it vertically. So we need not the way of assessing the talent

32:24.280 --> 32:35.080
gap and the time to value assessment as well. You mentioned that part of this recent reorg

32:35.080 --> 32:45.240
put you in the same organization as IT. I'm curious about the implications of that or the impacts

32:45.240 --> 32:57.400
of that and how you work together with IT. What ways has it impacted your workflow in the way you

32:57.400 --> 33:05.960
approach your test? I think one of the good decisions that was taken a few years back was that we

33:05.960 --> 33:14.280
were going to start the AI efforts all on cloud with basically no limitations around the technology.

33:14.280 --> 33:20.600
We could pick pretty much whatever we wanted. It was a curse and a blessing. But if you look

33:20.600 --> 33:26.280
on a traditional IT on the prem traditional waterfall approaches relatively long cycles,

33:26.280 --> 33:36.520
deployment, secretations, not so agile. Going into the new business tech organization where we

33:36.520 --> 33:43.480
established around 250 product teams also supposed to work agile. The IT department coming down from

33:43.480 --> 33:49.080
a monolithic type of situation trying to break that down into product teams relatively small.

33:49.800 --> 33:54.920
Of course they have a lot of legacy. So we are running really fast. We are able to ship

33:54.920 --> 34:01.320
with every delivery. The integration with IT is still relatively few. But what we are

34:01.320 --> 34:06.920
experienced now is that we are encountering some of the traditional processes from that type of

34:06.920 --> 34:13.240
organization. So I would say it's good for the company because we are getting everybody up to

34:13.240 --> 34:18.360
the same stand that on how you deliver in a modern software organization or more than tech

34:18.360 --> 34:24.040
organization. But on our side of course the lead times become a little bit longer when we're

34:24.040 --> 34:43.720
trying to integrate. But it sounds like you are still operating. Well is AI operating primarily

34:43.720 --> 34:48.120
cloud first but the rest of IT is not primarily cloud first. Is that part of what I am hearing?

34:48.120 --> 34:55.160
The strategy is cloud first for the company. Then of course the migration takes a bit of time

34:55.160 --> 35:02.680
for the rest of the organization. So we are 100% cloud first which makes life a lot of easier.

35:03.960 --> 35:16.200
And so when you get a proof of concept or a project to production does that stay within your org

35:16.200 --> 35:23.400
for operational responsibility or is there a handoff to IT? How have you structured around

35:24.760 --> 35:31.080
ops long time? So IT doesn't exist in a longer as a notion. It's just business techno.

35:33.000 --> 35:37.320
But what it is on the upside is that we have the notion of you run it, you build it.

35:38.760 --> 35:43.880
What we said try to do is work together with the domains. So our domains like sourcing and

35:43.880 --> 35:48.920
production, customer fulfillment, etc. They are responsible for the actual juice case. We are

35:48.920 --> 35:56.200
responsible for the capability, the best practice, and the algorithms. So what we do is we work

35:56.200 --> 36:01.320
together with the domain. They are going to run the product long term. But we are going to make

36:01.320 --> 36:07.000
sure that they have the specialist to solve the problem. So take in season demand for a casting

36:07.000 --> 36:12.600
for instance. We are running the algorithmic, the part that actually produces. They will handle

36:12.600 --> 36:18.360
the integration and the actual usage of the product. So we can specialize in being specialist

36:18.360 --> 36:22.520
in demand for casting. And they can integrate with the business and the change management

36:22.520 --> 36:25.960
and run it. So it's going to be two product teams working together.

36:27.000 --> 36:36.200
Okay. And so does the business units that sounds like have their own technical capability

36:36.200 --> 36:45.000
to operate these applications long term. But they rely on business tech as and enable it to help

36:45.000 --> 36:53.000
them build in emerging technologies. Is that the idea? Yeah. So the business units, they are

36:53.000 --> 36:58.280
actually once running the business. And then business tech is a traditional old IT organization,

36:58.280 --> 37:04.280
but being a more agile organization these days. So we serve the needs of the business units

37:04.280 --> 37:10.440
in the group. They don't run, but they use the products that we develop. So for instance,

37:10.440 --> 37:15.880
so for instance on the customer side, what we're building now is a platform to integrate with

37:15.880 --> 37:21.160
hnm.com to make it fully personalized. We can deploy microservices to get interact and

37:21.160 --> 37:26.840
create the personalized experience. Of course, those that actually are working on the use cases,

37:26.840 --> 37:31.720
working with the sales and everything that's our online sales unit. And that sits in the business

37:31.720 --> 37:37.400
units of the hnm brand and business tech is creating the technology to enable them to do their job

37:37.400 --> 37:47.080
the best possible way. Got it. So you know, in all of this in your journey there at hnm group

37:47.080 --> 37:54.040
growing the team from zero to I think you said 120 employees you've gone through, you know,

37:54.040 --> 38:01.240
reorgs and transformations like what what are some of your your biggest learnings and all that

38:01.240 --> 38:13.800
around how to scale NAI team from, you know, from the start. I think one of my biggest learnings

38:13.800 --> 38:21.880
is perfection is the enemy of done. I think if you wait around and want to create the best product

38:21.880 --> 38:27.080
or want to create the best technology, you're never going to to reach that end state. And if

38:27.080 --> 38:32.840
you're serious about running fast and scaling, then you have to start now. It takes time. Even

38:32.840 --> 38:38.360
though we have run extremely fast and lost 12 half years, we have just started. We are extracting

38:38.360 --> 38:43.800
value. Many of the companies I worked with and seen doing these things, they wait too long. They

38:43.800 --> 38:48.040
want to build the perfect infrastructure, they want to build the perfect model, they want to evaluate,

38:48.040 --> 38:53.320
they want to get everybody on board. Of course, they call the management, management is extremely

38:53.320 --> 38:58.280
important. Communication is extremely important, but at some point you just have to say, let's just

38:58.280 --> 39:05.640
do it. The start up mentality, if there's value on the table, let's go out and get it. Scaling is

39:06.680 --> 39:13.880
being an entrepreneur, where you start something from from zero, you have to have a bit of guts as

39:13.880 --> 39:20.280
well and just go with the notion. And just to get tactical on that particular point,

39:20.280 --> 39:31.000
often with these machine learning projects in particular, the looming perfection or the

39:32.040 --> 39:38.440
small percent of increase in whatever your target metric is, always an temptation out there.

39:38.440 --> 39:46.680
How do you and your teams stay focused and know when done is, where in the process do you know

39:46.680 --> 39:54.840
that and how do you define it? It's super hard in case by case, but at some point you have to have

39:54.840 --> 40:00.440
a baseline, you have to have a target, but it's like you say in software, they shift with every

40:00.440 --> 40:06.840
delivery. This is not the research lab. We do have one of those as well, and they have different

40:07.720 --> 40:12.520
prerequisites and different targets. What we want to get to here is we want to be able to

40:12.520 --> 40:18.360
ship and show something within every sprint. Every PEI needs to be able to ship something,

40:19.400 --> 40:24.760
so don't expect to be able to sit and fiddle around and try to optimize for too long.

40:25.880 --> 40:29.880
And you have to work with your stakeholders as well and agree on a level and have an open

40:29.880 --> 40:35.400
dialogue. What we don't want are unicorn data scientists that solves everything themselves.

40:36.280 --> 40:40.920
What we want is talented individuals to work together with the team and have a transparent

40:40.920 --> 40:45.720
dialogue around their process and what's hard, what's not working, so that everybody can take

40:45.720 --> 40:49.960
an informed decision if we should go to production with what they have or if we should wait in other

40:49.960 --> 40:59.400
sprits. You've talked a bit about thinking like a startup entrepreneur. You've mentioned

41:00.680 --> 41:06.840
terms that we know from Silicon Valley companies, OKRs and technical debt and the like.

41:06.840 --> 41:14.840
You know, clearly you're trying to operate like a startup within H&M Group. Does that create

41:14.840 --> 41:21.320
friction for you in a large established enterprise and how have you addressed those kinds of issues

41:21.320 --> 41:30.520
if you've encountered them? Definitely. I've seen people looking at us and saying why can they

41:30.520 --> 41:36.360
do these type of things without actually looking at themselves and try it. I think what it comes

41:36.360 --> 41:45.480
to is having a good story and communication around these topics. What I try to do in my communication

41:45.480 --> 41:50.920
is that I'm doing this for the entire company. This is for the better good of this company. It's

41:50.920 --> 41:57.560
not for just the success of the AI department. So the story is really around how we as a company

41:57.560 --> 42:02.360
come around and it's not about threatening other people. It's about amplifying other people

42:02.360 --> 42:09.480
to make sure that the people in this organization get to stay away from the boring long tail type

42:09.480 --> 42:15.240
of problems and get to focus on the really interesting stuff. AI is really good at the long tail

42:15.240 --> 42:22.040
type of problems and let's be humans that can focus on the creative things, the development of

42:22.040 --> 42:26.680
the organization and the business. So we try to position ourselves not as a threat, but as an

42:26.680 --> 42:34.040
enabler for people in this organization to be their best themself. Awesome. Is there

42:35.800 --> 42:43.080
is part of the way you talk about what your group is doing? Do you have some moonshot

42:43.960 --> 42:51.640
project or vision that kind of captures what you're looking to create over the long term?

42:51.640 --> 42:57.800
Yeah, I think it goes back to the tech clip we want to do. We want to have all core operational

42:57.800 --> 43:05.640
decisions amplified by AI by 2025. That's where we want to be and I think it's possible with the

43:05.640 --> 43:13.320
strategy that we have created and I truly believe that if we're able to onboard more resources

43:13.320 --> 43:21.000
of talent and grow the president we will be able to transform this company to a truly an AI

43:21.000 --> 43:27.080
first type of company. Awesome, awesome. Well, Ariel, thanks so much for taking the time to share a bit

43:27.080 --> 43:57.000
about what you're up to. Very cool stuff. Thank you so much. That's your beer. My pleasure, thanks.

