WEBVTT

00:00.000 --> 00:16.320
Hello and welcome to another episode of Twimble Talk, the podcast why interview interesting

00:16.320 --> 00:21.480
people, doing interesting things in machine learning and artificial intelligence.

00:21.480 --> 00:36.480
I'm your host Sam Charrington, they say that time waits for no one and that is also true

00:36.480 --> 00:41.880
of our discounted pricing for the upcoming Twimblecon AI Platforms conference.

00:41.880 --> 00:46.560
If you've been holding off on getting registered, you have until midnight tonight, that's

00:46.560 --> 00:54.600
Friday, September 6th, to take advantage of our early registration rate of $5.99.

00:54.600 --> 01:00.080
With your registration, you'll see my keynote interviews with industry luminaries like Andruing.

01:00.080 --> 01:04.800
You'll get presentations and panels from presenters at great companies like Levi Strauss,

01:04.800 --> 01:10.720
Capital One, Twitter, StitchFix, Airbnb, Nvidia, and a whole bunch more.

01:10.720 --> 01:14.520
And you'll get to meet and network with an amazing community of folks that includes

01:14.520 --> 01:20.520
our speakers, a bunch of former podcast guests that'll be in attendance, and your peers

01:20.520 --> 01:25.480
working at the cutting edge of building and enabling real-world enterprise machine learning

01:25.480 --> 01:27.000
and AI.

01:27.000 --> 01:31.320
To register, visit twimblecon.com slash register.

01:31.320 --> 01:35.480
And while you're there, hit me up on the chat where I'd be happy to answer any questions

01:35.480 --> 01:40.320
or provide an extra special podcast listener only discount for you.

01:40.320 --> 01:45.080
All right, on to the show.

01:45.080 --> 01:46.680
All right, everyone.

01:46.680 --> 01:48.960
I am on the line with Brian Burke.

01:48.960 --> 01:53.320
Brian is a senior analytics specialist at ESPN.

01:53.320 --> 01:55.920
Brian, welcome to this week in machine learning and AI.

01:55.920 --> 01:56.920
Hi, Sam.

01:56.920 --> 01:58.520
Thanks for having me.

01:58.520 --> 02:01.600
Just as we started, you mentioned that you've been listening to the show for a couple of

02:01.600 --> 02:03.440
years.

02:03.440 --> 02:09.200
That being the case, you know that we speak to a lot of folks with really varied backgrounds

02:09.200 --> 02:15.040
on the show, but I think this may be the first time that we've ever talked to someone

02:15.040 --> 02:20.960
who started their career as a jet pilot, or at least no one's mentioned it thus far.

02:20.960 --> 02:24.960
How did you get from being a jet pilot to working in deep learning?

02:24.960 --> 02:27.240
I'd love to hear the story.

02:27.240 --> 02:29.560
Yeah, sure.

02:29.560 --> 02:38.760
I left the Navy in around 2005 and did some work in the defense industry.

02:38.760 --> 02:44.960
After flying jets in the Navy off of carriers, what I was doing was pretty boring.

02:44.960 --> 02:50.320
I had a lot of spare, you know, megahertz left over at the end of the day.

02:50.320 --> 02:52.720
And I was a big football fan.

02:52.720 --> 02:59.720
I noticed that the kind of the level of statistical analysis and common in the media was pretty

02:59.720 --> 03:00.720
lacking.

03:00.720 --> 03:01.920
I was pretty frustrated with it.

03:01.920 --> 03:06.760
I was like, the Navy had earlier had sent me to graduate school and put me through a program

03:06.760 --> 03:08.720
that was heavy in statistics.

03:08.720 --> 03:14.520
I had never used any of those in my career in the Navy, but once I left, I said, why don't

03:14.520 --> 03:21.200
we use some of the stuff that the military uses to win battles and wins wars to help

03:21.200 --> 03:22.960
win football games?

03:22.960 --> 03:27.880
And that was pretty ignorant of the money ball revolution and Sabre metrics and Bill

03:27.880 --> 03:28.880
James.

03:28.880 --> 03:31.120
I was completely unaware of that stuff.

03:31.120 --> 03:35.680
So it was kind of, but that was a big advantage because a lot of the baseball people were

03:35.680 --> 03:40.600
looking at football research and they were trying to use that same cookie cutter on football

03:40.600 --> 03:41.600
and just didn't work.

03:41.600 --> 03:43.200
It's a very different kind of sport.

03:43.200 --> 03:47.520
I kind of had this military background that was more appropriate way of looking at it.

03:47.520 --> 03:51.080
It was kind of two players, zero sum game theory approach.

03:51.080 --> 03:56.680
And you know, kind of like we say in a dogfight, like, you know, it's a it's a knife fight

03:56.680 --> 03:57.680
in a phone booth.

03:57.680 --> 03:59.720
You know, one guy's not going home that day.

03:59.720 --> 04:02.120
So that's kind of like that's kind of like a football game.

04:02.120 --> 04:06.920
That's football is probably the most, you know, martial sport there is.

04:06.920 --> 04:09.320
So that's what the motivation was.

04:09.320 --> 04:14.600
So I had some software left over from, you know, the trial period had ended from grad school

04:14.600 --> 04:16.760
and I was having a debate.

04:16.760 --> 04:22.840
I remember with a coworker of mine and we were talking about this defense win championships.

04:22.840 --> 04:26.640
And we were just going around in circles, just like most water cooler conversations like

04:26.640 --> 04:27.640
that.

04:27.640 --> 04:29.440
And I said, wait a minute, we can answer this.

04:29.440 --> 04:31.280
Let's just download the stats.

04:31.280 --> 04:34.400
I've got the software left in where we'll run over aggression.

04:34.400 --> 04:37.000
We'll have an answer by the end of lunch.

04:37.000 --> 04:39.120
And I just I love that.

04:39.120 --> 04:41.080
Yeah, I just got hooked.

04:41.080 --> 04:42.280
And I was like, we can do more.

04:42.280 --> 04:43.600
Oh, we can predict games with this.

04:43.600 --> 04:45.520
We can do all these sorts of things.

04:45.520 --> 04:50.040
And so I really got in on the ground floor of football analytics and a lot of the core

04:50.040 --> 04:57.040
models that are that are in use today throughout the league, you know, that the teams use

04:57.040 --> 05:01.320
themselves, I was I was the developer of things like that.

05:01.320 --> 05:07.200
So expected points, win probability model, some of the core metrics that all came out

05:07.200 --> 05:09.120
of that period.

05:09.120 --> 05:15.000
So a few years later, did you, you know, is it still as easy as, hey, let's just run

05:15.000 --> 05:16.400
a quick regression on that?

05:16.400 --> 05:23.160
Or did you learn from from that initial experience that it's there's a lot more to it?

05:23.160 --> 05:24.880
Well, that was that was it.

05:24.880 --> 05:30.280
I mean, it was I was mostly self taught a lot of these modeling approaches.

05:30.280 --> 05:38.520
And the world has really changed since 2005, just the explosion of data and tools and

05:38.520 --> 05:40.120
modeling approaches.

05:40.120 --> 05:44.720
And so you have to learn them as bad as quickly as they come out.

05:44.720 --> 05:47.320
And the paper we'll talk about today was no exception.

05:47.320 --> 05:52.280
I had to go learn, teach myself neural networks, just to kind of keep up with the state of

05:52.280 --> 05:53.280
the art.

05:53.280 --> 05:55.160
Yeah, well, let's dive into that.

05:55.160 --> 06:01.720
You wrote a paper called deep QB deep learning with player tracking to quantify quarterback

06:01.720 --> 06:05.080
decision making and performance.

06:05.080 --> 06:08.520
Tell us a little bit about the background of that paper.

06:08.520 --> 06:15.040
Well, at ESPN, we got access to player tracking data from the National Football League.

06:15.040 --> 06:20.120
So we have up to about four seasons worth of data now.

06:20.120 --> 06:23.360
We had about two and a half at the time into the paper.

06:23.360 --> 06:24.760
It's proprietary data.

06:24.760 --> 06:30.200
There are chips on each shoulder pad of each player and in every game for every play.

06:30.200 --> 06:37.840
And so we have a really accurate position, velocity, acceleration, orientation, data at

06:37.840 --> 06:41.640
10 hertz, 10 times per second, it updates.

06:41.640 --> 06:43.240
So and it's almost real time too.

06:43.240 --> 06:46.160
So we had there's an API we can tap into.

06:46.160 --> 06:50.000
And so when we got access to this data, this was even before the teams had access.

06:50.000 --> 06:51.000
So it was it was a lot.

06:51.000 --> 06:57.080
It was kind of the first true big data set that we had to wrestle with at ESPN on the

06:57.080 --> 06:58.080
sports side.

06:58.080 --> 07:04.800
How long have those chips been been in the, you know, been available?

07:04.800 --> 07:09.680
I think it's 2016, I think was the first full season that they did it.

07:09.680 --> 07:12.480
Yeah, so I think we have four full seasons now.

07:12.480 --> 07:16.680
And it was, I think the first season was a little bit more of a trial and the data is

07:16.680 --> 07:23.440
a little bit spotty, but 17, 18, 19, they've been improving it.

07:23.440 --> 07:27.400
So, so we got this data, we were like, well, we have to exploit it somehow.

07:27.400 --> 07:28.880
That's, that's getting advantage.

07:28.880 --> 07:29.880
What are we going to do?

07:29.880 --> 07:32.320
We came up with some, some pretty good ideas.

07:32.320 --> 07:36.920
Some things, some of our best things aren't even kind of machine learning.

07:36.920 --> 07:38.400
It's just simple geometry.

07:38.400 --> 07:45.160
So we can analyze blocks, for example, like, before we do that, I'm like, I'm trying

07:45.160 --> 07:52.720
to figure out the scale of this data in terms of, you know, number of teams, by number

07:52.720 --> 07:56.960
of games, by number of players, by 10 measurements a second.

07:56.960 --> 08:03.160
Can you help us kind of think through, you know, or get a sense for how much data we're

08:03.160 --> 08:05.600
actually talking about here?

08:05.600 --> 08:09.840
About one game would be about four gigabytes, I guess.

08:09.840 --> 08:14.120
So we can put, you can put one game at a time in your laptop and kind of chew on it.

08:14.120 --> 08:16.120
So that's kind of what I do.

08:16.120 --> 08:17.120
Okay.

08:17.120 --> 08:18.120
Yeah.

08:18.120 --> 08:24.360
So, yeah, to span across games, though, you have to, you have to really digest, you know,

08:24.360 --> 08:30.280
I would say 80% of the effort on this project was just digesting the data and processing

08:30.280 --> 08:34.680
it in a way that was manageable for, for analysis.

08:34.680 --> 08:41.440
You mentioned an API, like, are you going and downloading all the data from a giving game

08:41.440 --> 08:45.080
or do you need to, like, collect it in real time or something like that?

08:45.080 --> 08:48.920
No, it doesn't need to be collected in real time, although it could be.

08:48.920 --> 08:52.280
And we have been doing that for some spot analysis.

08:52.280 --> 08:56.000
So for money and I football, for example, okay.

08:56.000 --> 09:02.680
But yeah, we will, you can go back and get past games as well.

09:02.680 --> 09:09.480
So the system is called Next Gen Stats, that's the NFL's brand for the stats.

09:09.480 --> 09:16.280
It's highly proprietary, but as a media partner at the NFL, you know, we negotiated access.

09:16.280 --> 09:21.440
And so, yeah, we typically, I think we download a play at a time.

09:21.440 --> 09:23.560
Okay.

09:23.560 --> 09:35.560
And is the API or the, does the API allow you to download a specific play or do you have

09:35.560 --> 09:41.440
to do, like, play segmentation on your own at the game level to figure out, you know,

09:41.440 --> 09:45.080
when a play starts and when a play stops or do they, like, code that when they're collecting

09:45.080 --> 09:46.080
the data?

09:46.080 --> 09:48.040
No, they code that.

09:48.040 --> 09:49.040
Okay.

09:49.040 --> 09:50.040
They do an excellent job.

09:50.040 --> 09:52.040
I can't give them enough credit.

09:52.040 --> 09:55.880
So the certain events are tagged as well.

09:55.880 --> 10:01.320
So when the snap occurs, when there's, when the huddle breaks, you know, when a tackle

10:01.320 --> 10:05.120
occurs, all these, all these events are tagged.

10:05.120 --> 10:09.840
So we don't have to do a lot of our own kind of tagging.

10:09.840 --> 10:10.840
Okay.

10:10.840 --> 10:11.840
Okay.

10:11.840 --> 10:12.840
Great.

10:12.840 --> 10:13.840
Yeah.

10:13.840 --> 10:14.840
So apologies for interrupting you.

10:14.840 --> 10:18.360
I just, it was kind of curious about the data that you're working with.

10:18.360 --> 10:24.080
So you're saying that some of the things that you're working with, you know, don't

10:24.080 --> 10:25.480
even require a machine learning.

10:25.480 --> 10:31.640
You're able to do things just based on the geometry of the, is it the player formations

10:31.640 --> 10:34.120
that you're looking at from a geometry perspective?

10:34.120 --> 10:37.280
But that's one thing you can do, yeah.

10:37.280 --> 10:44.160
So for example, one of the keys advantages to the Los Angeles Rams offense last year was

10:44.160 --> 10:45.800
they were doing a couple of things.

10:45.800 --> 10:50.800
They would sprint from their huddle straight to the line of scrimmage and snap the ball

10:50.800 --> 10:52.120
real quick.

10:52.120 --> 10:57.680
And that wouldn't give defense as times to kind of swap what we call strong and weak sides

10:57.680 --> 11:01.440
and do a lot of last second preparation before the ball snapped.

11:01.440 --> 11:06.400
The other thing they would do is compress their formations, very tight formations, which

11:06.400 --> 11:14.360
made it difficult for past coverage players to play man-to-man defense.

11:14.360 --> 11:16.680
So it forced the hand of the defenses.

11:16.680 --> 11:20.960
So just very simple things, we could just measure the time between the huddle break and when

11:20.960 --> 11:25.400
the ball snapped for all the different teams and see which teams stand out and do analysis

11:25.400 --> 11:31.280
like that that doesn't really require any sort of number crunching beyond simple, you

11:31.280 --> 11:37.160
know, averages, you know, summary statistics or, you know, the width of form, you know, mean

11:37.160 --> 11:41.760
width of formations for different teams and see how things stand out.

11:41.760 --> 11:46.400
My favorite thing so far has been something that's been a bit of a holy grail on football

11:46.400 --> 11:49.560
for a long time, which is stats for linemen.

11:49.560 --> 11:54.480
So so much of football is kind of what we say in the trenches and it's these, these, the

11:54.480 --> 12:00.720
big guys who get no credit, you only hear their name when they mess up but they do so

12:00.720 --> 12:03.840
much of the work to make teams successful.

12:03.840 --> 12:08.840
But there's no real statistic, maybe for defensive past rushers, they're sacks and some other

12:08.840 --> 12:14.360
things like that, but they're not very telling, they're not very representative of overall

12:14.360 --> 12:15.960
performance.

12:15.960 --> 12:23.360
So what we did was we created a past blocking and past rushing metric that just looked

12:23.360 --> 12:24.960
at the geometry of the player.

12:24.960 --> 12:30.000
So I can tell who's blocking who, I can see who's being double teamed, I can see how

12:30.000 --> 12:32.440
long blocks are being held.

12:32.440 --> 12:40.520
So part of the problem in football is they're analyzing things the wrong way.

12:40.520 --> 12:44.240
You have to look at an offensive line as like a survival system.

12:44.240 --> 12:45.840
So it's like a systems engineering problem.

12:45.840 --> 12:47.680
It's kind of like a chain, right?

12:47.680 --> 12:53.360
And the first chain that breaks the weakest link in that chain is the one that really matters.

12:53.360 --> 12:59.120
So we look at how long that system can survive and do analysis like that.

12:59.120 --> 13:03.520
And it's no more than, I know if you're very, very close to me and your shoulders are oriented

13:03.520 --> 13:06.920
to me, then you must be trying to block me.

13:06.920 --> 13:12.040
And if I get closer to the quarterback than you are, then I've won that block or you're

13:12.040 --> 13:15.720
holding me either way, it's a win for me.

13:15.720 --> 13:21.200
So we can see how long those, those blocks are held and we do align in the sand just

13:21.200 --> 13:26.320
to keep things simple at 2.5 seconds, which is average time to throw, which is kind of

13:26.320 --> 13:31.560
benchmarking the league for how long you have to sustain a block and passing situation.

13:31.560 --> 13:35.920
And it's really taken off.

13:35.920 --> 13:41.400
We published like a first article about it on our website.

13:41.400 --> 13:47.480
And that afternoon we had NFL general manager's calling looking for full lists for all the

13:47.480 --> 13:48.960
players in the league.

13:48.960 --> 13:49.960
Oh, wow.

13:49.960 --> 13:56.680
Yeah, one of the things that strikes me hearing your description of this that, you know,

13:56.680 --> 14:04.640
is not all that dissimilar from the application of machine learning and the business type

14:04.640 --> 14:05.640
of context.

14:05.640 --> 14:12.160
You know, traditional business type of context is you're often needing to, you know, define

14:12.160 --> 14:16.640
the problem, formulate the problem, define the metrics that are important.

14:16.640 --> 14:20.800
And it sounds like, yeah, I would have thought coming into this conversation that, you know,

14:20.800 --> 14:26.280
we pretty well defined the important, you know, metrics in sports.

14:26.280 --> 14:30.240
Although, you know, now that I'm saying that, that's, you know, the whole thing with

14:30.240 --> 14:33.120
money ball was that we had all those metrics wrong, right?

14:33.120 --> 14:38.400
And it was really this, you know, get on first base probability that, you know, that hadn't

14:38.400 --> 14:42.720
really been looked at and kind of redefined the game.

14:42.720 --> 14:46.760
We figured out, you know, is there that, you know, one standout metric, kind of money ball

14:46.760 --> 14:47.760
metric and football?

14:47.760 --> 14:49.680
Have you figured that out yet?

14:49.680 --> 14:56.080
Or have you found several of these like the, the blocking example you just gave?

14:56.080 --> 15:02.640
Well, the blocking is really just an individual performance metric, which has been football.

15:02.640 --> 15:08.920
Baseball is really unique with exception of cricket in that it's really a simple sequential

15:08.920 --> 15:13.040
matchup problem between kind of pitcher and batter.

15:13.040 --> 15:17.880
And so you can isolate individual performance very, very easily in baseball.

15:17.880 --> 15:19.600
Football is a parallel system, right?

15:19.600 --> 15:21.640
There's 22 players on the field.

15:21.640 --> 15:27.720
There's 21 factorial interaction terms occurring between all the players.

15:27.720 --> 15:30.480
It's extremely chaotic.

15:30.480 --> 15:34.520
So we can't just, you know, run over aggression on certain things and different players

15:34.520 --> 15:39.280
have different roles, very specialized roles during plays or very different kinds of

15:39.280 --> 15:40.680
plays.

15:40.680 --> 15:45.960
So that's part of the, part of the distinction between, you know, the saber metrics

15:45.960 --> 15:49.360
guys trying to get into football, they couldn't really do that.

15:49.360 --> 15:57.600
The big breakthrough happened, I would say in 2009, and I was, I had just developed a

15:57.600 --> 16:02.200
win probability model and was really the first one that really worked that, that didn't

16:02.200 --> 16:06.320
give you kind of junky, you know, nonsense answers.

16:06.320 --> 16:09.720
And I was wondering what we can do with it.

16:09.720 --> 16:14.080
And so I thought this would be a really good decision analysis tool as far as the fourth

16:14.080 --> 16:15.400
down problem.

16:15.400 --> 16:19.560
So what to do on fourth down was this classic problem in football.

16:19.560 --> 16:23.600
You can punt, you can attempt a field goal or you can try to go for it and keep the ball.

16:23.600 --> 16:27.600
And there were, there was earlier research that said, well, you should be going for it,

16:27.600 --> 16:32.280
so a whole lot more often, stop hunting so frequently.

16:32.280 --> 16:37.440
That was a big believer in this research, but coaches would, we're rejecting it because

16:37.440 --> 16:42.080
the model, those models could not handle time and score.

16:42.080 --> 16:46.360
So depending on the time and score, you have different kind of risk tolerance.

16:46.360 --> 16:49.320
And that makes a huge difference, especially towards the end of the game.

16:49.320 --> 16:56.040
So we kind of went from Newtonian football analytics into relativity, football analytics,

16:56.040 --> 17:00.360
and we could kind of adapt things for time and score.

17:00.360 --> 17:05.840
And once we were able to do that, it basically gave us a general theory of football decision-making.

17:05.840 --> 17:10.800
And we could, we could decide what to do on fourth down, no one to go for a two point

17:10.800 --> 17:15.480
conversion, when to call a time out, any kind of game-level decision that a coach needs

17:15.480 --> 17:18.240
to make, we can analyze it.

17:18.240 --> 17:27.040
And so what allowed us to do that is that it was there, it sounds like data-driven models

17:27.040 --> 17:33.320
based on that, but was this machine learning or was this some other kind of technique that

17:33.320 --> 17:34.320
allowed us to get there?

17:34.320 --> 17:42.480
And what was the before, how sophisticated was the use of analytics that, in the theory

17:42.480 --> 17:47.240
that said that we were not passing enough?

17:47.240 --> 17:52.720
Yeah, well, there was, there was prior research by an economist named, named Romer, not

17:52.720 --> 18:00.400
the Nobel Laureate, but another one, he looked at using what's called an expected points

18:00.400 --> 18:08.840
model, which takes into account kind of field position, and the point value, the net expected

18:08.840 --> 18:13.520
point value of having the ball and having a first down at every single yardline on the

18:13.520 --> 18:14.520
field.

18:14.520 --> 18:23.280
From that, you could deduce, if you assume that the game is a point optimization contest

18:23.280 --> 18:27.800
for an infinite amount of time, then that model would apply.

18:27.800 --> 18:34.320
And that assumption of point maximization and infinite time works fairly well through

18:34.320 --> 18:39.360
the first three quarters of a game, and when the score is relatively close.

18:39.360 --> 18:43.800
But when a team is trailing by a lot of points, or well ahead by a lot of points, or in

18:43.800 --> 18:47.400
the end game in the fourth quarter, when time is a big factor.

18:47.400 --> 18:54.240
So for example, point maximization doesn't work if you, if you're down by one point, with

18:54.240 --> 18:58.880
one second left to play, you're not going to, you don't want to optimize your points,

18:58.880 --> 19:00.880
that might mean try for a touchdown.

19:00.880 --> 19:02.000
You just want to win the game.

19:02.000 --> 19:08.200
So going from point maximization to win probability maximization was this big jump.

19:08.200 --> 19:11.960
And yes, that was a big machine learning model.

19:11.960 --> 19:14.400
I was pretty new to all this.

19:14.400 --> 19:16.360
R was just kind of coming online.

19:16.360 --> 19:20.560
I used SPSS in grad school.

19:20.560 --> 19:24.160
But what I wanted for my purposes didn't really exist.

19:24.160 --> 19:28.040
I wanted to use non-parametric regressions.

19:28.040 --> 19:35.800
And so I taught myself, what's they called the Excel Basic Plug-in.

19:35.800 --> 19:36.800
Okay.

19:36.800 --> 19:51.920
And I created my own lowest function and use that to build out the models.

19:51.920 --> 19:58.120
And the other thing is that football scoring happens in these chunks, like seven points

19:58.120 --> 20:00.920
and three points.

20:00.920 --> 20:06.200
And so you can't regress over points that they're discrete chunks.

20:06.200 --> 20:13.560
So being ahead by two points is not twice as good as being ahead by one point, for example.

20:13.560 --> 20:18.080
You mentioned wanting to apply a non-parametric regression to this.

20:18.080 --> 20:20.880
Why non-parametric?

20:20.880 --> 20:25.880
Because these curves were, you could use splined regressions.

20:25.880 --> 20:29.640
You could use, it was very non-linear.

20:29.640 --> 20:38.120
It was not something that they say quadratics or polynomial type regression lines would

20:38.120 --> 20:39.440
adapt well to.

20:39.440 --> 20:46.400
So I wanted something more flexible, especially towards the end game, things get very dynamic.

20:46.400 --> 20:55.920
And so these curves, these wind probability curves, basically the thing of a chart of maybe

20:55.920 --> 21:01.840
the y-axis is wind probability, the x-axis is field position, and we're looking at slices

21:01.840 --> 21:04.360
of time and score.

21:04.360 --> 21:09.920
And so basically you get a bunch of curves, and those curves can get pretty dynamic toward

21:09.920 --> 21:11.480
the end game.

21:11.480 --> 21:17.920
And so this was, did you say 2009 that the wind probability model, you came out with that?

21:17.920 --> 21:23.280
Yeah, I think I started working on that, and what I was able to do is acquire a big

21:23.280 --> 21:31.720
library of play by play data, and that was, it was just this confluence of computing power

21:31.720 --> 21:35.000
and tools and the data that's being available online.

21:35.000 --> 21:39.360
So it was just kind of these things just all happened at the same time, and I just happened

21:39.360 --> 21:44.800
to have the spare time and the interest to tackle that.

21:44.800 --> 21:52.960
And yeah, so it was 2009, and I'll never forget, I had a brief 15 minutes of notoriety,

21:52.960 --> 21:58.640
the Patriots, and Bill Belichick went for an infamous fourth down, a lateening game against

21:58.640 --> 22:02.840
Peyton Manning's Colts in 2009, was November 2009.

22:02.840 --> 22:06.820
And I was already fairly established, I was writing for the New York Times and doing

22:06.820 --> 22:08.720
analysis for them.

22:08.720 --> 22:14.480
And I wrote, I said, everybody thought that Bill Belichick going for it with a lead was

22:14.480 --> 22:17.800
a fourth and two on his own, 36, something like that.

22:17.800 --> 22:20.560
And by the book, you always plan.

22:20.560 --> 22:21.560
And I wrote an article.

22:21.560 --> 22:26.680
I said, no, actually, it was a good decision to go for it, even though it failed.

22:26.680 --> 22:27.760
And here's why.

22:27.760 --> 22:32.440
And it was just, you know, once you do, once you build the models to apply them, it only

22:32.440 --> 22:36.120
requires a tiny bit of, you know, algebra.

22:36.120 --> 22:38.760
And it's one line of algebra.

22:38.760 --> 22:43.400
And the next thing I knew, Sports Illustrator was calling.

22:43.400 --> 22:47.280
He expanded a big feature on me the next Sunday.

22:47.280 --> 22:50.880
And so it was just by luck that this happened.

22:50.880 --> 22:54.720
And I think that got a lot of attention throughout the league.

22:54.720 --> 22:57.840
And teams started thinking about analytics at that point.

22:57.840 --> 23:02.560
So I think we digress a little bit from deep QB.

23:02.560 --> 23:10.800
So you have all this data, well, it was deep QB based on only the shoulder chip data

23:10.800 --> 23:14.880
or there are other sources that you pulled into that model.

23:14.880 --> 23:20.680
Well, we used some of the metadata from the play itself, so down distance, yard line.

23:20.680 --> 23:27.880
And we also collect by hand at ESPN, we call it video analysis tracking.

23:27.880 --> 23:32.400
And we have a human person looking at each play in near real time.

23:32.400 --> 23:38.840
And they'll say, was this, you know, play action pass or was this a drop?

23:38.840 --> 23:40.320
So it was a good pass.

23:40.320 --> 23:43.640
It landed right in the receiver's hands and you should have caught it, but you just didn't

23:43.640 --> 23:44.640
make the play.

23:44.640 --> 23:49.960
So little things like that was added to the, added to the player tracking data.

23:49.960 --> 23:50.960
Got it, got it.

23:50.960 --> 23:52.760
And I think we skipped past the punch line.

23:52.760 --> 23:56.760
What's the key problem that you're trying to solve or answer that you're trying to get

23:56.760 --> 23:58.560
at with deep QB?

23:58.560 --> 24:03.520
Well, I was interested in quarterback decision making.

24:03.520 --> 24:08.440
That's probably the most mysterious yet most important part of football, especially in

24:08.440 --> 24:13.000
the NFL where it's really a passing game and the quarterback is so important.

24:13.000 --> 24:16.200
And that decision making, you can, you can analyze physical skills, right, like running

24:16.200 --> 24:19.000
and jumping and strength and things like that.

24:19.000 --> 24:25.880
But it's really hard to quantify decision making, especially under pressure in a highly

24:25.880 --> 24:27.680
dangerous situation.

24:27.680 --> 24:31.880
So it reminded me of my days as a fighter pilot.

24:31.880 --> 24:38.880
I wasn't the athlete that Cam Newton is, but when I strapped an F-18 on my back, you

24:38.880 --> 24:41.480
know, we were all Cam Newton's out there.

24:41.480 --> 24:48.480
And we all had to make kind of life and death decisions under, you know, great dress.

24:48.480 --> 24:51.320
And then, you know, under, under uncertainty as well.

24:51.320 --> 24:52.720
And so I saw the parallels.

24:52.720 --> 24:57.040
I was very interested in that and so I thought, okay, look, how would we, how would we

24:57.040 --> 25:00.120
examine quarterback decision making?

25:00.120 --> 25:04.760
And so what are the, tell us about the model that you came up with to, to do that?

25:04.760 --> 25:09.280
Well, what I wanted to do is predict, use a model to try to predict which quarterbacks,

25:09.280 --> 25:14.040
or which receiver of the five eligible receivers a quarterback would throw to.

25:14.040 --> 25:18.800
The idea was that I wanted to identify those quarterbacks who are making good reads and

25:18.800 --> 25:22.240
identifying the best receiver to throw to.

25:22.240 --> 25:24.640
So this is a decision, the SMA.

25:24.640 --> 25:28.520
He has to choose between one and five to try to throw to.

25:28.520 --> 25:32.120
And that's the key decision I wanted to look at.

25:32.120 --> 25:37.560
So what the model was trying to do is try to look at the play itself, look at the presentation,

25:37.560 --> 25:43.280
the geometry, the velocities, the positions of all the players on the field and say, who

25:43.280 --> 25:48.600
should an NFL quarterback throw to, given this picture presented to the quarterback?

25:48.600 --> 25:53.000
The idea was, it was kind of a epistemological sleight of hand, it was like, well, these

25:53.000 --> 25:56.000
quarterbacks are all really, really good, they're the best in the world.

25:56.000 --> 26:01.720
So the average typical quarterback is probably making the right decision.

26:01.720 --> 26:07.480
And therefore I'm going to compare each individual quarterback's performance, who, you know,

26:07.480 --> 26:13.600
which receiver he does throw to with what the model suggests the best receiver to throw

26:13.600 --> 26:14.840
to would be.

26:14.840 --> 26:17.600
And so that was the idea.

26:17.600 --> 26:26.400
And did your data include characteristics of the receiver or is it solely based on the

26:26.400 --> 26:36.120
play geometry and the options available from a field position perspective as opposed to

26:36.120 --> 26:40.960
the, you know, some kind of data talking about the receiver's performance historically

26:40.960 --> 26:42.880
in that kind of situation?

26:42.880 --> 26:50.320
No, unfortunately, no, the, there's really no, like, the data has no like Z axis.

26:50.320 --> 26:54.960
So there's no, we don't know how high or how high jumps or how high the ball was thrown

26:54.960 --> 27:00.680
or we don't, we don't know that we do know things about the receiver as far as what's

27:00.680 --> 27:07.400
his velocities and accelerations and things like that, which his individual talents certainly

27:07.400 --> 27:09.000
are big influences on.

27:09.000 --> 27:13.920
So, you know, but what we don't, what we don't have is the hands, you know, some receivers

27:13.920 --> 27:18.640
are just have better hands, they just have a knack for catching balls.

27:18.640 --> 27:24.680
So unfortunately, you know, but we're aggregating over, you know, a large, very large data set.

27:24.680 --> 27:31.200
So the, you know, the idea there is that it's going to average out.

27:31.200 --> 27:40.240
So you create this model that is trained on the historical decisions that quarterbacks

27:40.240 --> 27:45.160
make again with this assumption that they're all good quarterbacks and then you want to

27:45.160 --> 27:51.520
be able to compare any given quarterback decision with this model to see if it was, you

27:51.520 --> 27:56.640
know, a good decision or maybe the quarterback kind of, you know, made a bad decision under

27:56.640 --> 27:57.640
pressure or something.

27:57.640 --> 27:58.640
That's the general idea.

27:58.640 --> 27:59.640
Yeah.

27:59.640 --> 28:05.160
So the idea is to isolate the contribution of quarterback decision making to, so performance.

28:05.160 --> 28:07.040
So we can observe the performance on the field.

28:07.040 --> 28:12.320
We see, okay, that was a ten yard catch or that was incomplete pass, for example.

28:12.320 --> 28:18.520
How much was the quarterback decision contributing to success and failure in these plays?

28:18.520 --> 28:22.560
So I was thinking of a quarterback, if you're a football fan, you may be familiar with

28:22.560 --> 28:29.440
a quarterback named Tyrod Taylor, who is infamous for overlooking open receivers.

28:29.440 --> 28:33.240
And instead of throwing an open receiver, he was a little bit gun shy, he would take

28:33.240 --> 28:34.240
off of running.

28:34.240 --> 28:36.560
He was a very fast runner.

28:36.560 --> 28:40.640
And it was not a bad quarterback, but he just got, he was, coaches were very frustrated

28:40.640 --> 28:41.840
with him for that.

28:41.840 --> 28:44.480
And so I thought, can we identify something like this?

28:44.480 --> 28:48.640
Who's a good, who's making good reads and who's making poor reads?

28:48.640 --> 28:54.720
And so let's say, in the case of Tyrod Taylor, there is a receiver that's open, the model

28:54.720 --> 28:55.720
sees it.

28:55.720 --> 29:00.920
It says, hey, a typical NFL quarterback has an eight would throw to this receiver, 80%

29:00.920 --> 29:01.920
of the time.

29:01.920 --> 29:08.560
Tyrod is throwing to some, you know, running back, who's, you know, two yards deep instead,

29:08.560 --> 29:11.280
who the model doesn't think he should throw to.

29:11.280 --> 29:17.040
And then we would use those comparisons to make a judgment about quarterback decision-making

29:17.040 --> 29:18.040
abilities.

29:18.040 --> 29:19.040
Yeah.

29:19.040 --> 29:28.560
Does the model also work the other way, meaning can it identify quarterbacks that are able

29:28.560 --> 29:37.960
to, you know, have a higher than normal success percentage throwing to unlikely receivers

29:37.960 --> 29:39.320
or something like that?

29:39.320 --> 29:43.200
Yeah, absolutely. And in fact, that's, that's what happened.

29:43.200 --> 29:49.040
So the assumption about that kind of, you know, hand waving, I mentioned earlier, it wasn't

29:49.040 --> 29:50.040
really true.

29:50.040 --> 29:55.320
And what happens is, like, you want to say, like, hey, Aaron Rodgers is really good quarterback,

29:55.320 --> 29:58.080
he makes good reads, do what Aaron Rodgers would do.

29:58.080 --> 30:01.600
Just make the same decision he would make and you, you would tell it rookie to do that.

30:01.600 --> 30:05.440
But that would be calamitous because that rookie doesn't have the same skills and you

30:05.440 --> 30:09.680
have the same accuracy, the same arm strength, necessarily as Aaron Rodgers.

30:09.680 --> 30:15.160
So Aaron Rodgers is making different reads, making more aggressive reads than, say, a typical

30:15.160 --> 30:17.360
quarterback because he can't, right?

30:17.360 --> 30:18.920
There's a selection effect.

30:18.920 --> 30:25.240
And so, yeah, so, you know, the, the insight is in the difference, you know, from the, from

30:25.240 --> 30:26.240
the predicted.

30:26.240 --> 30:28.520
So the model is just there to establish a baseline.

30:28.520 --> 30:31.920
And then what's interesting is, are the deviations from the base?

30:31.920 --> 30:32.920
Right.

30:32.920 --> 30:33.920
Right.

30:33.920 --> 30:41.040
Like, yeah, tell us more about this model, what, what kind of model is it?

30:41.040 --> 30:43.760
It's, it's a neural network, very vanilla.

30:43.760 --> 30:47.640
It's just a feed forward network.

30:47.640 --> 30:52.160
I was really just getting started and I just wanted something that would work.

30:52.160 --> 30:57.960
So there's some other, other, you know, different kinds of models you could use.

30:57.960 --> 31:02.200
Some of the, the previous work in soccer and basketball had, would take the player tracking

31:02.200 --> 31:07.760
data kind of create a graphical image of player trajectories from that and then use

31:07.760 --> 31:16.040
convolutional neural networks or LSTM type recurrent neural networks.

31:16.040 --> 31:21.080
I just, I just took a snapshot in time and pass release and looked at the play and looked

31:21.080 --> 31:26.080
at where the receivers were, where the defenders were, all the relative geometries and velocities

31:26.080 --> 31:32.960
and built a, built a, I think it's this four layer feed forward network.

31:32.960 --> 31:37.440
And at the, at the end of it, you could ask it just about any question.

31:37.440 --> 31:43.080
So it was, what's kind of modular, I would say, tell me like we've been talking about

31:43.080 --> 31:48.120
until now, predict which of the five receivers you think this quarterback should throw

31:48.120 --> 31:49.120
to.

31:49.120 --> 31:56.040
And or I could replace a predict the, the mean yardage gained you see on this play.

31:56.040 --> 32:02.680
Or predict the whether or not this is going to be intercepted or not or completed or incomplete.

32:02.680 --> 32:09.160
So you could ask the model the same question and the, what really surprised me was that when

32:09.160 --> 32:13.240
I was going through and kind of tuning all the hyper parameters, all the, you know, number

32:13.240 --> 32:17.880
of nodes and layers and things like that, it was really in, the results were invariant

32:17.880 --> 32:22.960
to that structure, where the structure was really dependent on the, the data.

32:22.960 --> 32:27.840
And since I was feeding it the same data, but asking it different questions, I could keep

32:27.840 --> 32:33.480
the same network structure and just kind of change the, the final layer and get, get

32:33.480 --> 32:35.120
very good results.

32:35.120 --> 32:39.280
The network was relatively straightforward.

32:39.280 --> 32:40.960
Did you, you mentioned R earlier?

32:40.960 --> 32:44.040
Did you end up doing this in R or something else?

32:44.040 --> 32:45.040
Yeah.

32:45.040 --> 32:50.440
Well, it's a plug in through Python, but I used to say an Excel plug.

32:50.440 --> 32:56.080
Yeah, no, I've graduated from those days.

32:56.080 --> 32:57.560
I'm on R cripple.

32:57.560 --> 33:05.080
I mean, I'm fluent in R and, but I can probably, you know, order dinner in Python, but that's

33:05.080 --> 33:06.080
about it.

33:06.080 --> 33:14.760
But there's a great plug in through R. So, and since I was doing all the data, building

33:14.760 --> 33:19.200
and processing through R, it was very handy to just stay in that environment.

33:19.200 --> 33:26.280
So, yeah, Keras with, with TensorFlow on the, on the back end, and it, it, it, it, it's,

33:26.280 --> 33:27.800
it converged and started giving me result.

33:27.800 --> 33:28.960
I was very surprised.

33:28.960 --> 33:29.960
I'm my first try.

33:29.960 --> 33:34.480
Um, I was very excited when I started getting, uh, good results.

33:34.480 --> 33:37.040
You know, we talked a little bit about the structure of this data.

33:37.040 --> 33:43.520
You've got kind of games that are aggregates of plays and then you've got, um, you know,

33:43.520 --> 33:46.200
four years worth of games.

33:46.200 --> 33:53.040
How much of this data did you use to train on and what, did you find that, uh, you know,

33:53.040 --> 33:56.400
how much of it kind of got you to the point of diminishing returns?

33:56.400 --> 33:58.680
Uh, well, I used all the data I could.

33:58.680 --> 34:02.000
I didn't, I didn't really try to find out how little data I needed.

34:02.000 --> 34:08.880
Um, so I, I got, I guess, so I was using, um, I split the data into the three parts.

34:08.880 --> 34:14.120
So, you know, training, validation, and then test, and the test was set aside as just

34:14.120 --> 34:18.280
the, um, the, the current season at the time.

34:18.280 --> 34:21.440
So when I was writing up the paper, so that was the 2018 season.

34:21.440 --> 34:26.280
So I've got about three quarters of that 2018 season is, or it's kind of a test set.

34:26.280 --> 34:30.280
Then all the training and validation, all the tweaking and things that was done using,

34:30.280 --> 34:40.160
like about a 70, 30 split of, uh, the, the two seasons of 2020, 16 and 17, I suppose.

34:40.160 --> 34:47.760
And then, uh, and that, that, that was useful because the, the test results, right, which

34:47.760 --> 34:52.240
hadn't touched any of the, the training or validation data, it'd never been seen by the

34:52.240 --> 34:54.280
model in any, in any form.

34:54.280 --> 34:56.120
Um, that was the current season.

34:56.120 --> 35:02.080
So we could do actual analysis, like real world analysis using, using the test results.

35:02.080 --> 35:10.600
Is the model trained on a play at a time or, uh, and do you, is it trained, I'm assuming

35:10.600 --> 35:14.800
it's trained on only passing play, so you're filtering out that out based on these tags

35:14.800 --> 35:20.000
and, and you're training it as a, on a play at a time, or is there some other structure

35:20.000 --> 35:21.160
for the training data?

35:21.160 --> 35:23.240
Yeah, it's, it's only passing plays.

35:23.240 --> 35:25.440
And, in fact, it's only targeted passing plays.

35:25.440 --> 35:30.280
So any, any plays that were kind of throw away, um, got it throw away.

35:30.280 --> 35:32.960
So quarterback just didn't want to get sacked, so he throws it out of bounds.

35:32.960 --> 35:33.960
Yeah.

35:33.960 --> 35:34.960
Uh, those were discussed.

35:34.960 --> 35:35.960
So there was no target on it.

35:35.960 --> 35:37.960
I couldn't predict what, what the target was.

35:37.960 --> 35:39.800
Theoretically, you could make that a sixth option.

35:39.800 --> 35:43.600
I, I retrospect, but that wasn't really what I was interested in at the time.

35:43.600 --> 35:44.600
Yeah.

35:44.600 --> 35:45.600
Yeah.

35:45.600 --> 35:46.600
And then, um, yeah.

35:46.600 --> 35:51.080
So it's, it's trained, uh, yeah, basically a play, you know, the, the atom of this

35:51.080 --> 35:52.880
model is, is one play.

35:52.880 --> 35:57.760
Um, and, and, you know, but there was a batch of plays, obviously, that was fed through,

35:57.760 --> 35:59.920
um, you know, for the, for the, for the training.

35:59.920 --> 36:01.120
And how many plays total?

36:01.120 --> 36:03.480
Did you have access to your data, Seth?

36:03.480 --> 36:10.520
How, I think about a little bit foggy, but totally, about 36,000, wow.

36:10.520 --> 36:11.520
Okay.

36:11.520 --> 36:12.520
Plays, past plays.

36:12.520 --> 36:13.520
Yeah.

36:13.520 --> 36:15.640
And which I think is more than sufficient.

36:15.640 --> 36:21.600
Um, but I also had, I, I did this trick, um, where I just took the mirror image of every

36:21.600 --> 36:29.280
play and added that, uh, to, to the, uh, to the data, um, yet to be careful not to have

36:29.280 --> 36:34.720
a mirror, uh, have the mirror image be both in the validation or, um, or training, right?

36:34.720 --> 36:37.400
So you have to, you have to segregate those.

36:37.400 --> 36:41.840
But that way you're, you're getting even, you're getting even more data, um, with the

36:41.840 --> 36:44.560
assumption that there's symmetry, uh, to a play.

36:44.560 --> 36:49.000
So somebody who's wide open on the right side of the field would be wide open, just as wide

36:49.000 --> 36:50.520
open on the left side of the field.

36:50.520 --> 36:54.680
And that's generally true, except for quarterback handedness, you can have right handed

36:54.680 --> 36:59.040
quarterbacks, left handed quarterbacks, that might have an effect, um, but they're, they

36:59.040 --> 37:01.400
have to be no left handed quarterbacks for the last few years.

37:01.400 --> 37:02.400
So.

37:02.400 --> 37:03.400
Okay.

37:03.400 --> 37:06.320
That's an interesting approach to data augmentation.

37:06.320 --> 37:14.960
So when you do that mirroring given the handedness of the quarterbacks, are you just mirroring

37:14.960 --> 37:17.600
the line structure?

37:17.600 --> 37:21.960
I guess you're, the quarterback is just a point here so that doesn't matter, right?

37:21.960 --> 37:22.960
Yeah.

37:22.960 --> 37:28.920
Just like I was, you know, I just picked up this common technique with, um, you know, like,

37:28.920 --> 37:29.920
computer vision techniques, right?

37:29.920 --> 37:34.280
So if you want to identify a picture of a dog, you know, the dog kind of looking to the

37:34.280 --> 37:37.720
right, if you flip that image with a dog looking to the left, they're both dogs.

37:37.720 --> 37:38.720
Right.

37:38.720 --> 37:44.040
Um, so that, that was the idea, um, but it, it's complicated like I had to do it by hand

37:44.040 --> 37:45.040
essentially.

37:45.040 --> 37:50.040
So I have to, you know, do all these kind of geometric transformations, uh, including

37:50.040 --> 37:51.680
with all the angles as well.

37:51.680 --> 37:56.920
So, um, if you're heading, if you're heading zero, three zero on the, on the true play,

37:56.920 --> 38:01.880
on the mirrored play, you're heading, uh, you know, three, three zero, right?

38:01.880 --> 38:07.280
So, um, yeah, I was a little bit laborious, but, but, uh, it was in, in the interest of

38:07.280 --> 38:10.440
eating up the, the performance metric by one or two points.

38:10.440 --> 38:11.440
Okay.

38:11.440 --> 38:17.560
Uh, and you mentioned that you're, you segregated your, uh, validation and test sets based

38:17.560 --> 38:26.560
on the season, did you, uh, explore, you know, something that was more randomized or the,

38:26.560 --> 38:32.040
you know, any kind of implications of kind of bias season to season, like over a long

38:32.040 --> 38:35.240
time periods of time, players get, you know, better and stronger.

38:35.240 --> 38:39.400
Does that have any effect in a, a short term season to season?

38:39.400 --> 38:46.240
Well, yeah, I didn't do that, um, but it is well known that, um, quarterbacks to take

38:46.240 --> 38:48.040
a jump after their rookie year.

38:48.040 --> 38:51.800
So they're basically there, from their second year on, it's kind of their, their steady

38:51.800 --> 38:53.040
state performance level.

38:53.040 --> 38:56.480
So if you really want to know, like what, what, what is this quarterbacks career going

38:56.480 --> 38:57.640
to look like?

38:57.640 --> 39:02.280
With, with very rare exceptions, his, his second full season is very representative of,

39:02.280 --> 39:05.600
you know, he's pretty much hit his, his steady state at that point.

39:05.600 --> 39:11.800
So, um, but now, so because, you know, we, we, we aggregated the, the, the idea at first,

39:11.800 --> 39:15.720
anyway, there's a fourth variant of them I'll haven't talked about, but, um, there's

39:15.720 --> 39:22.160
a, uh, uh, it's basically the aggregation, the average quarterback, all kind of blended

39:22.160 --> 39:27.800
into one, um, was, was kind of like the, the proto, uh, deep QB.

39:27.800 --> 39:28.800
Okay.

39:28.800 --> 39:36.800
And so you kind of ignored the, you know, any implications of testing based on the totally

39:36.800 --> 39:41.040
separate season, as opposed to kind of randomized testing.

39:41.040 --> 39:47.080
We did, we did find that the, the 2018 performance was, we're, there was a drop in performance

39:47.080 --> 39:51.960
like you, you would typically expect, um, but there was an unusual, unusually high number

39:51.960 --> 39:57.160
of rookies, um, there was, it was it, it was generally an up year for passing.

39:57.160 --> 40:02.760
So there's year to year variants, um, due to things like, uh, just randomness, rule

40:02.760 --> 40:09.520
changes, uh, injuries to some of the elite quarterbacks will change, um, overall passing,

40:09.520 --> 40:14.760
the level of passing performance, uh, for the league as a whole year to year, uh, last

40:14.760 --> 40:16.760
year was a, was a big up year.

40:16.760 --> 40:22.040
Um, so yeah, there might be something, uh, to that, uh, you mentioned a fourth variant

40:22.040 --> 40:23.280
to the model.

40:23.280 --> 40:24.280
Yeah.

40:24.280 --> 40:28.680
This was the coolest one, but it didn't really, it didn't work as well as I had hoped,

40:28.680 --> 40:31.240
but it was so, I thought the idea was so cool.

40:31.240 --> 40:34.360
I had to put it in the paper anyway, people were like, yeah, there's two longer papers

40:34.360 --> 40:38.520
you got to cut it out, um, cut this part out and I was like, no, it's too cool.

40:38.520 --> 40:42.280
Um, so the idea was to use, uh, transfer learning.

40:42.280 --> 40:47.240
So, um, it's, it's kind of inspired by the same way, let's say biological brains work.

40:47.240 --> 40:53.200
So think of quarterback has to have these very intuitive and distinctive parts of his brain

40:53.200 --> 41:00.440
that understand things like distance and motion and, um, you know, speeds and this kind

41:00.440 --> 41:05.640
of intuitive, uh, physics model in, in our brains and we generally share those, right?

41:05.640 --> 41:07.520
We're all pretty good drivers, right?

41:07.520 --> 41:11.960
We're all, you can't, you know, humans have these share these, these faculties, but we

41:11.960 --> 41:16.080
don't all have the same decision-making, uh, I have an 18 year old son.

41:16.080 --> 41:21.520
So I know we don't all share the same decision, he's a very, he's, he's a very good decision

41:21.520 --> 41:26.240
maker actually for, for an 18 year old, but I was 18 once too, uh, so we don't all share

41:26.240 --> 41:31.480
the same, um, decision-making abilities, uh, so those executive functions may tend to

41:31.480 --> 41:36.320
differ much more than the, the lower level, uh, functions and those are the, you, you could

41:36.320 --> 41:38.000
model it the same way with neural networks.

41:38.000 --> 41:44.160
So the, so what I did was trained the lower level, the lower layers, lower level layers

41:44.160 --> 41:50.080
of the model on the, on the data set as a whole, just like I had done with the, that we've

41:50.080 --> 41:51.440
been talking about.

41:51.440 --> 41:57.000
And then what I would do is take the, the, like the top layers, which we could think of

41:57.000 --> 42:01.160
as the, the executive functions, the ones that, okay, we've digested this play.

42:01.160 --> 42:06.080
We understand, um, you know, where people are and what's important to look at and the

42:06.080 --> 42:08.080
relative velocities and things like that.

42:08.080 --> 42:10.760
Now, let's make a decision about who to throw to.

42:10.760 --> 42:17.520
And so those top layer, we, we froze the base layers, retrain the top layers, uh, just

42:17.520 --> 42:20.560
on the, um, on an individual quarterback.

42:20.560 --> 42:21.560
Uh-huh.

42:21.560 --> 42:26.840
And then we could, we could say, we could take like a Tom Brady or like I did with a paper,

42:26.840 --> 42:32.480
I took Drew Breeze and, um, uh, you could, you could basically download Drew Breeze's

42:32.480 --> 42:38.520
brain into, uh, you know, into a USB, um, drive or something like that would be the idea.

42:38.520 --> 42:42.400
And then just like we said before, like do what Aaron Rogers would do, right?

42:42.400 --> 42:47.480
So we, now we have a model of what Aaron Rogers would do or what Drew Breeze would do, given

42:47.480 --> 42:48.480
certain situations.

42:48.480 --> 42:52.880
So we could actually take a situation that Tom Brady was in and replace him with a rookie

42:52.880 --> 42:57.800
and say now, you know, what would the rookie do compared to Tom Brady in this same exact

42:57.800 --> 42:58.800
situation?

42:58.800 --> 43:05.000
Um, um, it was pretty ambitious, uh, the, the results weren't as interesting as I, as

43:05.000 --> 43:10.320
I thought, um, partially because the rookie, the rookies tend to throw a lot of checkdowns,

43:10.320 --> 43:15.400
which means they, they throw to, they throw short passes to relatively safe receivers,

43:15.400 --> 43:18.120
um, rather than taking a lot of risks.

43:18.120 --> 43:22.320
And the Saints offense happens to do that by design a lot, uh, they like, they have very

43:22.320 --> 43:26.840
good running backs last year and so, uh, Drew Breeze came up, so we ran a similarity

43:26.840 --> 43:32.200
metrics and all the rookies, uh, came up very similar to, to do Breeze, which is not

43:32.200 --> 43:34.600
what I, I had hope to see.

43:34.600 --> 43:40.240
And was that the only quarterback you tried to apply it to or was, or did you apply it

43:40.240 --> 43:46.120
to all of them and you found that it was kind of similarly not all that interesting for

43:46.120 --> 43:47.120
all of them?

43:47.120 --> 43:48.120
Yeah.

43:48.120 --> 43:54.920
Well, I tried some of the, uh, consensus elite, uh, quarterbacks of Brady's, um, Rogers,

43:54.920 --> 44:00.280
um, Breeze, and I can't think, I can't remember if I did with anyone else, but, uh, you

44:00.280 --> 44:04.360
know, I, I, I chose Breeze, the results were, were decent with him.

44:04.360 --> 44:08.560
And so, uh, researchers, progative, that's the one I, I put in the paper.

44:08.560 --> 44:09.560
Interesting.

44:09.560 --> 44:10.560
Yeah.

44:10.560 --> 44:14.480
That would have been really interesting if it were to, yeah, but it was just, it was just

44:14.480 --> 44:15.480
the first stab.

44:15.480 --> 44:21.760
I mean, really, this is the first, um, research like this is, uh, uh, beyond this is common

44:21.760 --> 44:26.880
place in basketball and soccer, but this is just the first stab at it with, with football

44:26.880 --> 44:29.280
or just kind of like, what's the, let's take a moonshot here.

44:29.280 --> 44:35.040
If we could do something, the coolest thing we, we want to do, uh, go, go run with it and,

44:35.040 --> 44:37.880
and see how far you can, you can carry the ball.

44:37.880 --> 44:42.320
What are your priorities for kind of pushing this further?

44:42.320 --> 44:45.080
Do you, do you use a relatively simple model?

44:45.080 --> 44:50.800
Do you think, uh, kind of a deeper, you know, state of the art, CNN might perform better

44:50.800 --> 44:57.880
or, you know, doing different things with the data and, you know, finding, uh, additional

44:57.880 --> 45:02.400
data sources to, uh, kind of supplement what you already have, like what, what do you

45:02.400 --> 45:04.640
have in mind for pushing this further?

45:04.640 --> 45:09.320
Well, the, the next step would be something that we, we could run this, what first time

45:09.320 --> 45:13.280
you say, we can run this model at 18 kind of time step in the play, you know, well before

45:13.280 --> 45:17.040
the past actually takes place, and so we can have a continuous analysis as the plague

45:17.040 --> 45:18.040
goes on.

45:18.040 --> 45:23.640
Um, but it's only trained on when, when the past is actually released.

45:23.640 --> 45:31.440
Um, the, the next step I would do if I had the time, um, would apply LSTM, um, models

45:31.440 --> 45:36.760
to, to the data, uh, throughout the, you know, so it would be continuous from the snap

45:36.760 --> 45:42.720
all the way, uh, through past release, and so we're accumulating information from the

45:42.720 --> 45:48.560
entire play, not just a time sliver at, um, past release, but, but do you keep in mind

45:48.560 --> 45:53.600
we do have velocity and acceleration information on each player, which kind of gives us, you

45:53.600 --> 45:59.200
know, back, you know, two time steps, I guess, right, uh, worth of information.

45:59.200 --> 46:02.200
But I think we can accumulate even more information.

46:02.200 --> 46:08.280
I, I don't think CNN's would be, would perform as well in theory because what the CNN's are

46:08.280 --> 46:14.680
trying to do is, is to get position and get the geometries, get the relative information

46:14.680 --> 46:22.000
from, from a graphic, uh, and then you, you, you apply that, um, you know, further down

46:22.000 --> 46:27.240
stream in a model, whereas we, we'd already have the X's and Y's and the distances and

46:27.240 --> 46:32.400
geometries and angles that, CNN would have to learn along the way.

46:32.400 --> 46:38.240
Um, so we can, uh, so I think using the raw inputs, the X Y's, the distances, uh,

46:38.240 --> 46:44.360
some, some features that are engineered, uh, kind of relative distances to nearest past

46:44.360 --> 46:48.880
coverage, uh, player, things like that, I think, would, uh, perform best.

46:48.880 --> 46:58.760
And I'm curious to, the extent to which explainability has come up, um, for, for you, do you

46:58.760 --> 47:05.200
get asked to, you know, be able to produce, uh, some justification for the predictions

47:05.200 --> 47:11.000
that the model is making and how have you, uh, have you handled that?

47:11.000 --> 47:12.760
Yeah, that's a tough question.

47:12.760 --> 47:17.160
Um, you, sometimes there's some head, head scratching results, you know, you don't

47:17.160 --> 47:19.840
under, why is the model saying that?

47:19.840 --> 47:25.000
And most of the time, though, it's very understandable and plausible, kind of obvious, um, but

47:25.000 --> 47:30.240
the, uh, on a case by case basis, you can look at these plays and, and, you know, make

47:30.240 --> 47:31.720
it, make a human judgment.

47:31.720 --> 47:37.000
Oh, if you know enough football, you understand why it's, it's making the decision it is,

47:37.000 --> 47:38.560
the model's working the way it is.

47:38.560 --> 47:43.680
Um, but, you know, unfortunately, explainability is a tough problem with neural networks.

47:43.680 --> 47:48.960
Um, there, you know, if, if I had the time, what I would do is I'd build like a, an app

47:48.960 --> 47:54.280
and application where you could kind of dial in, you could just drag and drop, um, players

47:54.280 --> 47:55.840
on a screen.

47:55.840 --> 47:59.840
And, uh, some of the Disney research guys I talked to had actually done this with, with

47:59.840 --> 48:06.720
basketball, or you could kind of move the players around and then see how that affects

48:06.720 --> 48:09.440
the, the model outputs.

48:09.440 --> 48:14.720
And that way you can directly, um, you know, test well, if I make this player closer

48:14.720 --> 48:16.480
to this other player, how does that affect things?

48:16.480 --> 48:19.320
If I make them further away, if I make them faster, how does that?

48:19.320 --> 48:23.040
So just by trial and error, you can, you can come to some form of understanding, but

48:23.040 --> 48:29.120
some general understanding about it is, is, uh, um, a difficult task.

48:29.120 --> 48:37.080
Awesome project or what suggestions would you have for, uh, folks that, you know, are listening

48:37.080 --> 48:44.320
to this also have a passion for sports and want to, uh, experiment with, uh, these types

48:44.320 --> 48:49.360
of models, uh, applied to, to sports.

48:49.360 --> 48:55.840
Well, there is player tracking data available, um, even for football, even for NFL football,

48:55.840 --> 49:00.200
but there are databases out there, some soccer, basketball is a little bit harder to get

49:00.200 --> 49:01.200
a hold of.

49:01.200 --> 49:05.520
I can't give you any, you know, I don't have a URL for you right now, but, um, except in

49:05.520 --> 49:06.520
football.

49:06.520 --> 49:14.640
So the NFL at the combine, um, uh, in the spring, late winter, early spring, the, at the

49:14.640 --> 49:18.360
combine, they held a, what they called a big data bowl.

49:18.360 --> 49:24.200
And with that, they released a subset of games, I think maybe about nine weeks, um, worth

49:24.200 --> 49:32.560
of games, and they released that data, uh, for, um, it basically caggle type competition.

49:32.560 --> 49:36.680
And then they, they had their winners and, um, you know, their finalists and announced

49:36.680 --> 49:38.160
the winner there at the combine.

49:38.160 --> 49:42.280
So that data, um, still exists out there on the, on the, on the web somewhere, so just

49:42.280 --> 49:49.520
Google, uh, big NFL big data bowl, um, and, uh, it'll take you to, um, it'll take you

49:49.520 --> 49:50.520
to that, that site.

49:50.520 --> 49:52.320
And I think it's still available.

49:52.320 --> 49:55.800
There are definite limitations on what you can do with that data.

49:55.800 --> 50:01.520
Um, the other thing is the NFL put out a punt play data in caggle, and that may still be

50:01.520 --> 50:02.520
available as well.

50:02.520 --> 50:07.080
So if you're interested, um, that, that's a, that's a great place to get started, just,

50:07.080 --> 50:11.520
just with the, with the data, um, but it, it's, uh, it's a lot to get your arm around.

50:11.520 --> 50:15.280
You have to start, you know, learning like, okay, that zero, zero point, where is that

50:15.280 --> 50:16.280
on the field?

50:16.280 --> 50:17.440
Is that at the back of the end zone?

50:17.440 --> 50:20.080
Is that, is this left oriented, right oriented?

50:20.080 --> 50:22.280
Is it, you know, which way is the, the zero?

50:22.280 --> 50:26.840
A degree, uh, heading access on here and, uh, is this in degrees or radiant?

50:26.840 --> 50:28.920
You know, all those things, that takes a while.

50:28.920 --> 50:32.400
So it's, it's definitely a chore, but, um, it was, it was a lot of fun.

50:32.400 --> 50:36.840
Well, Brian, thanks so much for taking the time to chat with us really, really interesting

50:36.840 --> 50:37.840
stuff.

50:37.840 --> 50:38.840
Yeah.

50:38.840 --> 50:39.840
Thanks for having me on, Tim.

50:39.840 --> 50:45.160
All right, everyone, that's our show for today.

50:45.160 --> 50:51.320
For more information on Brian or any of our guests, visit twimmelai.com.

50:51.320 --> 50:58.280
Be sure to register for twimmelcom AI platforms right now before prices go up to night.

50:58.280 --> 51:25.040
As always, thanks so much for listening and catch you next time.

