All right, everyone. I'm here with Mador Behehl. Mador is an assistant professor in the
Department of Computer Science at the University of Virginia. Mador, welcome to this one, my AI
podcast. Yeah, thank you for inviting me, Sam. I'm very happy to be here and excited to share
a thing or two about autonomous racing today. We are going to have a really interesting conversation.
As you mentioned, we're talking about autonomous racing, but before we dig in or race off into
that direction, I'd love to hear you share a little bit about your background and tell us how you
came to work in autonomous vehicles and autonomous racing. Sure, so I think for me, the trajectory
into AI and autonomous racing, it really started because of my love and affinity for robotics and
autonomous systems. So as far as I can remember, I've always been interested in robotics and that
that interest really took shape in my undergraduate back in India, where I even got the chance to sort
of lead the robotics club of my university. I must say, though, back then, you know, I was miles
away from doing anything principal than scientific and what would be an AI. It was mostly about
hacking your way through just getting this set of motor and arms to work and climbing staircase
or navigate some obstacle avoidance course. So I have no shame in admitting early on that I think
I probably have built five or half a dozen robots without ever having written a single piece of
mathematical equation or even drawing on matrix. So really, I think the the journey for me solidified
when I started attending grad school at the University of Pennsylvania and that's really where I
started, you know, learning about the theoretical underpinnings of the field and developing the
background in in control systems and embedded systems and optimization and eventually in machine
learning and autonomous systems and deep learning, which we all know are somewhat like the ingredients of
this, you know, AI field. And so for me, I think the the tipping point or what I realized was that
I had affinity to apply novel theoretical methods but to physical system, right? So that that
aspect of having to control something in the real world, whether that's a robot or it could be
even a building automation system, but something physical, something even safety critical or life
critical. That's something which is canonical to most of my research even today. And so when I
joined the University of Virginia a little over three and a half years ago, you know, I got very
excited and interested in safety aspects of AI for robotics for autonomous systems and self-driving
cars are a very good example for this sort of a problem and someone would consider self-driving cars
to be one of the biggest challenges in the field right now and one which has the potential to
transform mobility. So it got my attention and I was very fortunate to work with some super shop
students and very, you know, great colleagues and have the freedom to pursue some crazy ideas
including one that I would love to talk about today where we are trying to train artificial
intelligence to race self-driving cars at speeds of over 150 miles per hour. Yeah, that's awesome,
that's all. And we will talk about that. I'd like to start by understanding your perspective on
autonomous vehicles racing relative to kind of the more typical autonomous vehicle challenges,
right? In, you know, city driving on the one hand you've got to worry about, you know, pedestrians
and, you know, untrained drivers and balls rolling in the street. All these kinds of challenges
that, you know, we're struggling to figure out how to deal with safely, you know, not to mention
your path planning in an urban environment and that kind of thing.
And a track environment, your, you know, navigation, you know, is constrained quite a bit,
that may be simpler, you know, you may tell us if not. You don't have balls typically rolling
in the street, you don't have the pedestrians trying to run across the track, you know, how do you
think about racing versus, you know, commercial or passenger autonomous vehicles that we're
trying to develop in terms of, you know, relative challenging complexity.
Yeah, I think that's a very great, great question and it touches upon a very key issue that
you already identified that racing as a, as an environment is very different from, you know,
regular driving or urban driving. So, so, so let me maybe, you know, touch upon where I see the
connections and the differences between the two. So, so in a nutshell, you know, if you look at
what is happening in the autonomous vehicle industry today in terms of making a case for
whether or not their prototype car is safe, I really see like two, two ends of a spectrum,
which have to be somewhat navig, we have to navigate those in order to get to like a substantial
point where it can be considered safe enough to be running in the wild. So on one hand, I would say
the approach is what we can describe as brute force. So, let's drive millions of miles whether
in simulation or in the real world using hundreds of thousands of vehicles in the fleet.
And really, you know, start looking at where did the vehicle make a mistake, when did the safety
operator had to intervene, when did somebody disengage the autonomous mode and things like that.
So it's like a, you know, bucket list of, oh, here's something I have to get back to my engineers
and design, been back to the table. And so it, I don't want to undermine the value of real world
testing. I think it's irreplaceable, but at the same time, this sort of a exhaustive approach,
some might argue is, you know, the list of things that you have to account for are, you know,
uncountable or infinite in some sense, the list of possible things that can go wrong. And these include
you're checking off a list of corner cases. You've got a long list that you need to check off.
Yeah, and I would say that it's maybe even impossible to check it off completely. So you get into
this whole argument about what sort of a statistical guarantee could you offer at the end of the day.
I think that's a, that's a separate discussion to be had. So you're right, you know, and the part
of the problem is this heterogeneity in the number of objects that have to appear in the scene.
And even if you have perfect detection of these different agents, different vehicles or
lane markings, traffic signs, traffic lights, pedestrians, pets, they're a very long list.
Even if you had 100% accurate scene understanding, it's very difficult to anticipate what everybody
else is doing, which you need to do in order to plan your own sort of maneuver in the short term,
in like, you know, the next second or two seconds. So this is where I think most of the focus of
demonstrations and very impressive in many cases without a driver behind the wheels is being done
today. On the other end of this spectrum is more theoretical. We need some breakthrough, I would say,
in bridging AI and deep learning with giving guarantees or formal methods, which is like a sub-discipline
and computer science, right? So can we design algorithms which we can, you know, look at what bad
inputs will cause, what bad outputs. And in a nutshell, they have to be accountable for why they
are making a mistake, which is, you know, we are very far from that. There's some very exciting work
in that area as well, but we are not quite there yet, you know, so that breakthrough has to occur.
So this is a wide spectrum. There's many other approaches. I'm a little bit simplifying it.
And so I see there's many intermediate steps where you could still make progress and enhance
safety of cell driving cars. And so one idea or rather hypothesis that we are working on is what I
would call safety through agility, with the idea of being that if we can teach an autonomous
vehicle how to operate at the limits of its control, how to steer aggressively, how to break
aggressively, how to maneuver in an agile manner, then I would argue you are ultimately enhancing
the safety of that autonomous vehicle, right? So I'll be the first one to say that, you know,
driving safely and driving in an agile manner seem to be very contradictory, sort of objectives.
And so we are not proposing that you weave through traffic all the time.
But but instead there are some theoretical results to say those folks that drive a little fast
and weave through traffic help the traffic. Yeah, yeah, you're right. I can't argue with that.
But yeah, so the idea is we have all experienced this when we drive ourselves that there are
irrational drivers as a mix of sort of human and semi-economist eventually autonomous cars.
And so we've seen, you know, occasionally that driver who indicates they will take the right
exit but then the merge left in front of you at the last second or someone who just break
check you for no reason or speed up and overtaken an unsafe manner. So so so there's all these
dynamic situations that the self-driving car has to deal with. And I would even go as far as saying
that any collision or any imminent collision at the in the very last few milliseconds or even a second
looks a lot like, you know, racing because you are at a high speed and it's like a very abrupt
change in momentum. And so so the idea is that can we use racing as a means to learn this agile
controller, right? So this this controller that will augment the safe operation and but kick in
when there's an imminent collision. So so I jokingly say this but I think it's becoming true and
true. Everybody's teaching their vehicles to remain on the road. I'm teaching them with the
ability to go off road if it matters most if it ends up, you know, saving someone's life at the end
of the day. So so that's the connect between being safe and being agile. And so the next question
obviously is that how do you train a autonomous vehicle to be agile? And so that's where we draw
inspiration from motorsport racing. And we simply say that let's race these cars against each other
in these high speed close proximity situations, which are the norm rather than the exception when
it comes to being on the track, right? So most of racing is drivers trying to crash each other but
not quite. And even like impeding the progress of each other. So if we can capture those
patient temporal interactions and you know manifest them into a robust algorithm, then we have a
chance of bringing it back to urban driving and enhancing overall safety. So so in a nutshell,
you know, in motorsport racing, there's a saying that if everything seems under control,
then you're not going fast enough, right? That's the that's the mentality of the race driver.
And so what I'm trying to do is develop an AI with with that statement as its objective function.
Nice. So to kind of understand the the landscape and the approaches in autonomous racing on the
you know, urban driving kind of contemporary autonomous vehicles. One of the
dimensions in which there are strong opinions is kind of the you know vision first or vision only
approach, you know, versus kind of sensor fusion. That's kind of correlated in some ways to end
to end deep learning versus ensemble systems is. And I'm curious if the the racing setting has
specific implications in those dimensions or you know, or you know, as it just is diverse, the
directions that folks are going. Yeah. So the the short answer is there's a lot of room for
many approaches, but but I'll I'll get into a little bit in the weeds of, you know, answering that
more specifically. So so Geek out with me for a second here Sam. So, you know, and even it goes
back to even what she said earlier. So, yes, racing doesn't look visually anything like urban driving.
We don't have to solve this problem of detecting a million things on the track, right? There's
only a few things. You would be actually surprised if there's anything besides another car on the
track. We don't want that at all. So, so yes, you know, the equivalency is broken there. I think
the biggest sort of if I have to sort of outline it in terms of approaches or technical issues.
So every robot or every set of driving car has to solve these three problems of perception,
planning and control. That's the common DNA for all of robotics. And so so in perception,
we have a different set of problems in racing, but they are going to affect regular driving.
I mean, list some of the challenges itself. And then we can discuss whether vision only or
fusion is a better way to go about it. So, no one or there is literally very limited or non-existing
data. How does lidar and camera and radar perform at speeds excess of 150 miles per hour, right? So,
this vibration images are going to get blurred. Is there skew in the radar because you are moving
at hundreds of feet per second. So, by the time you receive some packet, things have already moved
around in your vicinity. And so, you know, what is the time specific to vehicles? I would have
imagined that, you know, we'd be drawing on military uses of or, you know, aeronautical uses of
radar and lidar and there would be lots of information about how they perform at speed.
Yeah, but would you be surprised like the sort of sensors that we are working on with the
full-scale car, which are the same sensors. So, let me maybe re-phrase my statement.
Yeah. The same family of sensors, which are on urban cars, haven't been tested yet on these
things. So, you are right. There's definitely something that I don't know of or this classified
sensor, which has been tested. Yeah. Yeah. And I thought you were referring to
lidar and radar as a broad class. No, no, no, no.
It has opposed to the specific, you know, working with a specific sensor. Yeah, that's a great
point because, you know, if we're talking about a machine learning, deep learning solution,
they're going to be quite sensitive to the actual sensors that you're using.
Yeah, you got it, right? So, the specific sensors themselves, we have to work with a lot of issues.
Like, even something that you may not think about for a regular car, there's a very important aspect
that all your sensor data has to be perfectly synchronized to the same clock.
And in regular driving, you can bear some offset between the lidar and the camera images,
right? So, the lidar is telling you there's an obstacle at this bearing and this distance,
but the camera is telling you that the pixel and the obstacle is offset.
You can get by, you can do some machine learning to fix that, learn the skew over time.
In racing, the margins become very, very thin, right? So, the burden then is shifted to the
software because you can only do so much hardware synchronization on the real sensor.
So, these are just few examples in the perception stack, right? So, let's move to planning and then
we can go back to the fusion question. So, in racing, I would say planning is somewhat harder
than regular driving because there is no structure to the traffic, right? So, racing has some
general etiquette that drivers respect each other. They don't want to crash their own car,
but it's not as spelled out as the rules of the road, which are embedded deep into
all the motion planning algorithms of regular self-dabbing vehicles today.
So, there's no concept of yield or, you know, you don't want to yield basically,
but at the same time, you don't want to go into unnecessary risks. So,
so there, one of the challenges that we have to solve is we have to build state estimation algorithms
that will give a best guess or the likelihood of what the racing driver
in front of us and behind us is going to do. And that's another thing about racing. You also have
to worry about what's behind you and not just everything is not just forward looking because you
have to sometimes maneuver to gain, like, positional advantage. And so, here there's a lot of room
for normal algorithms where, you know, you are planning in a manner that you want to trade off
risk versus your track position, but at the same time, you really don't want to thread the
needle between two cars if it's not absolute necessary to do so. So, so we made some, you know,
some algorithms, which are a mix of, I would say, this end-to-end idea and, you know,
classical approach of path planning. So, so I'll give you one example that in one of my work
with my PhD student Trent Weiss. So, he has developed this simulator. Essentially, he has taken
the world's most famous Formula One game. And this game is so photorealistic that it's used by
real F1 drivers during the pandemic because they couldn't race in the real world. And so,
it's very photorealistic. It's, you know, building upon decades of high-fidelity physics and
ray tracing graphics and whatnot. And this game is so realistic that it actually outputs a stream
of data to interface with these massive hardware simulators that these drivers train in.
So, we leverage that. We leverage that and we tap or listen into that data stream. And then we
can convert the game into a simulation environment, right? So, all of a sudden, we have methods to
look at the images of the camera from the game from the driver's perspective and annotate that
with some ground truth data about steering, what speed and heading and things like that.
So, this becomes a recipe to try some end-to-end methods. And we did try them and we found that
if you just do a complete pixels to control end-to-end implementation, where you are basing your
steering and throttle based off the scene information or pixel information or even a history of
pixel information or images, it's very brittle, right? So, it's simply just too brittle. The car
cannot recover. If you go off track, you basically ram into the wall for sure. And so, we had to fix
that by breaking this chain of not being purely end-to-end. And so, what we do is we take the images
and instead of mapping them to control values, we map them to trajectories, right? So, we map them
to, this is the path you want to follow for the next, you know, 100 milliseconds or one second
or whatever horizon. And so, that's a go-control. And then, yeah, then you use some low-level control,
like pure pursuit or model predictive control to actually figure out the steering and the throttle
actuation to follow that path. And what we have determined, very surprisingly and interestingly,
this is so robust, right? So, this is already as competitive as some of the best human
export drivers in the game. And, you know, it has a very good understanding of where the track
bounds are. And I must say that initially, we went in purely with this supervised learning
method. So, it's like a behavioral cloning. We have tons of data of drivers driving in the game.
But now, we have the ability to not do just purely supervised learning, but instead,
at runtime, we can actually generate many, many likely trajectories and then synthesize
the preferred trajectory, which has some desirable properties. So, you know, you don't want to turn
the wheel so sharply, or you don't want to minimize some derivative of the trajectory as well.
So, interestingly enough, the way we design these trajectories is using something called
Bezier curves, which have their region and computer graphics. And I just want to throw in this
trivia or snippet here that Pierre Bezier, who was the pioneer of the Bezier curve, he intent,
he used these curves, or when they were invented or used or popularized, he used them to design
the profile of Renault race cars, right? So, in a very serendipitous way, we are bringing the
racing routes of Bezier curves back into autonomous racing. And so, so the last thing I would say here
is, again, if you can put a pin in that for one sec and remember it, you mentioned a bunch of
things I wanted to fill in on, but one of the things that you talked about was you had this
this kind of path that your low-level system is recommending or a family of paths, and then you
have a set of constraints or desired properties. And I'm curious what those, you know, how those
are implemented are those heuristics or those also learned. Where does that, how do you inform
your model of those preferences? Yeah, so they are learned, although that is a possibility to use
some kind of inverse reinforcement learning to learn what objective function the drivers actually
use to generate their own paths, but we aren't there quite yet. So, so what we draw inspiration from
is the actual domain of racing, right? So, so my students have now we have
racing rules, we have watched videos, we have watched interviews of every crash that has happened
and how the drivers explain what went wrong in that crash. And so, this filtering process, right,
if generators set of candidate possible trajectories you could take, and then you have some way of
assigning cost to each trajectory. So, there could be a cost of you don't want to be, you know,
a certain distance laterally from any opponent, and that's, you know, gives the trajectory a certain
way. Another one, like I said before, as you want your trajectory to be have some smoothness
properties so that, you know, the car will spin out if you rank the the steering wheel because
these are very sensitive vehicle dynamics. And so, so this is the layer where we can
sprinkle in the objective functions for collision avoidance, for multi agent racing, for, you know,
taking the sticking as close as possible to the geometric race line. So, we have, you could call
it a heuristic, but it is these are heuristics which are derived from the domain of regular
motorsport racing. So, they're informed by, you know, what drivers typically look to maximize
one day race. So, yeah, so there is room to do some machine learning there as well, but we haven't
gotten to that yet. Awesome, awesome. The third point that you were mentioning.
Yeah, I mean, I was I was talking about that initially, the way we train our algorithm to map
images to trajectories in the front of the car ego vehicle on the track, it's it's it was using
behavioral cloning, which means that we have tons of data observed from the game of regular,
you know, online players. Now, we can even, you know, log into a session as a autonomous agent,
and have a car race autonomously amongst other humans without nobody ever finding out that
they're racing against a game AI, right? So, so, so, so essentially, we can get data,
an observed data of other players as well. And mind you, this is, this seems like a good idea,
but there's a lot of bad data, right? I mean, like, do you have some amateur players who are cutting
corners and we don't want our algorithms to pick that behavior, right? We wanted to have a clean
lap between the bounds of the track and set the fastest sort of lap time as well. So, that's why,
if you just do behavioral cloning, as you would in some any other machine learning setting,
so supervised learning, you just have image and here's the trajectory, which was taken by the
expert. So, just try to, you know, do some least square error between your trajectory and the
ground truth. So, that will get you halfway there, but because you are averaging over
multiple levels of expert data, it won't reach or get you to the point where you become competitive
in this in this setting. So, that's why we have to augment and take a step back from behavioral
cloning by saying that it's not proved end to just generate one trajectory and follow it blindly,
but let's generate a candidate of many possible trajectories and then use these sort of filtering
methods that are described earlier to choose between them. Then the thing that I was wondering was
if the behavioral cloning was related to or if you draw inspiration from imitation learning
as it plays out in like reinforcement learning scenarios? Yes, yes, I would say very much so,
it's a, they're very alike. And then we are, you know, the, we are somewhat hitting the ceiling
of the fact that this is not meant to be a simulator. We are just, it's a game that we have,
and by the way, anyone can, you know, buy the game for what 30 bucks and the API is open source,
you can run all our experiments and I think I provided the link to this as well. But the,
the, you know, this, this, this doesn't behave like a simulator where we could hook it up to some
kind of an open AIJM or reinforcement learning framework and run millions of instances very,
very fast to do exploration, exploitation. So we want to do that. I think we need much more
low level access to the game and we are in conversation with the actual manufacturer of the
the game itself for a much more formal collaboration than us just trying to infer things based
on what's readily available. So, you know, of the, the three areas that we've talked about,
I think perception is about what I expected. You kind of lose some complexity because you don't
have to worry about things coming on the road, but everything's happening much faster. Control,
you know, things are happening much faster. I expect that to be more complex.
Planning, I think, is the one that surprises me. I would have thought that planning was simplified
in the race environment because, you know, you go at the track is, is, is static and circular,
at least in a simple example. And everyone's goals are the same. You don't have people kind of
crossing through your, your domain that are trying to do random things that you have no idea or
can't even fathom or predict what they might be trying to accomplish. But it sounds like that's
not the case in your experience. Yeah, it's, it's, it's, it's not as easy. I mean, there are,
there's some truth to your sort of expectation, but I think the, the thing which I think surprised us
was, even this, even you would imagine it's easier to predict what your opponent is trying to do,
but it turns out it's, it's pretty complicated, right? Because, because there is no, they could be
literally the, the reachability of their likely positions in the future just explodes. Because,
because even a small maneuver can get picked up by some algorithm or a Kalman filter and they
will just extrapolate that to, well, they could be anywhere on the track. Well, if that's the case,
how do I make progress? Right? So, so I think getting that piece pitch perfect has been,
has been more of a challenge than I originally anticipated. And then the, the speed at the end
of the day is the bottom line, which makes all of this super, super difficult, right? So, we don't
have even the luxury of time to do something super complex at runtime, right? Because you may want
to say, okay, when I get to this turn, I'm going to do, you know, take this race line and if
somebody's on my race line, I'm going to plan something else. Well, you know, by the time you figure
out your result, you're already there at the, at the turn, right? So, because the, the car is moving
so fast. So, so getting that trade off of how do you dynamically adjust your horizon? You do,
and then there is, there is high level planning strategy, which comes into play, right? So,
you have to think about the effect of the vehicle dynamics on your planner. So, these cars are
highly specialized and they have very different dynamics than regular sedans or SUVs that we drive.
And so, therefore, you have to understand that the tires will behave differently after 10 laps.
You have to monitor tire temperature, tire pressure, wheel slip angles because the car will just
drift out if you try to, again, turn to send, it's very sensitive to the rate of your steering
that you input into the car itself. You have to account for aerodynamic effects, right? So, in the,
in the real race, and also in the simulation race that we are doing as part of preparing to,
you know, move to the real car, all cars are same, right? It's a battle of AI algorithms.
It's not about who has the deepest pockets or the most expensive motor. So, so, so if everything
is the same, you have two competitive cars. How do you ever overtake your opponent? And so, in
racing, there is this concept of slipstream or drafting. So, when you get behind an opponent,
opportunistically, you will gain upon them because you are moving through less, sort of dirty
air, less draft. And so, so, where's the path planner which takes that into account, right?
It's not there yet. So, so, there is just, the devilism, the details, basically, at the end of
the day. And that's why the motion planning algorithms, which exist for regular driving,
you can take inspiration from them. But because of the lack of structure, there's no lanes,
there's no defined rule set of what other opponents are really trying to do. And that's really what
got, you know, causes the problem. And if it speak to any real race driver, which I've had the,
the good fortune of doing so, they will tell you that they race with feel, okay? They can feel
when the car is sitting at the edge of its traction. They can feel when the rear left is going to
give out any time and so they can back off. In the track that we will race on in Indianapolis,
it's very unforgiving because there's a concrete barrier on the right hand side throughout the
over. So, there's literally, you know, no incentive to go right unless you are doing it to, to save
yourself from a crash. So, so, so there's just a pile of issues we have to work through and make sure
our planner is robust and can account for a combination of many of these issues that we are aware of.
So, you in talking about planning, you raised this issue of a kind of hierarchical planning,
you've got, you know, when you initially described it, you kind of project in, you know,
a few milliseconds and then you're choosing a path based on that. But then there's this higher
level planning that you might want to do. You reference the slipstream issue. I don't know if the
track that you'll be racing on are the ones that you model are oval tracks. But if you've got a more
complex track, you want to kind of hit the corn, hit the curves at a certain point, you know, low
on the curve. Like, how do you incorporate that type of higher level planning in? Is that part of
these heuristics that you include in the low level or is it a totally different process?
So, I think different teams are taking different approaches. In my case, we have actually taken
a cue from some data driven and, you know, some machine learning methods that can help us out there
as well. So, we have some data to infer from how racing experts navigate high level strategic
decisions. So, you know, there's even some very good evidence and footage of a driver intentionally
backing off at a corner because they know that on the straightaway, they will get into the slipstream
and be able to attempt in a better, you know, have a better shot at overtaking. So, so at the high
level, it boils down to, if I think about it, boils down to two or three high level things that we
have to always worry about. One is everybody, if they have done their homework, knows what is the
geometric fastest way around the track, right? That's sort of open knowledge. It's easy to determine.
And so, that's the one where if it's an oval, it's not as complex, but it's the one where you want to
carry the highest speed through every corner. So, you kind of go out on entry, you touch the apex and
then you exit wide as well. And that will give you the sort of the curve of the largest radius. So,
it's the minimum steering input. So, everybody knows that. Everybody wants to be on that, but that's
the problem, right? Because if someone else is on your race line, you have two options. So,
either you go into some kind of adaptive cruise control mode, where you just stay behind them
until they make a mistake and then you get your chance. Or you intentionally decide to deviate
from your race line and see if there's a wide enough gap and where you want to merge back on the
race line in front of them, all the while being aware of if there's any other cars which may
interfere in this entire maneuver. And so, so this multi agent aspect of high speed racing is also
what's making it very difficult. And it's a combination of both the short term path you want to plan.
And, you know, you don't want to be myopic. You don't want to go after every opportunity of overtaking
as well. So, that's where some strategy comes in. You want to be aware of what is your current track
position. So, are you behind the pack? Are you in the middle? How many laps are left?
What is the rate at which you can close the gap to your leading car? So, there's just
all of this racing knowledge has been embodied into a code essentially by my team over the past
year and a half. And, you know, that's what's allowing us to to match this high level strategic
controller with the low level planner. And then even lower than that is the controller itself,
which is going to make sure we can follow the plan that we regenerate. So, it's a mix of,
again, I know I'm giving the same answer again, but that's really the case. It's a mix of
these domain specific maneuvers or strategic decisions that we have been able to
encode into some kind of a logical sort of construct. And we're trying to implement that
using classical methods or using deep learning based approaches. Yeah. One thing comes to mind
in thinking about this that I'm not sure I can come up with any examples of having seen.
And that is, typically when we've got, you know, video off of a vehicle and we're labeling it,
we're labeling it for things in the video, your description makes me think about, you know,
is there is there some kind of model or process where it makes sense to label
video or some other set of fees for driver intent? Like, what is the driver trying to do here?
And then train a model based on trying to learn and to learn driver intent and, you know,
then feed that into control. Does that make any sense? It does. And, you know, what, like just
prior to this, this, this, this podcast earlier today, I am working with a bunch of people
who are helping us label some of the data from these videos which are openly available.
So, so you raise a good point about the intent and we can do a certain bit of that in the game
because in the formula one game, we can determine the track position of whatever cars
enough field of view. And a history of track position is an indicator of future trajectory of
the vehicle. And so that's actually the, the ingredients to this model which is doing the state
estimation for other agents, right? It is some kind of a recurrent neural network which is looking at
a history of intent of the driver and then trying to predict the most likely thing that driver
is going to do within my planning horizon. Having to capture intent just from like on board
camera footage is pretty difficult, I would say I haven't tried it. But you would be surprised
like even something that we may take for granted because, you know, like you would say, okay,
if we go back to perception, we don't even think about that detecting vehicles, how difficult of
that is a problem for said driving because there's a pre-trained networks on these massive
data sets that can classify 3D bounding boxes and volumes of wear vehicles is wear the
draggable surfaces. And we used some of these data sets and these pre-trained networks and we
told them can you now tell us where the racing cars are on the track and they were like no
better than a coin toss. So there's not even a specialized data set for doing bounding box
detection for racing vehicles because yeah, I mean, at the end of the day, if you detect four
wheels, it's likely a car. But the rear end of the vehicle, the side perspectives, they look very
different from these regular vehicle detection. So I'm having to lead that effort myself and we
have a corpus off, you know, tens of thousands of images now where we are detecting the bounding
boxes for the specialized Indy car looking vehicles. And so my feeling is once you can get to where,
let's say, the centroid of that vehicle detection is, then you start looking at a history of
image sequences and that will give you some some idea of the intent of the real driver as
opposed to the gaming driver. So there might be something, something too yet. We haven't done
it with real data and we are relying on our state estimator which is trained on the simulation
and the game yet to solve this problem of intent prediction there.
So we've talked about the the challenges relative to racing and you've got some specific
examples of the way you put the stuff to the test. You've hinted at one which is this
autonomous challenge. But you've got another one and I think you've got an example of that in
your background there. This one 10. Tell us about that. Yeah, so this is this is a I know if someone
is not looking at the video, there's a one 10 scale vehicle behind me. It's a fully autonomous
one 10 scale race car. So yeah, this is another one of my my brainchild and I really like
developed this when I was graduating out of my PhD degree at Penn. And so before I kind of
describe what this is all about and the in the autonomous challenge which is the next big thing
that we are currently navigating around. Let me prefix this by by just saying you know,
we do all the research and the cool things in our lab and we have access to all these resources.
But I've always felt that the way you know, there's a big gap between the way we conduct research
in cell driving and autonomous vehicles and the way we teach about these things to
undergraduates and graduate students alike. And so so a lot of the the initiative behind
developing this f 110 or this one 10 scale racing platform was to make autonomy accessible
for everyone right. So I actually truly believe that this is the best time to be working in AI
and autonomous vehicles and then you know, these these technologies are already sort of well
knit into the fabric of society. So so this this vehicle is essentially was a scale version of
what you would find on a regular cell driving prototype. So it has a lidar, it has cameras,
it has an IMU sensor, it has the same family of the GPU from Nvidia that you would find on full
scale cars. It has a wireless channel which you can remotely access for telemetry. And so
so we developed this and we made this open source. Anyone can go to f110.org and then you will
find this almost IKEA like instructions for how to put this together. And then you know,
you can put the hardware together. It's is reasonably priced but then there's the software part
right. So like I said before, this is all about improving algorithms of perception planning control.
So I actually teach a course on autonomous racing online and you can also find out on YouTube
it's not behind any paywall. It's just free. All the video lectures will walk you through first
understanding the software which is based in Ross or robot operating system. And then we gradually
go all the way to you know, path planning and perception and slam and mapping and then eventually
racing. And so there's a great this is a great tool for doing research. It's a good tool for
education. And for the past four years I've also been organizing the international f110
autonomous racing competitions at some, you know, premier venues and robotics and machine learning
and cyber physical systems. So teams from all over the world, they built their cars and then they
come and we compete in autonomous racing. In fact, long before we went to full-scale autonomous
racing, we already successfully showed the world's first autonomous overtake on month 10th scale,
right. So they had to do it. Like a practice run for the for the real deal.
Yeah, so this is this is an excellent platform. It's very popular. It's used by almost 15
institutions around the world. And now, you know, this this is this is and I like to say it's one
10th scale, but it's 10 times the fun. It's it's my favorite course to teach as well.
I love that the the AWS deep racer platform. Yeah, I have. I have. I think the I give them props for
bringing the price point to below $500, but I think this vehicle, not to kind of dismiss the AWS
effort, but the F1 10 vehicle is a lot more heavy duty and capable. So, you know, just to give
you an idea, this thing can go up to 16 miles per hour indoors, right. So it's impossible to run
behind it and keep track of it. The racer is not very fast. It's not fast. I think, but so I think
they did a good job of making sure that you have a like online simulator available. So they may
get the onboarding process easy, which is the bulk of the effort actually. We had to invest a ton of
time to make sure all the documentation, every single piece of what is needed to get started with
this is taken care of, right. So you can literally let get started if you have the hardware
and less than two hours. And so in in line of, you know, and so we cannot test the ideas on one 10
scale in my lab, I have about 20 of these cars in my lab. So we can do very complex maneuvers
with multiple cars, but you know, it has its limitations, right. So it's a different scale,
different parameters, but the breaking on this vehicle is not realistic and there's no error,
error effects at all. So our next big endeavor at UVA and my group is we are participating in this
indie autonomous challenge, which is essentially, you know, in my view, the DARPA grand challenge
for autonomous racing, right. So it's a million dollar race that will take place in October this year
at the historic Indianapolis Motorsport Speedway, which is considered as part of the top three tracks
in racing. So it's part of the triple crown and racing is what they call it. And so we will be
racing with some fellow innovators from US and from outside of of the country about seven or eight
cars I anticipate in in the world's first head to head fully autonomous race, where we can,
you know, aim to go above 150 miles per hour. That's the goal. And everybody's kind of trying to,
you know, fully immerse themselves to make that a reality. So, so, you know, just to just to quickly
remark on on the significance of this, if you look at motorsport racing or the history of motorsport
racing, it has always been the proving grounds for automotive technology. In fact, the reason it
started was because when people transition from horse driven carriages to horseless carriages,
they were very skeptical. And now we are transitioning from driver to driverless and there's
the same sort of skepticism here. So racing became as means to to show endurance and safety and
convince people that the engine is not going to blow up in your face and the brakes work properly
and everything is, you know, trustworthy. So I think a similar litmus test is now required for
the software stack for self driving. And so I think racing can become that proving ground where we
can push the AI for self driving towards limits and show that, you know, if you can race at
high speeds and close proximity when people are trying to intentionally block your progress
without crashing, that's a very significant token. And it could eventually have a huge bearing
on safety of regular autonomous driving. So I'm very excited to be involved in this challenge
from the very get go and we can't wait to get our hands on the actual race car and transfer our
knowledge from one times scale from the simulation on to the actual way code.
You've got a few months, but how close do you think you are in terms of being able to successfully
complete that challenge? Yeah, I'm a rational optimist fan. So I think it's,
yeah, I would be a miss to say that it's going to be easy. It's a very significant undertaking.
We all know as roboticists that when you work with the real thing, there's just a bunch of
messy real world problems that you have to overcome before you even get to the intellectual sort of
part of why your algorithm is better than others. So my feeling is we'll spend a solid few weeks
at a stretch to just work through these issues. And what it helps is because most of our competitors
are from other academic institutions. There is some collaboration happening at what is the
base level software that everybody will have access to. So because there's a lowest common
denominator that every team has to overcome before it becomes about the high level algorithms.
So it is a significant undertaking. We have access to some predetermined schedule where we have
reserved track time in Indy. And so my team and I will travel to Indy, we'll spend the entire
summer there, possibly even the next semester. And then on October, yeah, I'm literally running
besides my research lab and my own research, I'm also running a racing team on nights and
games. So it's very exciting. I have no qualms about it. This is sort of what really excites me.
I think it's going to be tough undertaking and just like any sport,
if the outcome is a reflection of how much effort you put in, then I think that's my own thinking
of it. So we'll go all in. We'll try to get this car running. Firstly, I don't think on the first
day we'll touch even 25 miles per hour. But it's slowly take your car through the paces and you
gain more confidence about your localization is working fine. You're confident that what you see
as the position of the car is where the car is on the track. So we have a long flight checklist,
if you will, that we have to go through. And then it becomes, you know, what did we miss when
we were designing all these cool ideas in the simulation? How did they plan out on the track?
What are the obvious things that we missed about the behavior of the car? And it's also,
we have more than just computer scientists on my team. We have people from mechanical engineering,
from systems engineering, from ECE embedded systems. There's actually a racing driver on my team
who has some background in NASCAR racing. So it's just a pretty elaborate gig that I'm going on right
now. That's awesome. Yeah, we started this talking about kind of what we can learn about safety
from racing. I'm curious how you when you think about, you know, putting this AI that you're
building into a full scale car, moving in 150 miles an hour. How do you think about the relationship
between speed and safety and, you know, being competitive, but also being safe? How do you approach
that? Yeah, so that's a tough one to really nail down. You know, speed is only useful if you are
facing the right direction, right? So the first thing is to, I think, be be prioritized safety
over speed because the cost of being unsafe is the ultimate price where you lose your car and
you can't compete. I know it's not. So, you know, my honest feeling is that while we strive to
go to these super high racing speed, it's going to be quite difficult to, you know, show that you
are overtaking and going close to the barrier and taking that super risk, which is all the excitement
about racing. You know, I honestly think that's a very tough ask. So this is not the only such
competition. It's not the last one for sure. So I think it's a process, right? So we have sort of
at the, just like with any field when you're at the frontier of a certain field, they're more
sort of unanswered questions than there are answers. I feel this one is in their realm. So
so we do prioritize collision avoidance actively, both in front of us and behind us. So even if the
car behind us is doing something erratic, we would rather not deal with that then to be like,
oh, let's push our elbows out and see what happens, right? So and part of it is this just mindset of
the roots of our research is in safety of AI, safe autonomous vehicle. So it would be kind of a
moot point if we just take an unnecessary risk and and crash our car, right? So as they say,
to finish first, first you have to finish, right? So that's I think a good summary of how we
approach the straight up between safety. At the same time, you know, we do want to push our car
to the limits of how fast it can go while respecting and behaving in expected manner. So maybe
my response to this sort of trade-off is we are comfortable going at the speed limit where the
car behaves as we expect it to behave. So as a racing team, we hate surprises. Okay, so if things are
deterministic, if we know how our car will behave in a given situation, sure, let's go for it.
But as soon as we begin to get into that gray area where, hey, we didn't anticipate that.
Oh, why did we make that staring adjustment? So maybe, you know, our models are a mess. They
were not designed for such speeds. So we have obviously, you know, mistuned some parameters
somewhere. But then we will apply the brakes literally and figuratively on our approach here.
Awesome. Well, Madhu, thanks so much for taking the time to share with us a bit about your journey
and what you're up to. It's very cool stuff. Yeah, thanks Sam for for again inviting me to this.
I had a really fun time, very enjoyable discussion and keep an eye out in October. You will likely
hear about this event. And yeah, I hope to be amongst the teams which crossed the finish line.
