Hello and welcome to another episode of Twimble Talk, the podcast where I interview interesting
people, doing interesting things in machine learning and artificial intelligence.
I'm your host Sam Charrington.
My guest on the show this week is Danny Lang, Vice President for Machine Learning and AI
at Video Game Technology Developer Unity Technologies.
Danny is well-traveled in the world of ML and AI and has had a hand in developing machine
learning platforms at companies like Uber, Amazon and Microsoft.
In this conversation, we cover a bunch of topics including how ML and AI are being used
in gaming, the importance of reinforcement learning in the future of game development,
the intersection between AI and augmented and virtual reality and the next steps in natural
character interaction.
But before we get to Danny, does anyone want to guess what today is?
Well, not really today but tomorrow.
And well, unless you hear this on Friday May 19th, not even really tomorrow for you.
In any case, what I'm trying to get at is that tomorrow is a very special day for the
Twimble family.
Yep, you guessed it, tomorrow May 20th is the one year anniversary of this week in Machine
Learning and AI.
I started this podcast last year as a way to share what I was learning about the field
and to be quite honest, I really had no idea what I was getting into.
But what an amazing ride it's been.
The amount of interest in the podcast has been incredible and I could not be more appreciative
of and impressed with the Twimble listener community.
Thank you so much.
We've been working really hard to be worthy of your attention by continuing to bring you
amazing content that you can't find anyplace else.
While we'd usually mention our quote contest now, which was inspired by the way by Twimble
listener Beth Ann Noble, I'd like to do something special this time around to celebrate our
birthday.
This week we'd like to announce a very special listener appreciation contest to honor the
occasion.
First prize in this contest will be a bronze pass to the upcoming O'Reilly AI conference
in New York City valued at $1,800.
I'll be there and I'd love to have you there as my guest.
Second prize is a brand new Google home powered by AI.
You know you can listen to the podcast on these, right?
And of course every entrant will win a couple of stickers, one for you and one for a friend
and of course our everlasting love and appreciation.
So how do you enter?
Well it's easy.
Leave us a review on iTunes or comment on this week's show notes page that'll be at twimble
AI dot com slash talk slash 24 telling us about your favorite twimble experience.
The things you've learned, your favorite moments on the show, etc.
It's that easy.
We'll select the winners on June 1st and announce the winners on the next show.
We'll have an alternate prize available for first place winners who know they can attend
the O'Reilly event, which would be of similar value as the second place prize.
But the details here are TBD.
All the contest details will be available on the show notes page.
So click right over or better yet, jump into your podcast app right now and leave us
a review and wish us happy birthday.
One more quick note before we get to Danny.
The future of data summit was earlier this week and wow, it was really an amazing event.
The speakers were just outstanding.
Obviously, most of you couldn't make it to the event.
So I'm working with the interop conference to see if I can publish the session recording
someplace and I'll let you know if I can.
Okay.
And now on to our show.
Hello, everyone.
I am on the line with Danny Lang.
Danny is vice president for AI and machine learning at Unity Technologies.
And I'm super excited to have him on as a guest.
Danny, why don't you say hi to the audience?
Hey there and thanks for having me.
Absolutely.
Absolutely.
So why don't we start by having you tell us a little bit about your background.
You have quite an impressive background in this field having built platforms that pretty
much all of the places that are, or many of the places that are doing very cool things
with ML and AI.
Why don't you tell us a little bit about that?
Sure.
Yeah.
I joined Unity Technologies about three months ago.
I saw gaming and VR and AR as a huge opportunity to go in and change it through AI and machine
learning.
But I think we'll talk more about that in a moment.
But before joining Unity Technologies, I was head of machine learning at Uber, which
is a complete different business.
At Uber, we used machine learning basically all over the company.
There were three really big areas.
One was drivers, riders and trips, where we used machine learning to give you a better
experience, both as a driver and a rider.
And then there's the whole map business of building maps for the Uber drivers, a lot
of machine learning there to basically convert street side imagery and other data into maps
automatically.
And then the last area is, of course, the famous self-driving course was involved in that
effort as well, a lot of machine learning there.
Of course.
And before Uber, I was general manager for machine learning at Amazon.
And it's also very, very interesting to see how Amazon really understood to use machine
learning all corners of the company.
I ran the elastic machine learning team, which was essentially a platform that other teams
could use to enable machine learning in their specific business areas.
So we had lots of teams using machine learning that way.
And before that, I was at Microsoft, I was also working on machine learning there.
So it goes on and on.
Many years ago, I spent eight years in two different startups where we were trying to
build virtual assistants, the ones that we know today as Alexa and Siri.
We tried to build them at that time for the earlier mobile phones.
That was pretty tough because the speech recognition at that time maybe had an accuracy
of 80 percent today.
What is it?
95.
So those were hard, hard times to do, to do AI because it didn't seem very smart.
We've made a lot of progress.
Oh, yeah.
And so how did you get into machine learning in the first place?
Did you study it in school?
Not early on.
This is very long.
So long time ago, I don't want to talk about it, but I got in when I was at IBM Research,
my key area was autonomous agents.
So it was a lot of the vision of having software that would make decisions on its own.
You would let it lose, I developed what we call mobile agents and it would basically
suffer objects that could move over the internet and adapt to local environments and things
like that.
But it was all sort of fairly engineering heavy, engineering heavy development, we designed
these, we implemented them and if you had a bug in there, it would get stuck on another
computer and not move on and things like that.
So I got really interested in how you could make these agents more resilient.
And that's sort of where we headed today with machine learning, with concepts like reinforcement
learning and other technologies that allow these objects to learn and adapt to the environment
then.
Okay.
Well, that is a really interesting topic, one that we want to dive into right now, where
I really wanted to go with this is, you know, we've talked about a lot of different applications
of machine learning on this podcast, but we've never talked about gaming.
And so I'm super excited to have you on to really dive into how ML and AI are being
used in gaming environments right now.
What's the best way to start that discussion?
Yeah, let's start out by just acknowledging that, whether it's at Microsoft or Amazon
or Uber, it's the same kind of technologies that we're using, it's the same algorithms,
the same concepts, yeah.
And you would be surprised that when you move into gaming, we again are going to use the
same technologies to bring more automation in, so to have the games optimized, have the
games being interacting more closely with you, it's in many ways the same approach, the
same technique as when we at Amazon try to basically sell you more books.
Right.
It's this idea that the systems will learn from you and they will adapt is this idea that
no developer can sit down and code, a hundred lines of code, and then it knows exactly
how to get you to buy a book.
It's sort of the same concept that we want to bring to the game world.
So there are, I guess I would describe that world in two broad categories, there's machine
learning and AI that happens in-game, and then there's all the stuff that many other companies
have to deal with in terms of making people more likely to play the game and optimizing
selling the game and things like that.
Are you involved in both sides of both of those categories at Unity?
Exactly.
My job is really two jobs.
So one part of my job is to make sure that many, many thousands of game developers can
monetize their games, that they can make money on their games, so that they can develop
more games.
So we support and advertisement infrastructure.
We use machine learning to optimize the ads, which is essentially bringing a game or
from one game to another game and the creator of that game then will make some money from
that.
And that's a classic called monetization through ads structure.
There's also in app purchases where you will spend money within the game, running campaigns
and promotions, all that is what I would call sort of very classical machine learning.
And it's super important for the ecosystem to be able to make a living from making games.
It's very important for our developers.
That's only half of the story.
The other half of the story is really when it comes to the creation of games.
And that's where AI in the gaming world means something slightly different from when I'm
using the word AI.
Okay.
So a lot of concepts in the gaming world is AI means having systems that look and behave
in a natural way.
Right.
There's a rule based systems that allow an NPC and a non-player character or a computer
agent to move around in a game.
And it looks a lot of reasonable, you know, sensible what it's doing.
But a lot of that is either hot wired or coded through a set of rules.
Yeah.
Let's actually, if I can press the pause button there, this is a question that I've
had asked before we've had, you know, in games going back to, you know, my Atari 2600,
right?
You have the ability to play against the computer.
Is that AI?
And you were just kind of getting at this with the rule based and others.
What's the difference between that and, you know, where we're trying to get to today?
Yeah.
That's actually a good question.
It is, it is not what I understand by AI, but it has elements on it, yeah.
It implements behavior through rules or really, you know, deterministic, hot wired code.
It implements behavior that may emulate a human player, you know.
But I want to take that a step further, you know, that's not the way that companies
like Amazon or Uber works, yeah, when they try to sell you more products that they try
to get a car faster to you, that is basically done through the use of data.
Right.
That's where we want to move the game world.
We want to make sure that games learn from previous place and become more and more natural
in the interaction with the player, yeah.
And that's where concepts like machine learning come in, yeah.
I can give some examples of a particularly branch of machine learning, which is called
reinforcement learning.
Okay.
And that's essentially where the computer has this ability to randomly move a character
around and learn from that, what happens to that character, yeah.
So if you tell the computer that character should not get killed, it should be avoid getting
shot by the human player, then the character will over time, you know, basically learn
behavior and strategies to avoid getting shot, yeah.
So we basically say the character has a rewards function, which is you get punished if you
get shot or hit, and you get a plus point, you know, for every minute you survive, yeah.
So with the reason developments in deep learning, these agents are able to learn some really
complex strategies on their own that make them very, very appealing to play against, yeah.
And so if I'm a player of a game that's, you know, using an AI-based agent that I'm playing
either with or against, how will that feel different to me than, you know, what I've
seen with traditional, you know, automated opponents or our players?
Yeah, the traditional systems are what we could sort of call they shallow, they implement
very simple functions, whereas with this concept of deep learning, we're able to implement
or the system is able to represent very, very complex non-linear functions.
So let me give some examples, when deep mind introduced AlphaGo, it, you know, it did beat
the World Champion and go, and the way it did that was basically by, you know, playing
some moves that initially looked really harmless, that did not get the opponents, the human
opponents attention, but certainly in very few moves, set the human opponent up failure,
yeah.
So we have seen another example of poker playing using deep reinforcement nets for,
for poker playing, where the system will learn to bluff.
So the big, big difference is that these systems, and I use the term deep here, they're
deep in the sense that they have a very good memory of events way back that leads, eventually
leads to great success.
So they become more strategic than we're used to, in some cases they become more strategic
that any human player would be, yeah.
So they're ready to run the risk like in poker, they actually run the risk of losing by
bluffing because they know that there is a bigger benefit out there.
And it's, and not because they were programmed to bluff every so often, but rather because
they've discovered the strategy through the training process.
That's accurate, spot on, and that's the, that's the new thing.
That's what we're able to do today, and that really changes the, a part of game development
to become more about defining the objective or the success criteria for that in PC.
Because let's just say that we define it as those shall not get shot, yeah.
Then the agent will really, you know, be really good at hiding, yeah, and you will get
really good at it, yeah.
Just getting away in time, every time you try to find it, yeah, that's not fun, yeah.
So what you have to do is you have to set up some, some criteria for that in PC to that
eventually will allow it to develop some subtle and complex strategies that you cannot predict
by say, but we know will lead to some very, very appealing behavior that will give, you
know, great enjoyment to play against because they are maybe hard to predict.
You constantly think you're about to have this agent and then they fool you, and then
it becomes very entertaining, yeah.
And that's what we have seen that these very deep, these deep nets, full reinforcement
learning can really build up these very complex strategies that, that, that, that sometimes
I saw quote from one poker player who basically stated that if he didn't know better, he
will, he would characterize that as a really like human spirit in that game play, yeah.
Yeah.
So the, I think the popular examples of, or at least the, you know, the celebrated
AI successes have been around these strategy board games like Go and Chess, to what extent
are games like, you know, your Xbox games like Halo or Call of Duty, to what extent are
the various agents in those games powered by something that you would think of as AI
today?
Uh, today they are powered by what we would call classic game AI.
So it's, it's in, uh, in, uh, in most, most of the cases that I'm aware of, it's, it's
very complex rule based systems.
In some cases, way, way over a thousand independent rules that have been created by the developers
who basically cover a lot of different situations, uh, very complex systems, uh, but we, we saw
a similar approach in, in anti virus, uh, programs for a long time, they developed basically
databases of rules that would identify, you know, components or elements of virus software.
And today all these systems have moved on, and I actually using a lot of them are using,
uh, deep learning, uh, uh, for, for training on, on, on, uh, known viruses to detect, you
know, new viruses.
And, are you aware of any particular, uh, efforts or results that have been maybe published
somewhere, uh, on, in terms of introducing AI into these types of games?
No, not, not in any commercial games.
Uh, we would, of course, you know, from unit to technology side, we would, uh, that's
one of our objectives is to, to, to offer that, uh, sometime in the future.
Uh, there's a lot of research going on, uh, so if we go to academia, go to the research
community, there's a great interest in, uh, in, uh, in, uh, in start working on this.
Uh, the, the peel is, of course, that if I can do this, if I can get an NPC in a game
to, to act in a very reasonable and intelligent, uh, and constructive way, uh, then, you
know, eventually, you know, maybe real robots could behave that way too.
Right.
Right.
Right.
So how do you, uh, as unity, how do you, uh, expect this to evolve and, uh, are there
a set of services that you, uh, are hoping to deliver to game developers?
Um, how do you think this evolves over time, uh, to, so that we'll see it more in games?
Yeah.
It's, it's my, my hope that we can make some of these, uh, uh, algorithms available
and services, uh, essentially to enable a game developer, who is not an AI or neural
network or ML guy, you know, some DBI specialist, but basically a game developer, make a game
developer, having a toolbox of, of, of, of AI, uh, services that they can use to train
a character, uh, and in that sense, sort of gradually enable AI in game development.
We have to understand that this is, this is the livelihood of, of, of, you know, our
developers.
This is how, how they, they make money and that's how they live.
Yeah.
They develop games.
So what we want to do is we want to give them these tools that allow them to create
maybe, uh, you know, maybe make it more efficient.
They can create some games faster, they can create games that are more entertaining,
uh, et cetera, yeah.
Uh, so we want to make that available so that it can sort of gradually be, be, be, be
adopted and we can also learn from the use, nobody has really done this very much yet.
Yeah.
So we don't know yet how, how it's going to work in practice.
In some ways, there's, uh, it strikes me that there's a precedent for this and that game
developers aren't typically physicists either, but it's very common for them to work with
these physics engines nowadays to develop their games, no?
That's correct.
Uh, we, we have, um, we have actually done some, uh, studies where we are using reinforcement
learning to have characters learn how to move in a world where there's gravity and friction,
yeah.
Uh, and, uh, and inertia and it, it's kind of interesting to see how, how a character
can learn, uh, you know, to, to walk or run or jump, uh, without, uh, knowing it from
the outset.
But by basically attempting, you know, tens of thousands of times, you know, and over
time, you will figure out the pattern of movements, uh, to jump, for instance, yeah.
And in that sense, you know, we, uh, we act to using the fact that we can, we can simulate
gravity, simulate friction and inertia in the physics engine.
Okay.
Um, you know, one question that I've had about the application of reinforcement learning
to games is, I guess when, when we think about machine learning in general, and I don't
believe that reinforcement learning, uh, is a common exception to this, you've got kind
of your two separate stages, you've got your training stage and your inference stage.
Um, but in a game environment, I imagine part of the appeal of AI is so that the, the
agents in the game can learn from the game as it's happening, right?
So not during a training phase, but during the, the actual playing phase.
Uh, how is, how does that, um, you know, is that, uh, we've talked about on the show
active learning, which may be a part of this, but is there a specific name for that?
And, uh, how is it commonly done today?
Yeah.
Um, you're absolutely right.
Yeah.
That's where I would love to go.
I would love to go, let me, let me give some crazy, crazy examples yet.
But imagine that, uh, say that you are playing your Pokemon, Pokemon go, yeah.
Right.
I have to train your character, yeah, today the training of that character is just, it's
not really anything, yeah, you just click a few times and, and that's how you train
it.
Yeah.
But imagine that you are actually training that character to battle and you could train
it for half an hour or one hour and that you are actually teaching and reinforcement
algorithm behind the character, yeah, in real time.
And if you're really good at training it, it may beat the, some other, uh, person's character,
yeah, who is not that good at training it.
That's one thing.
The other thing is that if the game can learn through gameplay, then it can learn, uh,
about you and just like Amazon and Netflix, uh, they basically tailor everything you
see to, to you, I mean, if you go to Netflix, what you see is different from what I see,
yeah, it's tailored to you.
What if every game in that sense was tailored to you, yeah, if, if the game knows that you're
only happy if you progress fast through the levels, then let's make it easy to progress,
yeah.
But if the game knows that I'm sort of more rigorous and I want, you know, to fight hard
from get to level to level, then, um, then that's a different, different approach, yeah.
What if games could adapt?
Oh, that's really interesting.
I'd be happy if the games could know that, uh, you know, whenever I'm playing Call of Duty,
I'm hiding in this particular corner and make it a little bit less easy for me to just
camp out there and snipe on people.
Exactly.
Yes.
You mentioned that one of the, one of the motivations for you joining Unity was, uh, what
was going on in terms of augmented and virtual reality.
Can you talk a little bit about that and how, where you see the intersections between
AR VR and AI being?
Yeah.
Now, if you think about a game, as you know, today being, it's very controlled environment,
yeah.
I can, I can hard code the game.
I can add AI to the game, but it's a very controlled environment, yeah.
Right.
We start moving into VR and AR, we start having, you know, a lot more flexibility.
So let's take, take VR a bit.
Yeah.
Now I, I, I emerge into a game.
I can now, you know, move around in the game and I can, you know, I can pet the characters
in the game.
I can touch them.
Right.
And when I do that, the bar moves up for what I consider naturalness.
Yeah.
I may play a game on a phone and I can see the characters are not, you know, they are
characters and they are a bit artificial in their movements, yeah.
When I put on my goggles, I, I want to get immersed into this, this new world, yeah.
And things have to act in a very natural way with me.
Otherwise, the illusion breaks and it's not really fun.
Right.
Take that a step further in augmented reality, the, the game, or should we call it the
app, because you can be way more than games, yeah, let's write the app, yeah, needs to
sort of connect between myself and the surroundings, yeah.
And those surroundings can now be anything, yeah, I, I don't know, you use this app.
I don't know where you're going to use it.
I don't know what's going to be there.
So you see the bar goes up constantly up where you can no longer imagine, you know, a thousand
lines of, of code being the answer to everything.
Right.
And that's where you need to have AI really come in, yeah.
And that, that is, is, is, of course, an area where we can, we can make a big change
through AI.
Clearly, I think that makes a lot of sense.
The user expectation is dramatically increased because you want this environment to be immersive
and engaging and feel lifelike.
And so it only makes sense that you'd have, you're interacting with Intelligent Things
if they're, you know, beings.
Do you expect the, the AI techniques that we use to do this to, you know, be the same
kind of things that we're applying every place else, or these, they're going to be a new
set of techniques that come into play when we start talking AR VR.
I think it's going to, initially, is going to be sort of the same technologies, but I want
to say one thing here, which is when we do talk about this of VR and AR, that we're able
to push the boundary of AI much, much further here and much faster.
Now, if I'm building a self-driving car, I, I have to be very careful how far I push
the boundaries of AI, AI, because it's, it's a 2,000 pound or more object that may actually
kill people if I'm not, you know, understanding what I'm doing as a machine learning on AI
expert, yeah.
So you need to really put a lot of boundaries in.
When you build an industrial robot, it's the same, yeah, it needs to build a car, but
it should not hit the operator around it, so it has a lot of hardwiring taking place.
When you move to VR and AR, I'm like, how, you know, how bad can it be, how can you make?
So you can really push the boundary there, yet you create a complete, you know, believable
world, yeah, at the same time, yeah.
So, so you give people this experience and you can push the boundaries of AI to its
very limits.
And if you go over, people take the goggles off and say, no, that was really bad, you
know, that was not believable, yeah, right, yeah.
And that attracts me a lot to this space here, because when you sell books or you get
taxes around, you are to a great extent limited by the physical world, right, right.
Now we can, we can really play tricks with the physical world.
And if those tricks they fail, we didn't really kill anyone.
Have you seen any interesting implementations or early results in marrying AI and ARVR?
We have done some experiments.
I think that this is, this is still emerging technology.
There's a lot of things around VR and AR that has not yet really been tried out and not
yet fully understood.
Sure.
But I think that very quickly creators of games and apps in AR and VR are realizing that
they're going to have to step it up a bit, because people expect that natural interaction,
yeah.
So in, in many VR apps and games today, you can, you can pick up an object and you
can maybe throw it, yeah, but you would love that same interaction with other virtual
characters or non-person characters in those games, yeah.
Right.
And you really like to interact with them.
And you want to interact with them in your way and they should be able to respond in
a natural and not, you know, some uncanny way.
And I think we still have some way to go there.
Right.
Right.
Instead of a summary of that one bucket, which is the in-game experience and NVR, AR
experience, is it, it's just super early and you guys are experimenting as are a lot
of people, but, you know, we're still far from, you know, Call of Duty X, whatever the
next version is, being a fully AI enabled game.
Yeah, that's for sure.
The part we're trying to play there is to enable the basic technologies so that our game
developers can start playing with it and sort of evolve it and help us understand what
works and what does not work.
And so how about in the other bucket, where you're applying ML and AI to, you know, more
for, from a business perspective, what are some of the results that you've been able
to achieve there?
Yeah.
So by basically understanding what kind of games people play, just like what kind of
movies you watch and what kind of books you read, you'll be able to understand what kind
of games you play, you're able to pinpoint what's better recommendations or ads for other
games.
Yeah.
So you will, you will, if you always play single shooter games, we, you know, probably
who it would be best off showing you some trailers for other single shooter games, yeah, right?
But that technology is in there that Amazon, that Netflix has been very good at technologies
that basically start exploring your interests, even exploring the things that you maybe
don't even know yet that you're actually interested in.
So basically using machine learning to better get to know you and your game preferences
and make sure that you can discover those games, because there's so many, many, many games
in the app store, yeah, on Google Play, that, so many games that you can't possibly find
all the games that you actually really like, yeah?
So we'll basically learn over time what your preferences are and find those games for
you.
But have you found challenging in applying these technologies at Unity?
And for that matter at previous organizations, what, you know, what are the challenge patterns
that you come up with when you're trying to introduce this or mature it any given organization?
Yeah.
Yeah, that, whether that is Amazon, Uber or Unity technologies, that it's the same all
the way around, and that is that you should not need to be a machine learning expert or
an AI expert to accomplish this.
Right.
You should be able to say, my problem is selling more shoes or selling more books or getting
taxes on time, therefore I should be able to use machine learning services to get there.
Right.
So I thought about it at Amazon, but basically creating as a platform.
We also launched the Amazon machine learning system.
We launched that on Amazon Web Services for the public to use.
And that is very powerful because now you get people with real business problems.
People with real incentives to improve their business using these technologies which
are ways superior to any attempt of trying to write, you know, a thousand lines of C++
code or whatever to solve the problem, yeah, basically based on that data, they can train
computers to do a better job, yeah.
So in all these organizations, it was a matter of making it available in a meaningful way.
And that's what I'm doing at Unity too, is to make sure that game developers do not
have to have a PhD in machine learning to benefit from it.
Right.
What lessons have you learned in building these machine learning platforms at Amazon, Uber
and now Unity?
The lesson, this one big lesson learned which is that it just works really, really well.
Uh-huh.
So make it just work?
But no machine learning does work really well because it does provide results, period.
And there may be a lot of talk about it, there may be a lot of talk about deep learning.
Some people call it hype.
I'm like, yep, you can call it hype, you can call it whatever you want.
But the proof is there that we are able to improve business where we move from a concept
of trying to analyze and investigate and implement to a world where we basically use the data
to improve the business from learning.
And whether that is selling books, driving taxes or developing and playing and selling
games, machine learning is, it really works.
You've been talking to different groups about the notion of bringing machine learning to
every corner of your business.
And to me that suggests not just the obvious places, but maybe some interesting places.
Do you have any stories or examples of interesting corners that you have been able to bring
machine learning and where you found interesting or surprising results?
Yeah, I would say that you often run into business problems.
If you're selling shoes, one of your key business problems is that people get a shoe
online, ordered online, they get a shoe and doesn't fit.
The machine learning is one of these wonderful things where all the return data, all the
shoes that did fit and all the shoes that did not fit.
If you use that data, you can start predicting how different shoes, shoe brands, do they run
large, do they run small or they spot on, you can even start predicting what shoe size
a customer has, and you can basically use that to give a better shoe purchasing experience.
To me that's kind of a surprise, I didn't really think about shoes, but that's when you
enable machine learning into a non-machine learning environment, you will see business
problems popping up.
Another one is, imagine I've seen this being used, I won't be specific, but where machine
learning is used within HR to basically complement one day, maybe even replace performance reviews
and things like that, to predict, to analyze resumes and predict which candidates may be
good and strong future employees.
So areas, it's sort of to me because I've always been on the platform side of this, I get
surprised almost if not daily but then close to daily on what people are using this for.
And that is really what matters, it matters, let's enable a lot of people to use this technology.
So in order to make that vision real, how do you build the right relationship between
the platform people, the data science people, the business people, so that you can kind
of build capacity as an organization that uses machine learning effectively?
Yeah, you need to avoid making this a very custom effort for every single team and for every single use.
That's what it traditionally, that's where it came from, you would have a team that would
have a business need, you would hire data scientists, you would hire machine learning engineers,
you would implement proprietary algorithms and you would maintain those and then you would
need to hire more people as your business scales, et cetera.
And one thing that I did at Uber was to build a machine learning stack from the ground
up entirely based on open source and define it, build it and define it as a platform.
So what I find over the years is that a lot of team come and say, I need this feature,
I need that feature, this is very important, this is very important for me, I need this
other feature, which is even more important for me, well, that's the wrong mindset, because
what they need to do is they need to deploy a lot of machine learning models across their
business rather than just fixating on one particularly one, and I have often seen this
in, say, in fraud detection teams, they would have some very custom algorithms detecting,
you know, certain kind of fraud, and I sort of compared to, you know, you have five locks
on your front door, but you leave all the windows open, yeah.
So these very customized solutions, I think should be something of the past, because
using open source, using standardized algorithms is so much more efficient.
So rather than one magic model, deploy 10 or 50 or 100 different models, right, on your
business.
Can you speak at all to the specific open source tools and projects that you use to build
that platform at Uber?
Absolutely, it's all public, there are slides around if you Google it, but it's essentially
a Hadoop HTFS, Hadoop Spark, things like MLLIP, XG Boost, an open source, very, very versatile
open source algorithm from University of Washington, things like Faye, TensorFlow, Kafka
for streaming, Cassandra for structured data.
You can get really, really far with all those tools combined without any need for really
a deep customization.
And so the platform you built was something that made all of these available, and did
you put some kind of layer on top of it for visualization or automation or how did
you pull all of these disparate tools together?
Yeah, both at Amazon and Uber, the key contribution was essentially a defining, you know, a really
sorted SDK, so people could programmatically integrate with that system, a nice and easy
to use graphical user interface, web-based, browser-based interface, again, because we
want a wide range of users to not feel that the barrier of entry is too higher.
And then, so really the user interface, the SDK side, that's how to access the systems.
And then, at the other end of it, you need to have the system being able to easily access
the data of the company, so you need to integrate on the data side into the data repositories
of the company, whether that is existing, data warehousing, data lakes, you know, relational
databases, etc.
So the stack is really something I would say is not, the stack itself is not as important
as long as it works and runs, but it's sort of that integration on both the front end
and the back end into the business, that's important, because that lowers the barrier
of entry.
It makes it easier for you to build a model if you don't have to track down data from
outside your team.
On the front end of that was the primary user experience like IPython notebook or Jupyter
notebook rather, or were there different ways that developers access the system?
Yeah, there was a total custom user interface, there was also, actually, you could also basically
use things like Jupyter notebook, as long as the system has IPython SDK, you can move that
integration very quickly, and now run your model building jobs from Jupyter, you can
visualize stuff, you can deploy from Jupyter here, so I personally I love Jupyter notebook,
I think it's an incredible tool, a custom user interface, fine too, but most of all
lecturers is the SDKs in multiple languages are important because that allows back-end
engineers to easily integrate machine learning into their offerings.
So if you take the mobile app at Uber, when you open the app app, it suggests one or two
or three likely destinations that you normally go to, that piece, that was actually a piece
of machine learning right there, using your data to build models that predict where you're
going to go on a given day of the week at a given time.
Interesting.
Well, when we spoke previously, you talked a little bit about your vision for really
fully autonomous corporations, what does that mean and what do you envision there?
Yeah, if you follow me on thinking that we can use really deep reinforcement learning
to train an NPC or a Go player, a poker player, yeah, if we can train a computer to use
really deep and complex strategies, including bluffing, if we can train it to do that, then
we can probably also train an agent to say sell books or sell movies, yeah, and become
better and better at it, yeah, I mean like in the end, it should become the best book-selling
agent in the world, yeah, and you can take that further and say, well, the point for
instance, let's just take an example, not only which book should I try to sell, but what
should the prices be?
Right.
Imagine that you use reinforcement learning to figure out what is the right price to sell
stuff at, yeah, and what is the right time to order books at so that we don't run out
of book for logistics reasons, yeah, when should we order the parts to build, you know,
our Xbox, our Kindle, our hardware, yeah, if you look at a lot of, you know,
problems that humans are solving in corporations today, I think many of those problems can
be learned and solved by a computer, if you take reinforcement learning, deep reinforcement
learning as we know it today as a starting point, and basically just think a little out
there, why not?
Right, right, yeah, I think what's interesting about that to me is that we often think
about this AGI artificial general intelligence as this kind of one Uber AI that, you know,
it's just very human-like and can reason and, you know, do everything, but you're describing
a, you know, something that could create tremendous value that is, you know, much less ambitious,
right? It's a collection of, of, of AIs that are more purpose built, and we should be able
to get there, you know, a lot quicker.
Yeah, I, I, I, I'm kind of struggling with the whole AGI debate, sort of maybe, you
know, plus one or plus two out there for me, but I do think that there is an interesting
perspective in, if we envision a world where reinforcement learning, I'm using that as
sort of a very general term here, yeah, but there will, you know, be many different variations
of it, but we do envision a world where a company like Amazon used that, not, you know,
to selling books, not just in 10 places, but they use it 5,000 parts of their company,
yeah, they use it everywhere, right? And you start having these systems interacting,
you know, at one point, when you add it all up, you get more than the sum, yeah, because
now you're going to get the effect of, I'm in really good at selling, I'm really good
at finding the right price point to maximize revenue, I'm really good at understanding
what people want, I'm really good at understanding ordering all the parts and components in time,
so that I never run out, et cetera, et cetera, and something you have sort of a whole product
pipeline happening, yeah, with very limited human intervention, yeah, is that a GI? I
don't think people think of that, but is that looking like a super intelligent corporation?
Yeah, yeah, it strikes me that there's a whole field of study and research that would
need to happen to allow us to manage this thing, like apply, it's almost the application
of traditional control systems work to these independent AI systems, like hysteresis,
so you don't over or under order or order to aggressively, or it's just a whole layer
that needs to happen there that we're clearly, yeah, not there yet.
Yeah, I totally agree with that observation, and I also think that, and we start seeing
this in some papers coming out, I do see a shift in some research that now goes more towards
researching the strategy around teaching computers, yeah, so basically examples are like if I give
a reinforcement learning algorithm, give it too hard of a problem to begin with, it's not going
to solve it, yeah, but if I sort of give it, you know, increasingly difficult problems to solve,
it gets really good at it, yeah, so that's kind of learning strategies, and so we're not talking
about, we're not talking about the technology here, we're not talking about, you know, this
particular structure of a deep neural net or something like that, we're just talking about
how do I best teach a computer, and their company is looking at how can I minimize the
need for data, because data can be, you know, difficult to get by, so there's a way I can,
I can learn more efficiently, so if you think about some of these research topics are kind of
at a meta level, yeah, so far we have been so eager to study algorithms and methods,
but maybe a lot of the future research is really about what, what does a good school for
computers look like, interesting, interesting, well as we wind down any parting thoughts or words
for our audience, I think that the audience should look at the gaming and the gaming platforms as
a fantastic lap for AI that's going to give us a peek into the future, because if you think about
NPCs moving around in a game, you know, they are really robots, yeah, robots in the physical world,
they take, you know, easily year to two years to build, yeah, and they're expensive, very expensive,
lots of mechanical engineering, yeah, but if you think about an NPC in a computer game,
that's pretty much the robot too, you can evolve them quickly, you can try out different, you know,
dimensions, different mechanisms, everything can happen at, you know, surreal speeds, yeah,
compared to the real world, so I think that the way I look at the gaming world is way beyond gaming,
I'm looking at it as like what is going to be possible in the physical world, you know,
five, ten years from now, well that may be possible in the gaming world next week.
Hmm, that's awesome, that's great, great. All right Danny, well thank you very much for joining
us, it was great having you on the show and great chatting with you. Oh it was a pleasure,
I enjoyed it, thank you. All right everyone, that's our show for today. Once again, thanks so much
for listening and for your continued support. Don't forget to leave your, don't forget to leave
your review or comment to enter our one-year anniversary listener appreciation contest.
The full details can be found along with the notes for the show over at twomlai.com slash talk slash
24. Over at twomlai.com slash talk slash 24 where you'll also find links to Danny and the various
resources mentioned in the show. You are all amazing and we love you, thanks so much for listening
and catch you next time.
