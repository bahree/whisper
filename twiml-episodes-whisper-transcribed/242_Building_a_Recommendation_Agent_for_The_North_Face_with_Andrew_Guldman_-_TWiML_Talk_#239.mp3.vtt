WEBVTT

00:00.000 --> 00:16.320
Hello and welcome to another episode of Twimble Talk, the podcast why interview interesting

00:16.320 --> 00:21.480
people, doing interesting things in machine learning and artificial intelligence.

00:21.480 --> 00:31.640
I'm your host Sam Charrington.

00:31.640 --> 00:35.840
Today we're joined by Andrew Goldman, vice president of product engineering and research

00:35.840 --> 00:38.120
and development at Fluid.

00:38.120 --> 00:43.080
Andrew and I caught up a while back to discuss Fluid XPS, a user experience built to help

00:43.080 --> 00:49.080
the casual shopper decide on the best product choices during online retail interactions.

00:49.080 --> 00:53.960
The XPS has expanded since we recorded this interview, we specifically discuss its origins

00:53.960 --> 00:58.040
as a product to assist out-of-wear retailer the North Face.

00:58.040 --> 01:03.280
In our conversation, we discussed their use of heat sink algorithms and graph databases,

01:03.280 --> 01:07.720
their use of chat and other interfaces, and the challenges associated with staying on

01:07.720 --> 01:11.040
top of a constantly changing technology landscape.

01:11.040 --> 01:14.880
This was a fun interview.

01:14.880 --> 01:18.960
Before we jump into the episode, I'd like to join Pegasystems, this episode's sponsor

01:18.960 --> 01:24.520
and inviting you to meet me this June at Pegasworld, the company's annual digital transformation

01:24.520 --> 01:31.840
conference, so that it optimizes every customer touchpoint on every channel in real time.

01:31.840 --> 01:36.600
That way each interaction is relevant and timely to each individual customer, no matter

01:36.600 --> 01:41.520
if it's a sales call, a digital marketing campaign, or a customer service chat, either

01:41.520 --> 01:47.880
online or in-store, and the system is always learning in real time to make the next interaction

01:47.880 --> 01:49.520
better.

01:49.520 --> 01:52.120
Pegas Customers are the real stars at Pegasworld.

01:52.120 --> 01:57.400
There, you'll hear great stories of AI applied to the customer experience at real Pegas

01:57.400 --> 01:58.400
Customers.

01:58.400 --> 02:03.600
The event is a great way to learn from a who's who of the Fortune 500, and of course, I'll

02:03.600 --> 02:06.480
be there and speaking as well.

02:06.480 --> 02:13.120
To register, visit Pegasworld.com and enter the promo code Twimble19 when you sign up.

02:13.120 --> 02:16.320
Again, that's Twimble19, it's as easy as that.

02:16.320 --> 02:20.240
Hope to see you there, and now on to the show.

02:20.240 --> 02:23.640
All right, everyone.

02:23.640 --> 02:25.880
I am on the line with Andrew Goldman.

02:25.880 --> 02:30.160
Andrew is VP of Product Engineering and R&D at Fluid.

02:30.160 --> 02:33.240
Andrew, welcome to this weekend machine learning and AI.

02:33.240 --> 02:34.240
Thank you very much.

02:34.240 --> 02:35.240
Great to be here.

02:35.240 --> 02:42.320
So you've been at Fluid for about 18 years, not counting a brief hiatus that you can

02:42.320 --> 02:47.560
describe, but why don't you tell us about Fluid and the kind of work that you've done

02:47.560 --> 02:49.560
there over the past 18 years?

02:49.560 --> 02:50.560
Great.

02:50.560 --> 02:51.560
Thank you.

02:51.560 --> 03:00.120
So in general, Fluid focuses on providing excellent user experience for online retail,

03:00.120 --> 03:08.160
and Fluid has agency and software as a service divisions, and within both of those addressed

03:08.160 --> 03:13.880
engineering design, user experience and strategy, Fluid's clients include the North Face,

03:13.880 --> 03:21.360
and we'll be talking about shortly, Puma, Vans, Benefit, Cosmetics, and many, many others

03:21.360 --> 03:24.360
with offices in New York and in Oakland.

03:24.360 --> 03:26.960
So that's Fluid as a whole.

03:26.960 --> 03:33.440
My particular role at Fluid has been focused on engineering leadership, so I've worked

03:33.440 --> 03:37.480
in both the agency and software as a service side of the business.

03:37.480 --> 03:43.120
For the last several years, I've worked primarily on two big projects.

03:43.120 --> 03:49.680
One of them, Fluid Configure, online product configuration platform, and the other XPS,

03:49.680 --> 03:51.720
which we'll talk about in more detail.

03:51.720 --> 03:58.160
XPS stands for Expert Personal Shopper, applying AI technology to online retail.

03:58.160 --> 04:07.400
And XPS was a product or XPS was a project that Fluid created for and with the North Face.

04:07.400 --> 04:08.400
Is that right?

04:08.400 --> 04:11.960
Initially, yeah, they were our first customer with XPS.

04:11.960 --> 04:15.880
It's expanded a little beyond that, but they were the initial focus, yeah.

04:15.880 --> 04:17.440
Let's jump into that.

04:17.440 --> 04:22.160
Tell us about the general problem that you're trying to help these retailers solve.

04:22.160 --> 04:23.160
Sure, sure.

04:23.160 --> 04:24.160
Absolutely.

04:24.160 --> 04:29.560
We'll first just really brief encapsulation of the North Face in case people are unfamiliar

04:29.560 --> 04:31.240
with them.

04:31.240 --> 04:37.640
They provide top quality gear that's really designed and targeted towards climbers, runners

04:37.640 --> 04:39.640
and skiers.

04:39.640 --> 04:44.880
And of course, a good jacket for runners is also great for hikers and is also good for

04:44.880 --> 04:51.040
lifestyle and so on, but they're really targeted towards technical high quality gear.

04:51.040 --> 04:58.840
So what we were trying to do for the North Face, the genesis of XPS, was to help the more

04:58.840 --> 05:06.440
casual users figure out what to get from the North Face, you know, the really technical

05:06.440 --> 05:10.920
like the expert climber would probably know what they need in a jacket.

05:10.920 --> 05:15.440
But somebody who's going back backing for the first time might not really know quite

05:15.440 --> 05:16.440
what to get.

05:16.440 --> 05:21.320
And so we wanted to help them sort of help them sort of emulate the experience of working

05:21.320 --> 05:27.480
with a knowledgeable sales associate in a scalable online venue.

05:27.480 --> 05:32.320
I can relate very personally to that need right now.

05:32.320 --> 05:39.640
I am in the process of planning my first bike packing trip, which is basically camping,

05:39.640 --> 05:45.120
but kind of carrying your gear on a bike that's going to be later this month.

05:45.120 --> 05:52.800
And the array of stuff that the lists say that I need is immense and then kind of sorting

05:52.800 --> 06:00.160
through all of the different options for each of the various components is just, there's

06:00.160 --> 06:06.720
a lot of work that one needs to do to at least if you're like me and you want to kind of

06:06.720 --> 06:09.640
get the right thing, it's a lot of work.

06:09.640 --> 06:16.320
So I can definitely see why an online tool in particular one that's powered by some

06:16.320 --> 06:20.480
element of AI would be super helpful to folks.

06:20.480 --> 06:27.360
But exactly, so you're trying to build this tool, what is the, what is XPS provide?

06:27.360 --> 06:30.720
How does it kind of emulate this assistant?

06:30.720 --> 06:34.680
How does it emulate like a sales person at a store?

06:34.680 --> 06:40.600
In format, we adhere fairly closely to what would happen with the sales associate.

06:40.600 --> 06:45.880
You have a conversation, you know, there's questions and answers going back and forth.

06:45.880 --> 06:53.960
And through that conversation, the sales associate is accumulating important information, you

06:53.960 --> 06:55.480
know.

06:55.480 --> 07:01.920
And then as that information accumulates, that sales person's recommendation gets better

07:01.920 --> 07:02.920
and better.

07:02.920 --> 07:11.240
So what that means in the more technical world of XPS is that we have, we actually used

07:11.240 --> 07:20.040
graph database technology to represent the, we called them facts, just to be a fairly generic

07:20.040 --> 07:24.640
term that could be used across, to me, in different things at different times, you know,

07:24.640 --> 07:33.080
but like, you'd have this directed acyclic graph of facts that could be hierarchical that

07:33.080 --> 07:40.000
eventually connected to products and the edges in the graph had weight associated with

07:40.000 --> 07:41.000
them.

07:41.000 --> 07:50.520
So as a session with XPS proceeds, you're parsing XPS would parse the responses from the user

07:50.520 --> 07:56.680
if they came in via free text, or it could also work with button clicks if the answers

07:56.680 --> 07:59.360
were a little more directed.

07:59.360 --> 08:04.920
But either however they came in, it would result in weight being placed on nodes in the

08:04.920 --> 08:15.280
graph and then the directed graph, we used a heat sink algorithm to accumulate weight

08:15.280 --> 08:19.520
on the products and thereby derive the recommendations.

08:19.520 --> 08:22.320
What specifically is a heat sink algorithm?

08:22.320 --> 08:27.480
So a heat sink algorithm, if you have, you know, a directional graph where things, an

08:27.480 --> 08:34.800
acyclic graph where things point in a direction, just to look at a simple example without getting

08:34.800 --> 08:38.560
into hierarchy, you can consider product characteristics.

08:38.560 --> 08:45.520
So we're looking at North Face Jackets and you could say, okay, this jacket has color,

08:45.520 --> 08:46.520
right?

08:46.520 --> 08:49.600
So it can be red or it can be blue or it can be green or whatever.

08:49.600 --> 08:54.360
So you'd have an association sometimes people would have color preferences so you'd have

08:54.360 --> 09:01.920
an association, directed association from green to this particular jacket.

09:01.920 --> 09:07.440
So then if it comes out that I'm looking for a green jacket, I'd put weight on the green

09:07.440 --> 09:14.880
node in my session specifically and then that weight traverses the edge of the graph and

09:14.880 --> 09:18.800
ends up on, well, the multiple jackets that could be green, right?

09:18.800 --> 09:23.960
So green would be associated with an array of different jackets, all of which would receive

09:23.960 --> 09:26.760
weight from green.

09:26.760 --> 09:31.760
Then simultaneously, I'm looking for a waterproof jacket.

09:31.760 --> 09:34.240
So I put weight on waterproof.

09:34.240 --> 09:38.000
Waterproof is similarly associated with a collection of jackets.

09:38.000 --> 09:45.360
The weight derives from, or it travels from waterproof to all of those waterproof jackets.

09:45.360 --> 09:52.160
So we have some jackets that have accumulated heat or weight from green and others that

09:52.160 --> 09:56.120
have accumulated heat from waterproof.

09:56.120 --> 09:58.640
And so some jackets are hotter than others.

09:58.640 --> 10:02.280
The jackets that are both green and waterproof are the hottest ones.

10:02.280 --> 10:08.440
And so you have like multiple sources of heat, you know, the nodes that have been activated

10:08.440 --> 10:11.680
and then that heat accumulates on products.

10:11.680 --> 10:13.920
Where does AI come in in this project?

10:13.920 --> 10:20.200
What requirements did you have for artificial intelligence as you were building us out?

10:20.200 --> 10:25.040
Well, the artificial intelligence requirements were pretty high level.

10:25.040 --> 10:33.400
The initial genesis of the product was a partnership between IBM and Fluid for the benefit of

10:33.400 --> 10:35.120
the North Face.

10:35.120 --> 10:40.680
So the original idea was to use Watson to create this technology.

10:40.680 --> 10:46.640
But that's pretty broad, right?

10:46.640 --> 10:54.560
So as we dug in to implementing what I was describing there, the first attempt was just

10:54.560 --> 10:58.360
to use Watson as is.

10:58.360 --> 11:02.240
At the time though, this is way back at the beginning of Watson.

11:02.240 --> 11:07.760
This was, you know, a little bit after Watson had been used in the Jeopardy game show.

11:07.760 --> 11:08.760
Okay.

11:08.760 --> 11:10.160
And we have a lot of notoriety there.

11:10.160 --> 11:11.160
Right.

11:11.160 --> 11:16.520
But at the time it was a single API, it was this question and answer API that was really

11:16.520 --> 11:22.360
targeted towards the Jeopardy use case where it didn't, it didn't have the idea of context

11:22.360 --> 11:26.920
like I was describing where you accumulate knowledge through a conversation that really

11:26.920 --> 11:29.160
wasn't part of the game.

11:29.160 --> 11:34.920
And it also was designed to come back with a single answer, you know, because in Jeopardy,

11:34.920 --> 11:39.360
you don't say, oh, well, it could be this or that or that or that, it's just one answer.

11:39.360 --> 11:40.360
Right.

11:40.360 --> 11:41.360
Right.

11:41.360 --> 11:46.400
So the question answer API didn't really fit our use case.

11:46.400 --> 11:51.440
So that was when we started getting into this graph database business.

11:51.440 --> 12:00.080
So in the context of the solution I was describing, we initially used AI technology for natural

12:00.080 --> 12:07.040
language processing to try to make sense out of the utterances that users would provide

12:07.040 --> 12:08.680
to us.

12:08.680 --> 12:11.280
That was the initial piece.

12:11.280 --> 12:15.640
You know, what I was describing with the graph and everything was basically a content

12:15.640 --> 12:22.760
based recommendation engine that really doesn't use a lot of sophisticated AI techniques.

12:22.760 --> 12:29.960
We'd always had in mind to get to machine learning sort of collaborative filtering type

12:29.960 --> 12:32.680
techniques to improve the recommendations.

12:32.680 --> 12:37.160
But you know, as of now we're still, we're still waiting to get there.

12:37.160 --> 12:42.920
So it's been a little more focused on content based recommendations.

12:42.920 --> 12:50.400
The interface for XPS, is it a chat, I'm assuming it's a chatbot type of interface?

12:50.400 --> 12:59.720
And if so, are you using a platform technology to manage the chat interactions, you know,

12:59.720 --> 13:05.240
parse out the intents and all that kind of stuff, are you doing that manually?

13:05.240 --> 13:12.880
So at the highest level it is a chat interface and it's super compatible with things like

13:12.880 --> 13:17.240
Facebook Messenger and we have implemented it on Facebook Messenger, but it doesn't

13:17.240 --> 13:20.680
require a dedicated chat platform like that.

13:20.680 --> 13:25.320
It runs just fine in a standard browser as well.

13:25.320 --> 13:29.280
So it's pretty flexible in how it can be deployed.

13:29.280 --> 13:36.000
We initially, when we were building this out, the supporting technology to manage the

13:36.000 --> 13:40.840
conversation for us was not super satisfactory.

13:40.840 --> 13:42.920
So we sort of built our own deal.

13:42.920 --> 13:52.280
In the meantime, since then, we've evaluated other technologies like IDM Assistant, which

13:52.280 --> 13:59.120
do a lot of the same things that we've been doing and have a lot of advantages, just

13:59.120 --> 14:07.400
the training capabilities they have, the ability to understand intents as well as entities,

14:07.400 --> 14:13.560
the ability to impact the behavior of the conversation, you know, to change the flow,

14:13.560 --> 14:19.680
the conversation, have it work better without having to do any coding, it was really attractive.

14:19.680 --> 14:28.360
So what we're sort of in the process now of incorporating watts and Assistant into

14:28.360 --> 14:35.400
XPS, sort of as complimentary pieces, if you want to go into a little more detail about

14:35.400 --> 14:42.400
how XPS guides a conversation relative to how watts and Assistant does, they have fundamentally

14:42.400 --> 14:45.600
different approaches, which can work well together.

14:45.600 --> 14:46.600
Sure.

14:46.600 --> 14:47.600
Had that direction?

14:47.600 --> 14:48.600
All right.

14:48.600 --> 14:54.160
No, that's interesting, because you mentioned using them in conjunction with one another

14:54.160 --> 15:03.360
and I was starting to form a question around how that's going to work, so to start with

15:03.360 --> 15:08.120
watts and Assistant, I mean, that's fairly, there's a whole sort of family of technologies

15:08.120 --> 15:11.920
that operate in fairly similar ways.

15:11.920 --> 15:20.120
And they parse intents based on the intent that's been identified, can parse out entities,

15:20.120 --> 15:25.880
and so you can do things, you know, a customer service, it can understand that you're trying

15:25.880 --> 15:32.160
to track and order to be your intent, for example, and then it can know that in order

15:32.160 --> 15:36.080
to track and order, it needs to have an order number, right?

15:36.080 --> 15:40.720
And so it can try to parse the order number from what you've said, or if it doesn't get

15:40.720 --> 15:45.640
it, it can solicit the order number, once it has that, then it can move forward.

15:45.640 --> 15:53.240
And so you've got this sort of structure of intents with related entities, and it can

15:53.240 --> 15:59.160
guide a conversation that way, it can solicit what it needs based on what the intent is.

15:59.160 --> 16:02.920
So that's kind of the watts and Assistant approach.

16:02.920 --> 16:09.960
XPS, on the other hand, is much more, is intended to be much more sort of directive and focused

16:09.960 --> 16:18.320
and purposeful and flexible in what it's doing, like its sole purpose is to recommend products.

16:18.320 --> 16:23.400
So you've got a potentially confusing collection of products, you know, like all these jackets,

16:23.400 --> 16:26.800
so many jackets, there's like 20 kinds of ski jackets, what the hell, you know, right?

16:26.800 --> 16:32.160
So there's all these products with the intention of recommending the right ones.

16:32.160 --> 16:40.440
And the watts and Assistant approach tends to lead the order in which information is solicited,

16:40.440 --> 16:42.160
is somewhat fixed.

16:42.160 --> 16:45.560
You know, if you're looking for an order, you get the order number.

16:45.560 --> 16:50.800
Whereas within the jacket recommendation world, there's a lot of different things that

16:50.800 --> 16:52.360
you could be soliciting.

16:52.360 --> 16:56.920
You know, there's how it behaves in certain types of weather, you know, how it does relative

16:56.920 --> 17:03.080
to wind and rain and temperature, there's color, there's breathability, you know, on and

17:03.080 --> 17:09.200
on and on, like the number of questions that could potentially be asked is big.

17:09.200 --> 17:15.080
And if you ask them in the wrong order, it doesn't appear very intelligent.

17:15.080 --> 17:23.800
So our one of probably our core challenges of XPS was guiding the dialogue in a way that

17:23.800 --> 17:28.200
would allow it to make the best recommendations the quickest.

17:28.200 --> 17:34.080
So we incorporated kind of a taking that heat sink idea that I was talking about earlier

17:34.080 --> 17:39.520
where you figure out what price recommend based on the information, you know, we kind

17:39.520 --> 17:47.120
of flip that on its head and use like a complementary idea of hypothetically saying, well, if we

17:47.120 --> 17:49.760
knew this, how helpful would it be?

17:49.760 --> 17:53.120
If we knew that, how helpful would it be?

17:53.120 --> 18:00.280
Combining that with the natural collections, you know, natural groupings of these facts,

18:00.280 --> 18:06.880
you know, like if you're saying like, is it, is it good in mild wind or high wind or calm

18:06.880 --> 18:13.320
or whatever, if you're looking at the wind speed collection of facts, well, that condenses

18:13.320 --> 18:15.880
nicely to a single question.

18:15.880 --> 18:19.200
You don't have to ask three separate questions, you know, it's like, how windy is it going

18:19.200 --> 18:20.200
to be?

18:20.200 --> 18:23.560
And perhaps your answers are buttons if you want or it could be free text, whatever, whatever

18:23.560 --> 18:24.560
you want, right?

18:24.560 --> 18:30.440
But if we've decided based on analyzing all of these different facts and running them

18:30.440 --> 18:36.360
through these scenarios, we decide we care about wind is the most important thing to

18:36.360 --> 18:38.680
influence our recommendation.

18:38.680 --> 18:43.760
And we ask about wind, you know, if we get to another point in a different conversation

18:43.760 --> 18:48.760
with a different user, maybe based on what they've told us, it's more important to ask

18:48.760 --> 18:53.040
about color to differentiate the candidate product set.

18:53.040 --> 18:59.000
The way I would describe the algorithm that you're describing is along the lines of it's

18:59.000 --> 19:05.760
trying to maximize information gain per question asked or something like that.

19:05.760 --> 19:11.640
Basically, I mean, the way that we phrase it is differentiating the candidate product

19:11.640 --> 19:16.360
set, you know, like we have based on what we currently know, we know that there's a set

19:16.360 --> 19:19.440
of products that are suitable.

19:19.440 --> 19:28.040
And what we really want to do with the next question is chop that set in half and be more

19:28.040 --> 19:30.800
confident about half of it.

19:30.800 --> 19:31.800
You know what I mean?

19:31.800 --> 19:37.400
We kind of simplified the challenge to try to make it more consistent.

19:37.400 --> 19:40.280
We found that taking that approach worked pretty well.

19:40.280 --> 19:46.800
So that's how we scored each one of these potential questions to ask, did how much does

19:46.800 --> 19:50.680
it split the results set in half and how much does it increase the confidence of one

19:50.680 --> 19:51.920
of those halves?

19:51.920 --> 19:58.480
How complex is the algorithm excited that is there a pre-existing algorithm that's known

19:58.480 --> 20:03.840
to solve that kind of problem or did you have to kind of invent something from scratch?

20:03.840 --> 20:06.720
We invented stuff.

20:06.720 --> 20:07.720
We invented stuff.

20:07.720 --> 20:10.000
We were working.

20:10.000 --> 20:14.120
This was logic that ran in the graph database.

20:14.120 --> 20:17.840
We were using TinkerPop APIs.

20:17.840 --> 20:19.160
It's TinkerPop APIs.

20:19.160 --> 20:20.160
Yes.

20:20.160 --> 20:22.040
Yeah, I don't know where they came up with that name.

20:22.040 --> 20:26.960
It's standardizing the way that you can interact with graph databases.

20:26.960 --> 20:32.080
It's sort of like JDBC is to relational databases.

20:32.080 --> 20:35.240
TinkerPop is to graph databases.

20:35.240 --> 20:37.080
So it's a set of standardized APIs.

20:37.080 --> 20:42.680
We were initially working with Neo4j and we moved over to Titan.

20:42.680 --> 20:46.800
The graph database space is quite volatile.

20:46.800 --> 20:52.400
It was nice to have this sort of standard API to work with.

20:52.400 --> 20:59.120
We were writing Java code that used TinkerPop APIs to interact with the graph.

20:59.120 --> 21:01.320
It was sort of like streaming APIs.

21:01.320 --> 21:06.720
If you work with Java collections and you start streaming them and then you do one thing

21:06.720 --> 21:10.040
to them and then you get a stream back and you do another thing to them and you kind

21:10.040 --> 21:11.800
of chain these calls together.

21:11.800 --> 21:19.200
It's just sort of typical sort of a Lambda type flow within Java.

21:19.200 --> 21:25.360
So you do things like you get your set of facts and then you filter it based on the ones

21:25.360 --> 21:29.920
that have weight and then you see where they point and what the edge weights are and you

21:29.920 --> 21:33.760
calculate the accumulated weight and you filter again.

21:33.760 --> 21:40.600
Anyway, all these sort of traversals and streaming stuff in Java.

21:40.600 --> 21:43.040
So yeah, we had to write this code.

21:43.040 --> 21:49.160
We basically would look at the, you take the original set of recommended products, then

21:49.160 --> 21:56.200
you'd apply hypothetical weight to a single fact and then you'd see what the result of

21:56.200 --> 22:03.160
that was in this new result set and then you'd just repeat that process for any of the facts

22:03.160 --> 22:09.840
that you could consider asking about and then you'd just compare the sort of the weighting

22:09.840 --> 22:15.760
of the results, the recommended products and see which one had the profile that most

22:15.760 --> 22:22.080
closely matched, chopping the original set in half and increasing its confidence.

22:22.080 --> 22:27.760
And so was your product catalog space or there are the intersection of your product catalog

22:27.760 --> 22:37.360
space and the characteristic space such that you could do that calculation all in real time

22:37.360 --> 22:41.680
or did you have to pre-compute some of it or could you pre-compute some of it?

22:41.680 --> 22:50.080
It was all real time, yeah, the graph database ran quickly, I mean that was one of the reasons

22:50.080 --> 22:52.080
we chose that technology.

22:52.080 --> 22:59.480
The traversals are really, really fast and the accumulation of calculations as you navigate

22:59.480 --> 23:03.680
as you traverse through the graph could happen really, really quickly too.

23:03.680 --> 23:11.400
You build this algorithm that allows you to direct questioning in a way that helps a

23:11.400 --> 23:19.440
user kind of iterate as quickly as possible to a single product or a small set of products

23:19.440 --> 23:27.840
that they're interested in but you still see their opportunities to use that in parallel

23:27.840 --> 23:32.000
with the Watson platform, how would those work together?

23:32.000 --> 23:37.600
Yeah, yeah, good, yeah, that was what I was supposed to be describing before, right?

23:37.600 --> 23:48.600
I was describing these different mechanisms for driving a conversation with Watson Assistant

23:48.600 --> 23:55.640
having this intent and entities approach versus what I was describing with XPS and so

23:55.640 --> 24:03.640
the way they fit together nicely is that if you have, if the utterance can be, if Watson

24:03.640 --> 24:10.080
Assistant can get some traction with the user's utterance, then you let it do its thing.

24:10.080 --> 24:16.120
So if it says, oh, this is customer service, I got this, then XPS isn't going to be able

24:16.120 --> 24:19.600
to handle that, no, that's not what XPS does.

24:19.600 --> 24:24.680
And so if Watson Assistant was able to figure out that it could do some with it, then it

24:24.680 --> 24:25.880
does some with it.

24:25.880 --> 24:32.440
So Watson Assistant is kind of the initial recipient of the request.

24:32.440 --> 24:39.320
And then if Watson Assistant either identifies that it's not an XPS could deal with or it

24:39.320 --> 24:44.040
just doesn't know what the heck is going on, then XPS takes a cut at it.

24:44.040 --> 24:50.400
Yeah, it sounds like if you walk into a store, there's a greeter there that greeter is

24:50.400 --> 24:51.400
Watson Assistant.

24:51.400 --> 24:55.240
If you have a customer service question, they'll walk you over to the CS desk and kind of figure

24:55.240 --> 24:56.240
that out.

24:56.240 --> 24:59.840
But if you want to buy something, they'll kind of direct you to a salesperson and that's

24:59.840 --> 25:00.840
XPS.

25:00.840 --> 25:01.840
Exactly, exactly.

25:01.840 --> 25:06.600
Because what we found, I mean, this is pretty obvious if you think about it really, but

25:06.600 --> 25:10.720
you know, when people come into like a chatbot experience, they don't all want to do

25:10.720 --> 25:15.240
what you want them to do, you know, they're like, they're checking it out.

25:15.240 --> 25:16.960
They're like, oh, what is this thing?

25:16.960 --> 25:22.520
And XPS was really not very good at handling this broad array of things that were coming

25:22.520 --> 25:23.520
up.

25:23.520 --> 25:24.520
People just chatting.

25:24.520 --> 25:30.360
People were like, hi, you know, an XPS didn't really know what to do with hi, you know.

25:30.360 --> 25:31.360
Right.

25:31.360 --> 25:32.360
Right.

25:32.360 --> 25:33.360
Right.

25:33.360 --> 25:42.160
I'm curious about the software development process and specifically the idea of incorporating

25:42.160 --> 25:51.160
in these, you know, external AI-centric APIs and any ways that maybe you had to think differently

25:51.160 --> 25:58.160
about the development process, you know, relative to other kinds of projects.

25:58.160 --> 26:04.280
Well, I think the big difference is that the, you know, the AI technologies we were using

26:04.280 --> 26:09.880
like Watson Assistant and to a lesser extent some of the NLP stuff we were using, it's

26:09.880 --> 26:14.240
not like, you know, talking to weather underground and getting back the weather, you know what

26:14.240 --> 26:15.240
I mean?

26:15.240 --> 26:18.760
You have to train them, you have to prep them up, you know.

26:18.760 --> 26:30.640
So there was this body of work that typically is best handled by experts to get the corpus,

26:30.640 --> 26:34.880
get the service ready to do what we needed it to do.

26:34.880 --> 26:39.480
And just needing that different skill set definitely presented challenges for us.

26:39.480 --> 26:48.160
You know, our team was really a team of software engineers and the idea of using APIs at runtime

26:48.160 --> 26:54.400
was super comfortable, but the idea of needing to train a service so that it would recognize

26:54.400 --> 26:57.680
certain intents was pretty foreign.

26:57.680 --> 27:03.480
And just because of staffing challenges, the engineers typically had to kind of step into

27:03.480 --> 27:08.240
that role of training these systems.

27:08.240 --> 27:16.720
And so did you have to build out specific processes and tooling to enable that to be done

27:16.720 --> 27:17.720
successfully?

27:17.720 --> 27:24.360
Um, I mean, I don't know if it was really that formal, it was basically like people were

27:24.360 --> 27:28.400
obligated to do it and so they did it and as they did it, they got better at it.

27:28.400 --> 27:33.960
You know, the tooling was already present, you know, like there's Watson Knowledge Studio

27:33.960 --> 27:40.480
comes as part of the package, which is, you know, great tooling sophisticated at this

27:40.480 --> 27:41.480
point.

27:41.480 --> 27:43.360
It's mature works really well.

27:43.360 --> 27:46.920
So we fortunately didn't didn't have to address that part of a puzzle.

27:46.920 --> 27:54.240
I mean, we were looking, we played around at different times with just manually using

27:54.240 --> 27:59.760
Watson Knowledge Studio to do the training versus trying to do it via APIs.

27:59.760 --> 28:03.320
You know, and we hit our heads on walls every once in a while when we would try to do our

28:03.320 --> 28:08.960
own automation is generally work better to like do it the way they sort of want you to

28:08.960 --> 28:15.680
do it, which is more manually or less or yeah, exactly a little bit more manually.

28:15.680 --> 28:23.120
In the case of WKS Watson Knowledge Studio, it was easier to just go into their UI, do

28:23.120 --> 28:24.120
their thing.

28:24.120 --> 28:30.560
I mean, that's continually progressing, which actually I think is another way that this

28:30.560 --> 28:34.880
type of work was a little different than the work that we were accustomed to doing.

28:34.880 --> 28:36.280
What's that?

28:36.280 --> 28:41.240
Well, like just this exact thing you were talking about, like trying to script, trying to

28:41.240 --> 28:47.160
interact programmatically with some of these services would change, it would change way

28:47.160 --> 28:49.320
more quickly than we were accustomed to.

28:49.320 --> 28:53.680
There'd be new vendors offering things that were better from one week to the next, you

28:53.680 --> 28:57.760
know, WKS would have a big iteration and things would change around and things that weren't

28:57.760 --> 29:01.080
possible previously were now possible.

29:01.080 --> 29:07.040
There'd be discontinued practice like, like Watson Assistant went from being Watson dialogue

29:07.040 --> 29:13.000
to Watson conversation to Watson Assistant and if through each step of that, there were

29:13.000 --> 29:14.600
major changes.

29:14.600 --> 29:22.520
So it's just such a like booming in a live field, sometimes it's just like ground is constantly

29:22.520 --> 29:24.760
shifting under us.

29:24.760 --> 29:31.000
And so we had to incorporate into our normal development process.

29:31.000 --> 29:36.640
This idea of sort of continually having spikes where we were doing research about things

29:36.640 --> 29:42.600
that we had already researched, you know, there had to be kind of a lot more time and energy

29:42.600 --> 29:48.160
put into staying abreast with the current technologies.

29:48.160 --> 29:52.040
And we also incorporated short, really short sprints.

29:52.040 --> 29:58.760
We're on a weekly sprint cycle on this project throughout throughout its whole life cycle.

29:58.760 --> 30:02.800
At the beginning, we thought it was going to be a temporarily short sprint cycle, but

30:02.800 --> 30:07.240
we found that we continuously were needing to like adjust course, you know, we'd learn

30:07.240 --> 30:11.680
something new, we get some new feedbacks, there'd be some new technology and we're continually

30:11.680 --> 30:16.720
just kind of let's say zigzagging because we were generally playing in the same direction

30:16.720 --> 30:24.480
of the significant, you know, adjustments to the approach on a almost on a weekly basis.

30:24.480 --> 30:32.840
Yeah, but at the same time, it sounds like you were able to successfully get this done

30:32.840 --> 30:40.280
with a traditional engineering team, whereas if you were, you know, needing to build all

30:40.280 --> 30:47.880
of the AI and LP conversational bits from scratch, it may have been a bit harder.

30:47.880 --> 30:50.480
Yeah, absolutely, absolutely.

30:50.480 --> 30:51.480
Yeah.

30:51.480 --> 30:56.880
And the degree of maturation in the space that we saw in the, you know, couple of years

30:56.880 --> 31:02.760
we spent building it was just amazing, you know, it would have been awesome if it could

31:02.760 --> 31:07.520
have been at the place it is now two years ago, it made our lives a lot easier, but we

31:07.520 --> 31:11.600
you know, perhaps gained a deeper appreciation of the advances.

31:11.600 --> 31:20.080
How did you address like the testing part of the development cycle and understanding, you

31:20.080 --> 31:26.280
know, did you try to create some kind of regression testing for the training process?

31:26.280 --> 31:32.000
So you knew if you kind of broke something in training, that kind of thing.

31:32.000 --> 31:33.000
Right.

31:33.000 --> 31:34.000
Great question.

31:34.000 --> 31:41.000
Kind of mapping this, you know, traditional dev process to this, you know, AI enhanced,

31:41.000 --> 31:43.000
let's say, dev process.

31:43.000 --> 31:44.000
Yeah.

31:44.000 --> 31:45.000
Yeah.

31:45.000 --> 31:46.000
Yeah.

31:46.000 --> 31:49.200
You know, I'm afraid my answer is going to be a little bit of a cop out here.

31:49.200 --> 31:54.160
We were looking at this, finding the right balance between delivering stuff quickly for

31:54.160 --> 32:02.040
a small number of customers in this constantly shifting space versus having a solution that

32:02.040 --> 32:06.680
was really solid and scalable and we'd be able to use for 50 customers, you know, there

32:06.680 --> 32:09.760
was this real tension between that.

32:09.760 --> 32:16.880
And as you say, it's directly attributable to applying sort of traditional web software

32:16.880 --> 32:23.720
development, multi tenant software as a service practices to this AI space.

32:23.720 --> 32:34.000
So, you know, we, we just kind of did the best we could, we had thorough regression tests

32:34.000 --> 32:37.920
around the more traditional parts of our code base.

32:37.920 --> 32:43.600
You know, we had thorough unit tests, test coverage metrics and all that kind of stuff

32:43.600 --> 32:51.280
around the express application and around our react front ends and stuff like that.

32:51.280 --> 33:01.600
And it came to the Watson assistant pieces and the NLP training, it was a little softer.

33:01.600 --> 33:03.640
It was a little softer.

33:03.640 --> 33:09.520
We were intending to button that up a little better as we move forward.

33:09.520 --> 33:14.400
And we're expecting, you know, given the pace of evolution of the tools, we're expecting

33:14.400 --> 33:17.640
that it's going to be easier to do that going forward.

33:17.640 --> 33:22.680
You know, it was like Watson knowledge studio advance, we're expecting to be able to script

33:22.680 --> 33:29.960
the training more thoroughly and tie that scripted training to testing the results of it

33:29.960 --> 33:31.960
more thoroughly.

33:31.960 --> 33:37.640
But it's really tricky because not only is potentially our training set changing, but

33:37.640 --> 33:42.040
also, you know, like Watson assistant is a service we're relying on that's constantly

33:42.040 --> 33:43.040
evolving.

33:43.040 --> 33:45.280
So it could be that our training data stays the same.

33:45.280 --> 33:49.240
But the results change, even though we can't change anything.

33:49.240 --> 33:56.000
And so we didn't get too obsessed with buttoning that up at this point in the process.

33:56.000 --> 33:57.000
Right.

33:57.000 --> 34:01.320
Embrace the chaos to a certain extent.

34:01.320 --> 34:06.920
You know, and I think an important sort of corollary to that is that, you know, we're

34:06.920 --> 34:09.080
not sending rockets into space, right?

34:09.080 --> 34:12.600
And we're not automating million dollars trading, right?

34:12.600 --> 34:13.920
We're recommending jackets.

34:13.920 --> 34:20.960
And so we, we kind of leveled the appropriate appetite for risk with the domain.

34:20.960 --> 34:26.480
You know, if something goes awry with the training of Watson assistant and it's not quite

34:26.480 --> 34:31.320
right, well, you know, we can tolerate that.

34:31.320 --> 34:38.520
So, you know, we, we do our best.

34:38.520 --> 34:40.920
Where did the training data come from?

34:40.920 --> 34:49.480
We have thorough analytics built into XPS so that we keep track of every step of every user's

34:49.480 --> 34:52.480
interaction with the service.

34:52.480 --> 34:59.560
And we're able to use the utterances that we captured from users throughout the process.

34:59.560 --> 35:06.160
So there's, there's a manual step to it in that the taking the data from our analytics

35:06.160 --> 35:10.400
system and feeding it in to Watson knowledge studio.

35:10.400 --> 35:16.560
There were some manual processing involved with it, especially around the ground truth.

35:16.560 --> 35:21.160
You know, like we could have automated feeding in all the utterances, but it would have

35:21.160 --> 35:26.200
been a little trickier to say what the correct responses should have been.

35:26.200 --> 35:33.760
But we did have the advantage of accumulating a large amount of real data and being able

35:33.760 --> 35:38.400
to use that throughout the process.

35:38.400 --> 35:47.000
And from the perspective of the engineers that were working on this, what was their experience

35:47.000 --> 35:52.840
like did they feel like they had to become data scientists in order to be successful

35:52.840 --> 35:53.840
with this project?

35:53.840 --> 36:00.840
Or, you know, was there a good balance between the APIs taking care of, you know, the deep

36:00.840 --> 36:07.760
algorithmic bits in them, you know, doing the higher level training stuff, the integration

36:07.760 --> 36:09.760
and the traditional engineering tasks?

36:09.760 --> 36:11.760
Yeah, a good question.

36:11.760 --> 36:19.800
You know, there was a, on the one hand, the engineering team were, were somewhat generalists

36:19.800 --> 36:25.640
who really enjoyed being exposed to new ideas and new technologies.

36:25.640 --> 36:29.880
You know, so like in the course of this project, some of the people on the team were learning

36:29.880 --> 36:33.120
react and redux for the first time, for example.

36:33.120 --> 36:34.120
Okay.

36:34.120 --> 36:38.360
But the entire team was learning about the Watts and APIs for the first time.

36:38.360 --> 36:42.600
And so being exposed to new technologies like that was awesome.

36:42.600 --> 36:47.800
And I think there's just the idea of understanding and being exposed to the role of a data scientist

36:47.800 --> 36:53.080
and how that compares to software engineering and being in a situation where they were forced

36:53.080 --> 36:57.080
to kind of be a little bit more immersed in that data science role than they ordinarily

36:57.080 --> 36:58.080
would have been.

36:58.080 --> 37:03.440
I think that was, that broadened horizons and was welcomed.

37:03.440 --> 37:10.040
At the same time, I think there were kind of, you know, they reached kind of a saturation

37:10.040 --> 37:16.840
point where like having to deal with the fact that it wasn't, you know, recognizing,

37:16.840 --> 37:20.920
you know, the difference between, you know, there are some examples of these things, you

37:20.920 --> 37:27.080
know, there are certain utterances that just cause problems like, yeah, just like negation

37:27.080 --> 37:28.080
is a simple one.

37:28.080 --> 37:34.960
You know, I want a jacket that's not green or you could say that anything but green,

37:34.960 --> 37:42.160
you know, and recognizing these negations correctly can involve some extensive training.

37:42.160 --> 37:49.800
Some of the language around that is fairly ambiguous to the untrained NLP system.

37:49.800 --> 37:56.880
And so like having to go back in and like, oh, anything but green, why isn't that working?

37:56.880 --> 37:57.880
How are we going to train that?

37:57.880 --> 38:04.320
Like that wasn't generally the developer's favorite part of the job, you know, yeah, so

38:04.320 --> 38:09.160
I think at the abstract level, the idea of understanding data science and how that fits

38:09.160 --> 38:14.200
into the process and how these AI technologies really work was awesome and they loved it,

38:14.200 --> 38:19.440
but they kind of had enough after a while.

38:19.440 --> 38:26.280
And kind of end of the day, how was the project received from the North Face's perspective,

38:26.280 --> 38:28.440
customer perspective?

38:28.440 --> 38:34.600
Well, it was certainly understood from the get go that this was kind of bleeding edge

38:34.600 --> 38:41.360
stuff, you know, that we were figuring this out on the fly and giving it a go.

38:41.360 --> 38:48.000
So the like the format and the vision of it, I think, was awesome, you know, they really

38:48.000 --> 38:49.000
like that.

38:49.000 --> 38:55.200
One of the challenges that we met with the North Face that honestly surprised me was

38:55.200 --> 39:01.280
the product attribution turned out to be surprisingly challenging.

39:01.280 --> 39:09.720
I had assumed that the North Face would have really thorough, like facets, faceted characteristics

39:09.720 --> 39:13.480
of their jackets that would provide us with all the raw material that we would need

39:13.480 --> 39:18.960
in order to differentiate them through a conversation, but we found two challenges in

39:18.960 --> 39:19.960
that.

39:19.960 --> 39:26.040
One is that the the existing faceted search capability that you see, you know, basically

39:26.040 --> 39:30.800
across the commerce landscape is really good, you know, like if, if you want to just sort

39:30.800 --> 39:35.240
of check boxes and say, I need a jacket that's waterproof, I need a jacket that's green,

39:35.240 --> 39:38.560
like you don't need this conversational interface to do that.

39:38.560 --> 39:44.640
You can just click, click, see it, you know, that's like, so that is so surprised you said

39:44.640 --> 39:49.760
is really good because in my head, as you were saying that I was thinking is really horrible

39:49.760 --> 39:56.920
I guess in some places it's implemented better than others is probably the best way to

39:56.920 --> 39:57.920
say that.

39:57.920 --> 40:02.320
I mean, I think of like kayak.com, you know, when you're searching for flights or

40:02.320 --> 40:06.040
hotels or something, you know, I'm like, to me, that's awesome, you know, just it's

40:06.040 --> 40:09.200
really nice, like, but you're absolutely, of course, you're right.

40:09.200 --> 40:14.840
I mean, it's not implemented well across the board, but the idea has been articulated

40:14.840 --> 40:18.640
successfully in certain cases.

40:18.640 --> 40:27.880
So we deliberately did not want this conversational experience to be perceived as like a watered

40:27.880 --> 40:30.840
down version of a faceted search.

40:30.840 --> 40:31.840
Right.

40:31.840 --> 40:38.960
And so part of that sort of necessitated that we have facets, you know, we have product

40:38.960 --> 40:44.960
attributes that are different, you know, there's kind of qualitatively different.

40:44.960 --> 40:49.440
And so we started looking, you know, experimented around with different things, you know, like

40:49.440 --> 40:55.880
more emotional type attributes where you'd say, like, I want an adventurous jacket.

40:55.880 --> 41:01.760
Well, like, what does that even mean on one, you know, but if you could, if you could

41:01.760 --> 41:07.120
somehow capture that and kind of represent that or, you know, like, like the personality

41:07.120 --> 41:14.160
of the shopper can translate into like finding jackets that match that personality, whether

41:14.160 --> 41:21.000
it's adventurous or studious or whatever it may be, you know, so we spent some time kind

41:21.000 --> 41:28.280
of exploring that in order to really maximize the conversational benefits.

41:28.280 --> 41:29.920
And that proved to be difficult.

41:29.920 --> 41:34.880
I can't say we hit, hit it out of a park with that piece.

41:34.880 --> 41:42.000
So there's, there's clearly room for more progress, like identifying what, how to make

41:42.000 --> 41:50.120
this more satisfyingly conversational and how to obtain the product attribution necessary

41:50.120 --> 41:51.120
to do that.

41:51.120 --> 41:52.120
All right.

41:52.120 --> 41:59.520
The challenges that you had with regard to the product attributes specific to these more

41:59.520 --> 42:05.480
emotional attributes that you were looking for or even some of the traditional attributes

42:05.480 --> 42:12.000
as well, like the kind of the, did you deal with challenges and just having the basic kinds

42:12.000 --> 42:16.080
of information you'd want to help customers make decisions?

42:16.080 --> 42:19.240
Yes, for sure, for sure.

42:19.240 --> 42:24.720
Take, take waterproofness, for example, like if you don't think about it too much, it seems

42:24.720 --> 42:26.120
really straightforward.

42:26.120 --> 42:28.400
The jacket's waterproof, it's not, right?

42:28.400 --> 42:31.480
But it's, no, it's not that simple.

42:31.480 --> 42:39.240
And there are some barely formally defined standards of waterproofness.

42:39.240 --> 42:44.040
You have water resistance versus waterproofness.

42:44.040 --> 42:50.800
And so you have the one challenge of like the interface with the human being, you know,

42:50.800 --> 42:53.080
with the person who's by this thing, right?

42:53.080 --> 42:59.920
And like trying to avoid jargon, but it was surprisingly difficult to avoid jargon.

42:59.920 --> 43:03.200
Same thing with windproofness, wind resistance and all that.

43:03.200 --> 43:07.240
So you've got kind of this sort of impedance mismatch between the technical characteristics

43:07.240 --> 43:13.400
of the jackets and the way a user might perceive them.

43:13.400 --> 43:19.160
And then sometimes too, there were just missing data, you know, you just, you would think

43:19.160 --> 43:23.680
that they would just all be there, but it's not, you know, like the systems that they

43:23.680 --> 43:29.720
use, sometimes all the dots don't connect all the way up to where we got the data.

43:29.720 --> 43:37.840
So it got to be sometimes a bit of a bottleneck, just getting data that they just must have,

43:37.840 --> 43:40.880
but it wasn't flowing to us.

43:40.880 --> 43:44.560
And how did you address that?

43:44.560 --> 43:50.800
Well, the scale that we were looking at with, that we were looking at with the North Face

43:50.800 --> 43:55.400
is relatively small, you know, we got a few hundred jackets.

43:55.400 --> 44:01.240
So we would just work, we were just working with the North Face product team and just working

44:01.240 --> 44:05.200
with people there and they help us resolve things that are missing.

44:05.200 --> 44:06.600
That's sort of a simple part.

44:06.600 --> 44:11.240
It's cumbersome, you know, it's not super ideal.

44:11.240 --> 44:16.040
And it raises questions around scalability, you know, like it's working okay, because

44:16.040 --> 44:23.240
we got, you know, 300 some jackets, but if we were to expand, that would be more problematic.

44:23.240 --> 44:27.520
With other customers, we've worked with, we've had larger numbers of products, which has

44:27.520 --> 44:33.400
made those problems more, more real, and we've had to resort to, well, not resort to,

44:33.400 --> 44:37.920
we've leveraged, there's actually another place where machine learning has come in, where

44:37.920 --> 44:42.760
you get information, the information that you have about a product, you know, things

44:42.760 --> 44:50.160
like its description and so on, can be used via machine learning to perform classifications

44:50.160 --> 44:57.600
and determine some of its attributes, limited, you know, it depends on what kind of description

44:57.600 --> 45:03.520
you have for that product, as to how well that will work, or if you're able to tap into

45:03.520 --> 45:10.920
supplementary sources like product reviews, but it's really helpful, but it doesn't

45:10.920 --> 45:12.600
truly solve the problem.

45:12.600 --> 45:19.080
We've also looked at crowd sourcing to help with it too, but it's just definitely a

45:19.080 --> 45:20.080
challenge.

45:20.080 --> 45:23.200
It really kind of opened my eyes to like a whole industry.

45:23.200 --> 45:30.080
I didn't really quite realize that there's like a whole industry around product attribution

45:30.080 --> 45:32.240
and it's tricky.

45:32.240 --> 45:36.080
Yeah, it's amazing.

45:36.080 --> 45:41.440
So you've some years back or some, at some point someone used some attributes to come

45:41.440 --> 45:45.200
up with a description, but you've lost connection to the attributes themselves and have to

45:45.200 --> 45:50.720
like infer them using ML from the descriptions that they wrote, basically, that's sort of

45:50.720 --> 45:55.120
what it seemed like, yeah, yeah, wow, wow, yep.

45:55.120 --> 46:03.160
And so this, the system is like, it's up on the northface.com slash XPS.

46:03.160 --> 46:04.760
How do you see it evolving over time?

46:04.760 --> 46:09.240
You've talked a little bit about, you know, some, some areas, but where does it go from

46:09.240 --> 46:10.240
here?

46:10.240 --> 46:16.120
What's the budget?

46:16.120 --> 46:22.800
I think that probably the most interesting place for it to go is machine learning.

46:22.800 --> 46:27.520
So we've got that whole heatsink business I was talking about to provide content based

46:27.520 --> 46:35.160
recommendations, but providing using machine, I see using machine learning in two ways

46:35.160 --> 46:40.800
to benefit system one is to help figure out which question to ask next.

46:40.800 --> 46:48.400
So you could be seeing based on the characteristics of a session in XPS, you could see which questions

46:48.400 --> 46:53.640
not based on this predictive stuff we've been doing, but you could just see based on like

46:53.640 --> 46:59.440
actual results of prior sessions, which questions delivered the most value.

46:59.440 --> 47:01.240
Right, right.

47:01.240 --> 47:05.920
And then, of course, you could also be using it to actually provide product recommendations.

47:05.920 --> 47:11.120
You could see, okay, based on how this session is progressing, you know, what products

47:11.120 --> 47:18.640
received positive feedback from similar sessions in the past and then bump those recommendations

47:18.640 --> 47:19.640
up.

47:19.640 --> 47:24.880
And like I had mentioned, the analytics tracking that we've been doing, you know, came up when

47:24.880 --> 47:30.480
we were talking about like, training the NLP system, well, that NLX system also will

47:30.480 --> 47:36.400
provide us with training data for both of those applications of machine learning.

47:36.400 --> 47:41.960
So we're positioned to make that happen, but all you have to do is listen to a couple

47:41.960 --> 47:48.560
of episodes of Twimmel to understand that it's a piece of work, you know, that's, you

47:48.560 --> 47:52.720
know, that, but I think that would be a great place for XPS to expand.

47:52.720 --> 47:56.520
Andrew, thanks so much for taking the time to chat with us about this project.

47:56.520 --> 48:01.320
It sounds like a ton of fun, and I'm looking forward to playing around with it and maybe

48:01.320 --> 48:02.920
seeing if I can find a jacket.

48:02.920 --> 48:03.920
Yeah.

48:03.920 --> 48:04.920
Yeah.

48:04.920 --> 48:11.080
Hopefully we can expand to give you advice about bike paniers and tents and stuff.

48:11.080 --> 48:14.560
Thanks a lot, Jim.

48:14.560 --> 48:15.560
Thanks, Andrew.

48:15.560 --> 48:23.240
All right, everyone, that's our show for today for more information on Andrew or any of

48:23.240 --> 48:29.400
the topics covered in this show, visit twimmelai.com slash talk slash 239.

48:29.400 --> 48:56.160
As always, thanks so much for listening and catch you next time.

