1
00:00:00,000 --> 00:00:16,320
Hello and welcome to another episode of Twimble Talk, the podcast why interview interesting

2
00:00:16,320 --> 00:00:21,480
people, doing interesting things in machine learning and artificial intelligence.

3
00:00:21,480 --> 00:00:31,400
I'm your host Sam Charrington.

4
00:00:31,400 --> 00:00:37,440
In this episode we're joined by Kristi Denison, machine learning engineer at OpenAI.

5
00:00:37,440 --> 00:00:42,000
Since joining OpenAI earlier this year, Kristi's been working on OpenAI's efforts to build

6
00:00:42,000 --> 00:00:46,680
an AI-powered agent to play the Dota 2 video game.

7
00:00:46,680 --> 00:00:52,160
Our conversation begins with an overview of Dota 2 gameplay and the recent OpenAI 5 benchmark,

8
00:00:52,160 --> 00:00:57,080
which put the OpenAI agent up against the team of professional human players.

9
00:00:57,080 --> 00:01:02,320
We then dig into the underlying technology used to create OpenAI 5, including their use

10
00:01:02,320 --> 00:01:07,680
of deep reinforcement learning and LSTM recurrent neural networks and their liberal use of

11
00:01:07,680 --> 00:01:11,640
entity embeddings, plus some of the other tricks and techniques they used to train the

12
00:01:11,640 --> 00:01:18,560
model on 256 GPUs and 128,000 CPU cores.

13
00:01:18,560 --> 00:01:21,600
This was a fun interview and I hope you enjoy it.

14
00:01:21,600 --> 00:01:22,600
Let's go.

15
00:01:22,600 --> 00:01:26,320
All right everyone, I am on the line with Kristi Denison.

16
00:01:26,320 --> 00:01:29,520
Kristi is a machine learning engineer at OpenAI.

17
00:01:29,520 --> 00:01:32,800
Kristi, welcome to this week in machine learning and AI.

18
00:01:32,800 --> 00:01:33,800
Thank you.

19
00:01:33,800 --> 00:01:34,800
It's nice to be here.

20
00:01:34,800 --> 00:01:35,800
Fantastic.

21
00:01:35,800 --> 00:01:38,840
So you've been at OpenAI for coming up on a year now.

22
00:01:38,840 --> 00:01:46,040
I guess you started there in January and you've been working on Dota, the Dota 2 project

23
00:01:46,040 --> 00:01:47,040
there.

24
00:01:47,040 --> 00:01:51,640
And tell us about some of your experiences in joining that team.

25
00:01:51,640 --> 00:01:54,560
Yeah, it's been a lot of fun.

26
00:01:54,560 --> 00:02:02,400
I've gotten to learn everything from interfacing with the game to also our machine learning architecture.

27
00:02:02,400 --> 00:02:05,920
It's really, it's super interesting.

28
00:02:05,920 --> 00:02:10,560
As a machine learning engineer, I've gotten to add features so the model can observe different

29
00:02:10,560 --> 00:02:15,720
parts of the game and I've also gotten to learn about how you actually interface with

30
00:02:15,720 --> 00:02:16,720
the game.

31
00:02:16,720 --> 00:02:24,000
So I think like if you wanted to, you know, have a bot play in Dota, we do have an API,

32
00:02:24,000 --> 00:02:27,000
but there's a lot of things to understand there.

33
00:02:27,000 --> 00:02:29,040
It's not just, we don't look at pixels.

34
00:02:29,040 --> 00:02:33,280
So instead of pixels, you have to use the API and find ways to represent that in a way

35
00:02:33,280 --> 00:02:35,800
that our model can understand it.

36
00:02:35,800 --> 00:02:38,760
Are you a Dota player before joining OpenAI?

37
00:02:38,760 --> 00:02:45,160
I have to admit that I don't play Dota very well and I did not play beforehand or many

38
00:02:45,160 --> 00:02:46,160
games at all.

39
00:02:46,160 --> 00:02:51,800
But I hope by helping OpenAI 5 that it can play well for me.

40
00:02:51,800 --> 00:02:56,720
I think you and I both are in that same boat.

41
00:02:56,720 --> 00:03:04,120
In fact, I don't know much about the game at all or at least I didn't until learning about

42
00:03:04,120 --> 00:03:09,160
it in the context of what OpenAI is doing and I suspect that there are plenty of folks

43
00:03:09,160 --> 00:03:11,680
in our audience that don't know much about the game.

44
00:03:11,680 --> 00:03:17,640
So maybe you can tell us a little bit about Dota starting from, you know, why is it an

45
00:03:17,640 --> 00:03:24,000
interesting environment around which to experiment with AI?

46
00:03:24,000 --> 00:03:25,000
Sure.

47
00:03:25,000 --> 00:03:27,640
So again, this is a research company.

48
00:03:27,640 --> 00:03:32,280
So our, we don't just play games all day are one of the things we really are trying

49
00:03:32,280 --> 00:03:38,040
to do with Dota is use it as a test bed for these RL algorithms and that's a reinforcement

50
00:03:38,040 --> 00:03:39,040
learning.

51
00:03:39,040 --> 00:03:41,160
So why Dota?

52
00:03:41,160 --> 00:03:46,120
We've seen a lot of strides recently with or even actually not just recently for decades

53
00:03:46,120 --> 00:03:51,720
with Chast and Go and the real question is what do you do next, right?

54
00:03:51,720 --> 00:03:56,520
You want something that's close to the real world and that's the main application for

55
00:03:56,520 --> 00:04:02,800
a lot of AI's to the world like how well can you affect the real world?

56
00:04:02,800 --> 00:04:08,760
Dota is probably one of the most complex in terms of strategy games that are popular

57
00:04:08,760 --> 00:04:10,200
out there right now.

58
00:04:10,200 --> 00:04:14,880
So there's tons of people who have already been playing it for forever and or at least

59
00:04:14,880 --> 00:04:21,880
as long as it's existed and it's a complex game not just because of, oh well, it's not

60
00:04:21,880 --> 00:04:25,200
just an eight by eight board because the board does have a size, right?

61
00:04:25,200 --> 00:04:31,000
You have a map and Dota and you have two sides, two different teams that try to fight

62
00:04:31,000 --> 00:04:35,080
each other and there are these buildings you're trying to destroy and eventually there's

63
00:04:35,080 --> 00:04:39,320
one building and you destroy the call of the ancient if you destroyed this particular

64
00:04:39,320 --> 00:04:45,560
building you win the game and it's not as simple as just taking all your characters and

65
00:04:45,560 --> 00:04:50,760
charging right at that other building because there is this complex rule set that makes

66
00:04:50,760 --> 00:04:55,520
it so that you can't just simply win in one way and that's something that they do a

67
00:04:55,520 --> 00:05:00,760
really good job at at these, you know, multiplayer games is try to keep everything balanced.

68
00:05:00,760 --> 00:05:04,560
So there's lots of items you can use that can give you certain advantages at different

69
00:05:04,560 --> 00:05:06,960
parts in the game.

70
00:05:06,960 --> 00:05:10,400
They also have some downsides in some cases or they don't give you strength another or

71
00:05:10,400 --> 00:05:14,320
they cost money and you have to get money by killing these little minions that each side

72
00:05:14,320 --> 00:05:22,160
has. There's a ton of complexity behind Dota and I would take many of your episodes to

73
00:05:22,160 --> 00:05:28,040
get through it all, I think, but the core of the issue is that it's a great test bed

74
00:05:28,040 --> 00:05:32,440
for reinforcement learning because it's so complex because you can't understand it

75
00:05:32,440 --> 00:05:35,600
and it's simple an eight by eight board.

76
00:05:35,600 --> 00:05:42,880
Is there any one particular factoid or metric that kind of captures for you the complexity

77
00:05:42,880 --> 00:05:43,880
of the game?

78
00:05:43,880 --> 00:05:48,320
Well, okay, so I think the thing that really makes it interesting, I think, from a machine

79
00:05:48,320 --> 00:05:52,680
learning perspective is that there's partial information and that's all you work off of

80
00:05:52,680 --> 00:05:55,320
is partial information all day long.

81
00:05:55,320 --> 00:06:02,560
Each side has this what they call a fog of war and it covers your enemies team and unless

82
00:06:02,560 --> 00:06:07,160
you place certain items in certain spots, you can't see things and if you can't see

83
00:06:07,160 --> 00:06:11,360
how are you supposed to win, how are you supposed to attack the enemy.

84
00:06:11,360 --> 00:06:17,200
So this partial information is I think probably the reason that makes it the most complex

85
00:06:17,200 --> 00:06:22,240
is because if you did know where everyone was, it would be a lot easier game.

86
00:06:22,240 --> 00:06:30,880
So OpenAI recently held an event that was called the OpenAI 5 benchmark.

87
00:06:30,880 --> 00:06:36,240
What's the significance of this benchmark in OpenAI 5?

88
00:06:36,240 --> 00:06:40,800
Sure, so we've been, so actually, I should probably maybe give you a little bit of a

89
00:06:40,800 --> 00:06:43,960
timeline of what we've been going through so far.

90
00:06:43,960 --> 00:06:50,560
So last year we had our 1v1 bot and it beat some of the top players in the world at 1v1,

91
00:06:50,560 --> 00:06:59,240
but as many Dota players know, 1v1 has a restricted set of rules, it's only like kill the

92
00:06:59,240 --> 00:07:05,040
first tower, it's only mid lane, basically it's a much simpler game.

93
00:07:05,040 --> 00:07:09,880
And so in order to really do Dota and really do the full complexity again, you have to do

94
00:07:09,880 --> 00:07:12,680
5v5 with 5 players on each side.

95
00:07:12,680 --> 00:07:17,600
So that was last year and this last year we've been working really hard to, you know, bring

96
00:07:17,600 --> 00:07:20,520
you OpenAI 5 as it is today.

97
00:07:20,520 --> 00:07:26,960
And having 5 instead of 1 presents a lot more challenges than just adding 4 more bots,

98
00:07:26,960 --> 00:07:33,680
we had to allow, as I said before, like the game features, going back to this last May,

99
00:07:33,680 --> 00:07:38,800
we had an inhouse team and they were still, I mean, they're pretty good and probably

100
00:07:38,800 --> 00:07:42,600
average players were able to beat our OpenAI 5.

101
00:07:42,600 --> 00:07:47,400
And then in June, our OpenAI 5 was able to beat our inhouse team.

102
00:07:47,400 --> 00:07:49,520
And so we're like, well now what do we do, right?

103
00:07:49,520 --> 00:07:52,720
How do we figure out how good our OpenAI 5 is?

104
00:07:52,720 --> 00:07:54,320
We don't have a way of knowing.

105
00:07:54,320 --> 00:08:02,960
So we found some, you know, some very stronger test teams to test out OpenAI 5 and they were

106
00:08:02,960 --> 00:08:03,960
also winning.

107
00:08:03,960 --> 00:08:06,480
The OpenAI 5 was winning.

108
00:08:06,480 --> 00:08:08,440
So now we're like, well now what do we do, right?

109
00:08:08,440 --> 00:08:12,640
We need to find, how do you, how do you, like, for something that you can't measure in

110
00:08:12,640 --> 00:08:17,080
a scripted way, something this complex, how do you do the next thing?

111
00:08:17,080 --> 00:08:24,440
So that's the point of the benchmark match was to get some, you know, 99.95% out players

112
00:08:24,440 --> 00:08:28,320
and have them play OpenAI 5 to see how good is it.

113
00:08:28,320 --> 00:08:29,320
Like where are we?

114
00:08:29,320 --> 00:08:30,720
What do we need to do for TI?

115
00:08:30,720 --> 00:08:35,400
And TI is the big competition and at the end of August, it's coming up in a couple

116
00:08:35,400 --> 00:08:36,400
weeks.

117
00:08:36,400 --> 00:08:41,400
It's called the International and Dota players from around the world get together to compete.

118
00:08:41,400 --> 00:08:43,400
There's this large prize pool at the end.

119
00:08:43,400 --> 00:08:47,200
But the thing that we really want to know is, you know, is self-play?

120
00:08:47,200 --> 00:08:51,800
Does it work or do you have this thing we call strategy collapse where it learns only

121
00:08:51,800 --> 00:08:54,160
one strategy can't recover?

122
00:08:54,160 --> 00:08:59,480
It's a really interesting problem and I feel like the only way we can know if it's actually

123
00:08:59,480 --> 00:09:05,280
learning well is if by testing against these really strong teams.

124
00:09:05,280 --> 00:09:11,120
And now this prize pool for the TI, that's like $30 million or something like that.

125
00:09:11,120 --> 00:09:12,120
Something like that.

126
00:09:12,120 --> 00:09:18,080
I'm not too connected with the specifics, but yes, it's a pretty big prize pool.

127
00:09:18,080 --> 00:09:27,520
I vaguely remember from last year's 1v1 work around Dota that there was some controversy.

128
00:09:27,520 --> 00:09:30,160
Do you recall what that was?

129
00:09:30,160 --> 00:09:34,120
I maybe if you have more details on that, I mean.

130
00:09:34,120 --> 00:09:38,480
I remember there was dig into it in a lot of detail.

131
00:09:38,480 --> 00:09:46,160
But I recall at around the time that OpenAI published its 1v1 results, there were, I guess,

132
00:09:46,160 --> 00:09:51,920
the usual questions around kind of the applicability and the generality of the results, whether the

133
00:09:51,920 --> 00:09:58,480
system had, you know, some things that were, you know, hard-coded or, or, you know, rules

134
00:09:58,480 --> 00:10:04,640
that were baked in versus purely learned, whether, you know, it had access to more better

135
00:10:04,640 --> 00:10:07,840
information than a human might have that kind of thing.

136
00:10:07,840 --> 00:10:13,000
So I was not working here last year, but I can at least answer your questions about specifically

137
00:10:13,000 --> 00:10:15,320
doesn't have better information than a human.

138
00:10:15,320 --> 00:10:20,440
And the answer there is just, it doesn't have any extra information.

139
00:10:20,440 --> 00:10:23,120
And if anything, it actually has less.

140
00:10:23,120 --> 00:10:28,520
When you get all the information we get, we get from the official API, which gives us information

141
00:10:28,520 --> 00:10:32,800
of, like, where the hero is and what are your abilities that are available and can you

142
00:10:32,800 --> 00:10:35,400
use those abilities?

143
00:10:35,400 --> 00:10:39,120
And there's, in fact, one of the things we've realized is that as we've been adding more

144
00:10:39,120 --> 00:10:43,880
features, the, you know, OpenAI 5 has actually been doing really well, even when it doesn't

145
00:10:43,880 --> 00:10:49,400
have any vision into certain things, like for a long time, it didn't see a wooden

146
00:10:49,400 --> 00:10:50,400
zone.

147
00:10:50,400 --> 00:10:51,400
And it actually sort of did okay.

148
00:10:51,400 --> 00:10:52,920
It's a lot better now that I can't see them.

149
00:10:52,920 --> 00:10:53,920
It didn't see what?

150
00:10:53,920 --> 00:10:54,920
Oh, sorry.

151
00:10:54,920 --> 00:10:58,800
So there are these things called avoidant zones.

152
00:10:58,800 --> 00:11:04,360
One example is there's a character, they call them a heroes, called Sniper, who has this

153
00:11:04,360 --> 00:11:08,080
ability called, that's called Trapnel.

154
00:11:08,080 --> 00:11:13,520
And it's basically this area of effect spell that gives damage if you walk into it.

155
00:11:13,520 --> 00:11:17,920
And because OpenAI 5 didn't know where they were, they would walk in the middle and be

156
00:11:17,920 --> 00:11:20,000
like, I'm taking damage now what?

157
00:11:20,000 --> 00:11:21,920
And just kind of stand there and take it.

158
00:11:21,920 --> 00:11:27,760
So in some cases, it started to sort of learn how to get out of it, but it was a lot better

159
00:11:27,760 --> 00:11:34,760
when it had a map around itself indicating where it was so it knew how to get out.

160
00:11:34,760 --> 00:11:40,360
But so the thing is, even without that, it still was doing pretty well against Story

161
00:11:40,360 --> 00:11:41,360
and House team.

162
00:11:41,360 --> 00:11:45,160
So there's nothing that it had, no information, it has extra.

163
00:11:45,160 --> 00:11:50,640
The one advantage it does have, and I think this is just because, you know, you do have

164
00:11:50,640 --> 00:11:55,120
the API, you do have all the observations up front.

165
00:11:55,120 --> 00:12:01,000
Humans have to check other heroes manually, they have to do that switching, and pro players

166
00:12:01,000 --> 00:12:02,360
are very fast at it.

167
00:12:02,360 --> 00:12:08,600
But they do have, there's that delay of switching on the thing, whereas OpenAI 5 just can access

168
00:12:08,600 --> 00:12:13,040
it as it comes in.

169
00:12:13,040 --> 00:12:16,720
But I can't react instantly, that's another thing I think some people have been talking

170
00:12:16,720 --> 00:12:18,800
about.

171
00:12:18,800 --> 00:12:24,560
So originally, when we were doing this, we do this thing called FrameSkip, and it is

172
00:12:24,560 --> 00:12:29,600
that there's 30 frames in a second, and we could take an action on every frame, but it

173
00:12:29,600 --> 00:12:33,360
actually makes training super difficult too long to do.

174
00:12:33,360 --> 00:12:38,520
So we take an action every four frames and then collect observation and create an action.

175
00:12:38,520 --> 00:12:43,840
The problem with that is that means your reaction time is around 80 milliseconds, which seems

176
00:12:43,840 --> 00:12:47,040
on fair compared to even in top humans.

177
00:12:47,040 --> 00:12:54,200
So we actually slowed it down, although it had to admit, it wasn't because, necessarily,

178
00:12:54,200 --> 00:12:59,120
we were ready to take that step of, you know, making it even.

179
00:12:59,120 --> 00:13:04,080
We were just trying to speed up training, because the forward past time took so much time

180
00:13:04,080 --> 00:13:09,120
and doing the game time took so much time, made a lot of more sense to offset our actions.

181
00:13:09,120 --> 00:13:14,200
So it is now closer to 200 milliseconds, reaction time, which is closer to humans.

182
00:13:14,200 --> 00:13:19,640
I think a lot more fair, but other than that, other than the fact that it does get all

183
00:13:19,640 --> 00:13:26,520
the observations at once, it also the other thing too, is that the time to think is very

184
00:13:26,520 --> 00:13:27,520
different, right?

185
00:13:27,520 --> 00:13:31,240
Even if you have, you see an observation, and it's not until 200 milliseconds later, you

186
00:13:31,240 --> 00:13:36,360
can respond to it, you know, opening a five doesn't need time to think like a human

187
00:13:36,360 --> 00:13:37,360
does.

188
00:13:37,360 --> 00:13:41,160
A human, it's not just about need your reaction time, it's also about the thinking time,

189
00:13:41,160 --> 00:13:46,400
and you know, depending on how good you are, it might be like, involuntary or not, and

190
00:13:46,400 --> 00:13:51,840
that's another thing that humans don't, like, the opening a five doesn't really, there's

191
00:13:51,840 --> 00:13:52,840
not a good way.

192
00:13:52,840 --> 00:13:57,240
I mean, we could delay them, but it's just a disadvantage humans just naturally have.

193
00:13:57,240 --> 00:14:05,000
So you've mentioned some things like Shrapnel and some aspects of the heroes.

194
00:14:05,000 --> 00:14:09,280
It's kind of making me want to take a step back and talk about some, you know, nuances

195
00:14:09,280 --> 00:14:11,440
or details of the game that might help.

196
00:14:11,440 --> 00:14:17,040
Again, those of us who aren't really familiar with it fully understand, or at least not

197
00:14:17,040 --> 00:14:21,280
fully understand, but at least get a sense of, you know, what gameplay is like.

198
00:14:21,280 --> 00:14:29,880
So the standard game is five by five, or is it a game that you would have, you know, unlimited

199
00:14:29,880 --> 00:14:33,440
number of people playing simultaneously?

200
00:14:33,440 --> 00:14:42,240
Yeah, so the standard game is five by five, and again, you can play 1v1, but yes, that

201
00:14:42,240 --> 00:14:43,240
is a standard game.

202
00:14:43,240 --> 00:14:47,440
Sorry, so I should probably give a little more context about the game.

203
00:14:47,440 --> 00:14:56,120
So there are, I think, 100 and 100 something heroes, I think it's over 110, I think.

204
00:14:56,120 --> 00:15:01,760
And each of these heroes has, you know, like, at least for abilities that they have that

205
00:15:01,760 --> 00:15:05,320
each have a slightly different effect than every other ability.

206
00:15:05,320 --> 00:15:08,360
Some of them are similar, but some of them are very different.

207
00:15:08,360 --> 00:15:12,560
And that's part of the reason that for OpenA5 right now, we have a limited hero set.

208
00:15:12,560 --> 00:15:17,400
It's actually not because that we didn't want the, you know, OpenA5 to train on it.

209
00:15:17,400 --> 00:15:21,240
It's mainly just because there's just so many things to represent that like we have to

210
00:15:21,240 --> 00:15:25,000
do manual effort every single time we input a new feature of the model.

211
00:15:25,000 --> 00:15:30,400
And that is really where a lot of the complexity of this project exists.

212
00:15:30,400 --> 00:15:36,720
It's just in, like, how do you, you know, coerce all of these API inputs into something that

213
00:15:36,720 --> 00:15:39,400
this, you know, the LSTM can understand.

214
00:15:39,400 --> 00:15:45,120
So that's part of it, the other part of it too is that, I think I mentioned this a little

215
00:15:45,120 --> 00:15:50,040
bit before that, you know, we have a lot of, we have a lot of items and each of these

216
00:15:50,040 --> 00:15:54,760
items, there's probably like 100 plus items, something like that, I don't go beyond that

217
00:15:54,760 --> 00:15:55,760
number.

218
00:15:55,760 --> 00:16:01,880
I don't know exactly, but there are a bunch of items that the, you know, each have their

219
00:16:01,880 --> 00:16:05,240
own effect and their own caveats and everything.

220
00:16:05,240 --> 00:16:09,080
There's also other actions, there's an action called scan where you can point to the map.

221
00:16:09,080 --> 00:16:13,680
You can only use it every three minutes and it will tell you, oh, is there, you know,

222
00:16:13,680 --> 00:16:18,040
an enemy in this area, there are things called words and they give you vision.

223
00:16:18,040 --> 00:16:24,280
They also can give you, like, they also call them sentry words and they give you vision

224
00:16:24,280 --> 00:16:26,280
over invisible units.

225
00:16:26,280 --> 00:16:31,360
So there are a number of items that can make you invisible, but so you need these other

226
00:16:31,360 --> 00:16:35,560
type of words to see the invisible units.

227
00:16:35,560 --> 00:16:37,040
There's other items that can also help you with that.

228
00:16:37,040 --> 00:16:41,200
So there's like every single aspect of the game has either an item or an ability that

229
00:16:41,200 --> 00:16:48,600
you can, you can change it with and there's also a bunch of complex rules, like there's

230
00:16:48,600 --> 00:16:53,960
this thing called backdoor protection, which means that your towers will start healing

231
00:16:53,960 --> 00:16:59,640
if you try to just rush at them at the enemy's towers because they want to make sure that

232
00:16:59,640 --> 00:17:04,040
everything is even in fair so that, like, you actually have to have your little minions

233
00:17:04,040 --> 00:17:10,440
with you in order to actually get far enough to attack other enemy's towers.

234
00:17:10,440 --> 00:17:14,080
It's because otherwise people would just try to, like, you know, surge and run towards

235
00:17:14,080 --> 00:17:17,520
the asian, just kill the ancient and that wouldn't be a very interesting game.

236
00:17:17,520 --> 00:17:23,640
Like, the game developers valve has done a very good job of keeping it balanced and interesting.

237
00:17:23,640 --> 00:17:27,760
And then I also mentioned the fog of war before, which covers the enemy's map and even what

238
00:17:27,760 --> 00:17:33,880
you can see, you have this circle around your hero that is influenced by trees and other

239
00:17:33,880 --> 00:17:38,560
items and other, like, obstructions in the map that you can't see around.

240
00:17:38,560 --> 00:17:44,560
So like, all these things come together to really make it a complex, interesting game.

241
00:17:44,560 --> 00:17:51,360
And you mentioned that OpenAI currently supports a subset of the full number of heroes.

242
00:17:51,360 --> 00:17:54,480
How many heroes does it support?

243
00:17:54,480 --> 00:18:02,200
And I'm assuming that there are some limitations as a result of that in the 5x5 matches.

244
00:18:02,200 --> 00:18:07,760
Like, I think I read somewhere that it's in, like, a mirror mode, like both teams are playing

245
00:18:07,760 --> 00:18:10,520
the same five heroes, or is that right?

246
00:18:10,520 --> 00:18:11,520
So that's, yes.

247
00:18:11,520 --> 00:18:13,720
So we used to do mirror mode.

248
00:18:13,720 --> 00:18:20,920
And recently we've worked on a way to make it so they can play multiple, multiple sets

249
00:18:20,920 --> 00:18:21,920
of heroes.

250
00:18:21,920 --> 00:18:25,160
And we really did that with just adding this embedding that says, okay, this is the hero

251
00:18:25,160 --> 00:18:30,120
you're playing right now, so that the model can know, oh, I see, I have this thing.

252
00:18:30,120 --> 00:18:34,680
Now I use this different ability instead or is basically as aware of the different abilities

253
00:18:34,680 --> 00:18:36,160
it has to use.

254
00:18:36,160 --> 00:18:37,640
So yes, we have 18 heroes now.

255
00:18:37,640 --> 00:18:39,920
It doesn't have to be a mirror match.

256
00:18:39,920 --> 00:18:46,280
And if anyone was watching the benchmark saw, we actually introduced drafting as well.

257
00:18:46,280 --> 00:18:53,520
And the drafting is super interesting because our opening of 5 picks the heroes in the order

258
00:18:53,520 --> 00:18:58,760
that it thinks will have the best chance of success.

259
00:18:58,760 --> 00:19:03,320
So again, it's based on the strategy it has learned.

260
00:19:03,320 --> 00:19:05,920
And so what specifically is drafting?

261
00:19:05,920 --> 00:19:10,200
So drafting is picking the set of heroes you want to use in your team.

262
00:19:10,200 --> 00:19:15,400
So from 18 heroes, the two teams, so each side, one side is called Radiant, the other

263
00:19:15,400 --> 00:19:20,920
one's called dire, the two teams go back and forth picking heroes.

264
00:19:20,920 --> 00:19:24,840
There's actually a set up where you know, usually Radiant picks first and then dire picks

265
00:19:24,840 --> 00:19:27,400
two heroes and then Radiant picks two heroes.

266
00:19:27,400 --> 00:19:29,520
But those are just the specifics.

267
00:19:29,520 --> 00:19:35,520
The idea is that you get a chance to pick heroes that you want on your team.

268
00:19:35,520 --> 00:19:40,440
And that way it's not just a mirror match, everyone has the same heroes.

269
00:19:40,440 --> 00:19:48,600
It's just, we're trying very hard to make this as real Dota as we can because we want it

270
00:19:48,600 --> 00:19:53,720
to be like a honest evaluation of this research project.

271
00:19:53,720 --> 00:19:58,400
We want this to show like, can you actually make something superhuman for something that's

272
00:19:58,400 --> 00:20:01,840
more complex than games that we've already solved?

273
00:20:01,840 --> 00:20:09,800
So you've mentioned a few technical topics so far, reinforcement learning was one, embeddings

274
00:20:09,800 --> 00:20:10,800
or another.

275
00:20:10,800 --> 00:20:16,440
Can you talk a little bit about the technology that underlies the Open AI 5?

276
00:20:16,440 --> 00:20:17,440
For sure.

277
00:20:17,440 --> 00:20:22,840
So basically our model is just one enormous LSTM.

278
00:20:22,840 --> 00:20:29,240
And the rest of the complexity is just coercing these Dota API inputs into something that the

279
00:20:29,240 --> 00:20:31,680
LSTM can process.

280
00:20:31,680 --> 00:20:40,200
We have this model architecture diagram that's kind of overwhelming, but there's just so

281
00:20:40,200 --> 00:20:41,680
much to observing the game.

282
00:20:41,680 --> 00:20:47,720
So the different modifiers that are going to apply, the different abilities that you have

283
00:20:47,720 --> 00:20:50,480
and also what items you have in your backpack.

284
00:20:50,480 --> 00:20:54,080
But when it comes down to it, we have all these inputs.

285
00:20:54,080 --> 00:20:59,120
We try to put them in reasonable representations.

286
00:20:59,120 --> 00:21:03,880
One thing that I've worked on recently when I mentioned the avoidance zones before is

287
00:21:03,880 --> 00:21:06,040
making an embedding for the invoiting zones.

288
00:21:06,040 --> 00:21:09,880
So the idea is that before it didn't really matter if we just say, hey, there's an avoidance

289
00:21:09,880 --> 00:21:10,880
zone here.

290
00:21:10,880 --> 00:21:13,560
Just stay away because we were doing the mirror match and there were only two avoidance

291
00:21:13,560 --> 00:21:15,320
zones.

292
00:21:15,320 --> 00:21:18,880
Now that we have 18 heroes, there can be more.

293
00:21:18,880 --> 00:21:24,080
So what we want to do is actually tell it, okay, which type of avoidance zone are you

294
00:21:24,080 --> 00:21:25,080
dealing with?

295
00:21:25,080 --> 00:21:27,160
Because you might want to step out of it.

296
00:21:27,160 --> 00:21:32,400
Maybe you don't, maybe you'd rather take it so that you can, because you know how much

297
00:21:32,400 --> 00:21:35,920
damage you'll take, so you can get to this other goal.

298
00:21:35,920 --> 00:21:44,200
And that's basically implemented as a map around the hero itself and just see the different

299
00:21:44,200 --> 00:21:48,520
cells are how the embedding type in them.

300
00:21:48,520 --> 00:21:51,520
So how does the map get translated into an embedding?

301
00:21:51,520 --> 00:21:59,720
Oh, so it's literally like an 8-by-grid around the hero and we, if we see, oh, the avoidance

302
00:21:59,720 --> 00:22:04,960
zone covers the cell, you know, just by like, you know, distance detection from the center

303
00:22:04,960 --> 00:22:10,200
of the avoidance zone, we say, okay, this one is this type.

304
00:22:10,200 --> 00:22:13,680
And then we put it through the embedding and then feed it to the LSTM.

305
00:22:13,680 --> 00:22:18,480
So folks that are listening, that have been following along with the fast AI course with

306
00:22:18,480 --> 00:22:24,960
us, we've been doing a study group around this fast AI, practical deep learning course

307
00:22:24,960 --> 00:22:35,200
and embeddings has figured pretty prominently in that course as a way for us to capture

308
00:22:35,200 --> 00:22:42,520
a pretty broad variety of characteristics about different entities into deep learning models.

309
00:22:42,520 --> 00:22:49,280
So it's interesting to hear that they play so prominently in the Dota model as well.

310
00:22:49,280 --> 00:22:50,800
Oh, for sure.

311
00:22:50,800 --> 00:22:56,720
And we use them for, I mean, I can't show you the diagram, but like they are across the

312
00:22:56,720 --> 00:23:00,600
board here because there's just so many things that have different types.

313
00:23:00,600 --> 00:23:06,680
Like there are, I don't know, several hundred modifiers and modifiers are ways of knowing

314
00:23:06,680 --> 00:23:11,080
if there's a spell cast on you or something, something like that or if there's an ability

315
00:23:11,080 --> 00:23:14,560
to be using, there's so many different things that have different types.

316
00:23:14,560 --> 00:23:20,200
So it's, it's absolutely essential that so many things go through embeddings.

317
00:23:20,200 --> 00:23:27,960
And so the embeddings are you, are you training the embeddings separately or are you training

318
00:23:27,960 --> 00:23:29,880
all of this end to end?

319
00:23:29,880 --> 00:23:30,880
It's all end to end.

320
00:23:30,880 --> 00:23:36,560
And so you've got this gigantic LSTM, I think I read it was like a 1024 units, is that

321
00:23:36,560 --> 00:23:37,560
still accurate?

322
00:23:37,560 --> 00:23:41,600
I think, you know, that's been changing so much.

323
00:23:41,600 --> 00:23:49,160
I think we might have, it's actually 2048 now, because I think that 20, the 1024 was

324
00:23:49,160 --> 00:23:54,880
for 1v1 and so we figured it should probably raise it for five heroes.

325
00:23:54,880 --> 00:24:02,320
And is the, are the steps in the units in the LSTM are those time steps in the game?

326
00:24:02,320 --> 00:24:06,800
Like frames or are they some other unit?

327
00:24:06,800 --> 00:24:10,640
For each time step, we have all of these different inputs.

328
00:24:10,640 --> 00:24:17,440
I've not worked on that specific section, but the time step we look at right now, actually

329
00:24:17,440 --> 00:24:23,720
do not remember with, I think it's like 16, it changes based on like if we're doing local

330
00:24:23,720 --> 00:24:27,160
training or not, but I believe in when we're doing it training for an experiment, we're

331
00:24:27,160 --> 00:24:30,120
looking at 16 time steps at a time.

332
00:24:30,120 --> 00:24:32,760
And that's with the frame skip.

333
00:24:32,760 --> 00:24:33,760
Okay.

334
00:24:33,760 --> 00:24:38,480
Maybe like, I guess two seconds, something like that.

335
00:24:38,480 --> 00:24:44,800
You mentioned that you do a lot of different types of transformations to, that a big part

336
00:24:44,800 --> 00:24:51,240
of the challenge here is figuring out how to feed information into these LSTMs, sounds

337
00:24:51,240 --> 00:24:55,400
like a big part of that is using embeddings, but there's some other things that you're doing

338
00:24:55,400 --> 00:25:00,520
to, in terms of representations for making all of this tractable.

339
00:25:00,520 --> 00:25:01,520
Sure.

340
00:25:01,520 --> 00:25:07,160
And besides embeddings, well, so one other thing that I've worked on recently is adding

341
00:25:07,160 --> 00:25:08,160
a mini map.

342
00:25:08,160 --> 00:25:13,760
So this is a part of the game that everyone, all the humans get to see and opening up

343
00:25:13,760 --> 00:25:14,760
five never got to see.

344
00:25:14,760 --> 00:25:19,280
And it's just this high level view of like what vision you have, where are the enemy units

345
00:25:19,280 --> 00:25:21,480
are, things like that.

346
00:25:21,480 --> 00:25:26,440
And the way we handled this, because we couldn't talk to the client code, is just trying

347
00:25:26,440 --> 00:25:28,320
to recreate the vision.

348
00:25:28,320 --> 00:25:34,000
So what we have is this input, we start out with this large grid.

349
00:25:34,000 --> 00:25:39,560
It's 260 by 260, and we draw all of, where all the vision is on the map.

350
00:25:39,560 --> 00:25:43,160
So you get vision from towers, from heroes, and we overlay it.

351
00:25:43,160 --> 00:25:45,520
And so you've got this one nice vision channel.

352
00:25:45,520 --> 00:25:49,520
And then we add other channels, like, here's where your heroes are, and another channel

353
00:25:49,520 --> 00:25:53,160
for where your words are, and another channel for all these things.

354
00:25:53,160 --> 00:25:59,280
A channel for your creeps, the minions.

355
00:25:59,280 --> 00:26:05,640
So we add all these up, and then we actually put that through a confnet for the model

356
00:26:05,640 --> 00:26:06,640
to understand.

357
00:26:06,640 --> 00:26:12,440
And so far it has been helping with word placement, or so we think it's hard, word placement

358
00:26:12,440 --> 00:26:18,240
is really hard to figure out, because it's a, it's something that requires a lot of strategy.

359
00:26:18,240 --> 00:26:22,600
And not every single, word placement makes sense for every single part of the game.

360
00:26:22,600 --> 00:26:23,600
What's a word?

361
00:26:23,600 --> 00:26:24,600
Oh, sorry.

362
00:26:24,600 --> 00:26:25,600
So the word is something that gives you vision, remember?

363
00:26:25,600 --> 00:26:28,600
Just like the entire map is covered because it's all war.

364
00:26:28,600 --> 00:26:34,000
So what you really want to, like, you can't evaluate, that's the thing that makes this

365
00:26:34,000 --> 00:26:37,440
really complex, is that it's hard to evaluate good behavior.

366
00:26:37,440 --> 00:26:42,680
A lot of this behavior we can't see till really late in the game.

367
00:26:42,680 --> 00:26:47,880
So I guess for the word placement, like, it's, I'm sorry, but late in the game, I don't

368
00:26:47,880 --> 00:26:52,120
mean this actual game, I mean, late in training, like, and that's something we actually don't

369
00:26:52,120 --> 00:26:58,640
have a lot of, without comparing to agents that are similar skill levels.

370
00:26:58,640 --> 00:27:01,040
It's hard to tell, like, are you doing this well or not?

371
00:27:01,040 --> 00:27:02,960
And that's part of the reason we had this show match.

372
00:27:02,960 --> 00:27:07,720
But we have a scripted bot we made a year ago that, you know, it does okay.

373
00:27:07,720 --> 00:27:10,320
I think it beats me pretty consistently.

374
00:27:10,320 --> 00:27:15,680
But in an average play, I would probably be able to beat it, because you can't, you can't

375
00:27:15,680 --> 00:27:17,800
script these complex behaviors that well.

376
00:27:17,800 --> 00:27:23,240
That's the thing we ran into first, is you just, you can't create a, you know, a set

377
00:27:23,240 --> 00:27:27,560
of, you know, the open A5 with just scripting, you have to have something else that's learning

378
00:27:27,560 --> 00:27:31,640
that knows, can figure out these complex strategies, because you can't, you just, you can't

379
00:27:31,640 --> 00:27:33,280
code them up.

380
00:27:33,280 --> 00:27:39,240
You mentioned, I guess what I think of as kind of a reward attribution type of a problem,

381
00:27:39,240 --> 00:27:48,800
meaning things happen in the game, and if you're just measuring the agents progress on

382
00:27:48,800 --> 00:27:55,680
wins and loses, you don't really know until late in training.

383
00:27:55,680 --> 00:28:01,560
But I read something about how there's been some experimentation with that binary type

384
00:28:01,560 --> 00:28:08,920
of a reward relative to more incremental types of a reward, so looking at, you know, kills

385
00:28:08,920 --> 00:28:16,880
and hits and things like that, specifically some experiments that were done comparing

386
00:28:16,880 --> 00:28:20,800
like sparse rewards versus dense rewards.

387
00:28:20,800 --> 00:28:26,440
So yeah, this is something, actually, that interestingly enough, we have been, we have

388
00:28:26,440 --> 00:28:27,840
been doing some research on.

389
00:28:27,840 --> 00:28:33,360
So it, when we first started doing one V1 bot, one of the things that we really wanted

390
00:28:33,360 --> 00:28:39,400
it to learn was creep blocking, and it's the idea that just statistically, if your creeps

391
00:28:39,400 --> 00:28:44,840
end up in the middle of the map, sorry, slowly over, middle of the map, like into the enemy's

392
00:28:44,840 --> 00:28:50,160
territory, the enemy can start taking those creeps and killing them faster, and you tend

393
00:28:50,160 --> 00:28:54,440
to statistically do worse, and so a lot of people tend to creep block at the beginning

394
00:28:54,440 --> 00:28:58,560
of the game where they'll stand in front of their creeps and prevent them from running

395
00:28:58,560 --> 00:29:04,360
to the beginning of the map, and so if your opponent is not doing that, what they'll,

396
00:29:04,360 --> 00:29:08,520
they will end up getting their creeps on your side, your tower will try to take them

397
00:29:08,520 --> 00:29:12,080
out, and you generally do better that way.

398
00:29:12,080 --> 00:29:15,240
They couldn't even, with all the training they did, they never saw this happen for one

399
00:29:15,240 --> 00:29:20,120
V1, so they had to do this shaped reward, basically, you know, give a reward for blocking

400
00:29:20,120 --> 00:29:22,400
the creeps.

401
00:29:22,400 --> 00:29:28,280
So however, when we did let it run longer, and this was, I think, earlier this year, we

402
00:29:28,280 --> 00:29:34,040
actually did start seeing a little bit of that behavior, so I think when it comes to sparse

403
00:29:34,040 --> 00:29:37,320
or dense reward, and this is, again, this is just off of some of the experiments we've

404
00:29:37,320 --> 00:29:43,720
seen, you can sometimes see these, like, these good behaviors that you could get out of a

405
00:29:43,720 --> 00:29:48,520
dense reward, but you have to give it a lot more training time, and so it's really as

406
00:29:48,520 --> 00:29:52,800
a trade-off of, like, how much, like, how much training time do you need to give it?

407
00:29:52,800 --> 00:29:58,840
So we do give rewards for kills and things like that, but, you know, in taking towers,

408
00:29:58,840 --> 00:30:02,960
you get the gold reward, you have to do that, otherwise it would just, I think, it would

409
00:30:02,960 --> 00:30:10,240
just take too long to see any good results, and sort of interesting fact of this, and

410
00:30:10,240 --> 00:30:15,120
we saw, actually, in the recent benchmark, is the third game.

411
00:30:15,120 --> 00:30:21,560
And one of the things that happened is the crowd picked the draft, and so the draft was

412
00:30:21,560 --> 00:30:23,560
terrible for opening I-5.

413
00:30:23,560 --> 00:30:24,560
Absolutely terrible.

414
00:30:24,560 --> 00:30:31,320
It predicted a 2.9% chance of winning, which is pretty abysmal, so it did lose, but the

415
00:30:31,320 --> 00:30:36,560
interesting thing was, is that we started to see these behaviors where the heroes would

416
00:30:36,560 --> 00:30:40,760
sacrifice themselves to take a tower, which is kind of strange, like, why are you changing

417
00:30:40,760 --> 00:30:46,440
your behavior so much to do something like taking out of tower?

418
00:30:46,440 --> 00:30:52,600
And we realized, is that we've kept the rewards, you know, symmetric, you know, if you win,

419
00:30:52,600 --> 00:30:59,000
you get one, if you lose, you get negative one, and, but, you know, standard aisle practice,

420
00:30:59,000 --> 00:31:03,120
you generally have, you know, scam a term that is your horizon, right?

421
00:31:03,120 --> 00:31:08,880
And so you generally discount the rewards, positive and negative.

422
00:31:08,880 --> 00:31:12,480
And so if you think you're going to win, it makes sense, you're going to try to drag

423
00:31:12,480 --> 00:31:17,240
that game out as long as you can to make sure that that penalty is as low as possible.

424
00:31:17,240 --> 00:31:21,880
So I know, right, it's kind of hilarious.

425
00:31:21,880 --> 00:31:22,880
And this is what we saw.

426
00:31:22,880 --> 00:31:26,400
So now we're like, well, now some of that behavior makes sense.

427
00:31:26,400 --> 00:31:29,520
You sacrifice yourself because of the towers down.

428
00:31:29,520 --> 00:31:32,560
Then there's more time in the game, because now the enemy team is going to have to work

429
00:31:32,560 --> 00:31:36,080
harder to keep it balanced.

430
00:31:36,080 --> 00:31:40,120
And if you eventually lose, you're like, okay, well, now I, you know, got a much smaller

431
00:31:40,120 --> 00:31:45,320
penalty, but it's hard because you don't want the two teams collaborating, right?

432
00:31:45,320 --> 00:31:50,200
Yeah, like in general, asymmetrical words are not good.

433
00:31:50,200 --> 00:31:55,000
And we did try a little experiment so far, trying to see how that works, but like, it's

434
00:31:55,000 --> 00:31:56,000
tricky.

435
00:31:56,000 --> 00:31:57,840
It's really tricky to try to get these things right.

436
00:31:57,840 --> 00:32:02,840
Yeah, you end up with a lot of possibilities for unintended consequences and things that

437
00:32:02,840 --> 00:32:06,520
unfurl and unexpected ways, I would think.

438
00:32:06,520 --> 00:32:07,520
Oh, yeah.

439
00:32:07,520 --> 00:32:09,040
I mean, it's just so many tweaking.

440
00:32:09,040 --> 00:32:12,920
I think that's, and that's the reason we're doing the research, right, is to figure all

441
00:32:12,920 --> 00:32:13,920
these things out.

442
00:32:13,920 --> 00:32:19,520
But even like a few weeks ago, we were talking about how just changing our learning rate.

443
00:32:19,520 --> 00:32:23,120
We're just like, hey, why don't we explore an experiment with a lower learning rate?

444
00:32:23,120 --> 00:32:24,120
And oh, guess what?

445
00:32:24,120 --> 00:32:25,120
That helps.

446
00:32:25,120 --> 00:32:26,720
Like, there's just, there's so many.

447
00:32:26,720 --> 00:32:30,480
No, it's too, too bad we can't have the opening of five figure out how to do all these

448
00:32:30,480 --> 00:32:31,480
things, right?

449
00:32:31,480 --> 00:32:37,000
You've talked quite a bit about reinforcement learning and some of the papers that I've

450
00:32:37,000 --> 00:32:47,040
seen referred to in the context of the Open AI 5 and the previous versions were PPO and

451
00:32:47,040 --> 00:32:49,520
Rainbow and Observe and look further.

452
00:32:49,520 --> 00:32:55,320
Do you, can you talk a little bit about the roles that each of these plays and how they're

453
00:32:55,320 --> 00:32:58,720
used in the kind of the training regime?

454
00:32:58,720 --> 00:32:59,720
Sure.

455
00:32:59,720 --> 00:33:04,720
So we basically use a pretty scaled out version of PPO.

456
00:33:04,720 --> 00:33:11,880
We have our training setup, we call, I guess it's training framework, we call rapid, that

457
00:33:11,880 --> 00:33:16,760
allows us to scale out a lot of, like all of this training, because you know, with reinforcement

458
00:33:16,760 --> 00:33:19,040
learning, you need lots and lots of samples.

459
00:33:19,040 --> 00:33:27,000
So we have, I think in our recent blog post, we were talking about how we have 180 days,

460
00:33:27,000 --> 00:33:31,120
180, sorry, years of training every single day.

461
00:33:31,120 --> 00:33:35,440
And that's because we're running all of these games in parallel.

462
00:33:35,440 --> 00:33:40,400
So yeah, so again, it's just, it's basically scaled up PPO.

463
00:33:40,400 --> 00:33:45,880
One of our, our recent experiment had, so our recent large experiment that we used for

464
00:33:45,880 --> 00:33:51,240
the benchmark had 80,000 CPUs and 1000 GPUs.

465
00:33:51,240 --> 00:33:55,680
And about half of those were optimizers, the other half were just doing roll outs.

466
00:33:55,680 --> 00:33:59,160
And we also have infrastructure for doing evaluations, so that we have like this giant

467
00:33:59,160 --> 00:34:02,840
tensed word that tells us like how everything's going, we look at sample reuse, we look

468
00:34:02,840 --> 00:34:07,760
at the, you know, the mean reward, we look at all these different aspects of the training

469
00:34:07,760 --> 00:34:10,520
to figure out like, is this going well for us?

470
00:34:10,520 --> 00:34:13,760
Is it not like, what can we tweak, what can we not tweak?

471
00:34:13,760 --> 00:34:17,160
It's a really great framework for running experiments.

472
00:34:17,160 --> 00:34:20,560
And we use another teams at OpenAI as well.

473
00:34:20,560 --> 00:34:23,040
So there are two different types of nodes.

474
00:34:23,040 --> 00:34:27,320
One was for updates and the other was for something else, what were those two?

475
00:34:27,320 --> 00:34:31,720
So part of what Rapid does is it does, it handles a lot of like the scaling out.

476
00:34:31,720 --> 00:34:36,680
We have a whole, you know, different clusters and machines that are used for the whole training

477
00:34:36,680 --> 00:34:37,680
process.

478
00:34:37,680 --> 00:34:43,160
And one of those are the optimizers, the optimizers handle all the back prop, you know,

479
00:34:43,160 --> 00:34:47,520
it's, you know, taking the new parameters, spreading them out to the machines again, combining

480
00:34:47,520 --> 00:34:48,520
the parameters.

481
00:34:48,520 --> 00:34:52,160
And then the other half of the machines for the most part are the roll outs.

482
00:34:52,160 --> 00:34:58,960
And we have both GPU roll outs and non-GPU roll outs because you, so it's basically if you

483
00:34:58,960 --> 00:35:03,600
want your, as you're running the game, doing your forward passes, do you want to be run

484
00:35:03,600 --> 00:35:04,600
on GPU?

485
00:35:04,600 --> 00:35:08,600
And recently we've made that infrastructure change so that it can run on GPU.

486
00:35:08,600 --> 00:35:14,800
And that does help us not as much speed up training except when we've made the models

487
00:35:14,800 --> 00:35:19,000
sufficient size than it actually is faster to run it on a GPU.

488
00:35:19,000 --> 00:35:20,480
What is a roll out specifically?

489
00:35:20,480 --> 00:35:24,440
Oh, yeah, so roll out is just playing the game, right?

490
00:35:24,440 --> 00:35:27,160
So it's creating samples.

491
00:35:27,160 --> 00:35:31,440
So we have all these machines that are creating samples playing the game, you know, seeing

492
00:35:31,440 --> 00:35:34,800
here's an observation, here's the, you know, here's the next observation, next action,

493
00:35:34,800 --> 00:35:35,800
you know, your action.

494
00:35:35,800 --> 00:35:39,120
And then all that gets packaged up and sent to the optimizers.

495
00:35:39,120 --> 00:35:43,160
And, and then we also have a bunch of machines that do evaluations.

496
00:35:43,160 --> 00:35:48,200
And so the able to do is, you know, take a snapshot of the parameters and play again against

497
00:35:48,200 --> 00:35:49,760
our scripted bot.

498
00:35:49,760 --> 00:35:51,640
And then it will report the results.

499
00:35:51,640 --> 00:35:56,240
Of course, those, that's usually only useful for the very early part of training because

500
00:35:56,240 --> 00:35:59,840
again, the scripted bot can only do so much.

501
00:35:59,840 --> 00:36:04,440
So it's used for new experiments, but later on we have this other piece of infrastructure

502
00:36:04,440 --> 00:36:10,920
we call scoreboard where we can snapshot parameters played against other snapshots and see how

503
00:36:10,920 --> 00:36:11,920
they compare.

504
00:36:11,920 --> 00:36:16,960
And that's really how we decide, you know, coming up to a match if like what is really

505
00:36:16,960 --> 00:36:20,280
the best of something because otherwise you just can't tell.

506
00:36:20,280 --> 00:36:26,120
And at a certain point, like even with all these snapshots, we still need humans to evaluate

507
00:36:26,120 --> 00:36:30,640
because there are, there are probably, as I said, I mentioned this early before very

508
00:36:30,640 --> 00:36:36,880
quickly, the problem of strategy collapse is what we've been calling it where your opening

509
00:36:36,880 --> 00:36:42,120
of five might be learning only a small handful of strategies and maybe not learning everything

510
00:36:42,120 --> 00:36:44,360
just hasn't practiced that.

511
00:36:44,360 --> 00:36:51,440
So you have five different models that come from five different training iterations.

512
00:36:51,440 --> 00:36:58,200
Could each of those play a different hero in the same game on the same team?

513
00:36:58,200 --> 00:36:59,200
You could do that.

514
00:36:59,200 --> 00:37:03,240
It would require extra infrastructure work.

515
00:37:03,240 --> 00:37:08,080
Right now we're just sort of doing all of them in parallel with the same brain.

516
00:37:08,080 --> 00:37:09,560
So they all do have the same brain.

517
00:37:09,560 --> 00:37:16,400
They're just giving them different inputs and running all of the four passes in parallel.

518
00:37:16,400 --> 00:37:19,920
You've got these brains that you train for the heroes.

519
00:37:19,920 --> 00:37:25,360
They use these embedding so that they can, you know, the brain can control any of the heroes

520
00:37:25,360 --> 00:37:30,800
that open AI five supports at a given time.

521
00:37:30,800 --> 00:37:36,880
And then it sounds like you play different versions, one against the other to determine

522
00:37:36,880 --> 00:37:40,320
which ones are best, how long do you play them against?

523
00:37:40,320 --> 00:37:45,720
Is it a certain number of games or a certain number of quote unquote years, days of play

524
00:37:45,720 --> 00:37:52,440
to assess, you know, a given model versus against another model?

525
00:37:52,440 --> 00:37:59,040
So the way our scoreboard is set up right now is that it will try to find the like most

526
00:37:59,040 --> 00:38:04,560
recent agent that's been uploaded and played against other ones that have the same environment.

527
00:38:04,560 --> 00:38:09,120
The environment just basically means like we can set up an environment.

528
00:38:09,120 --> 00:38:14,400
So it's just like sniper versus sniper in which we've done a lot of tests for that.

529
00:38:14,400 --> 00:38:19,080
And then more recently we've had the ones where we have our 18 hero set.

530
00:38:19,080 --> 00:38:24,080
So scoreboard looks around and says, okay, like who are the new agents and tries to, you

531
00:38:24,080 --> 00:38:31,120
know, bias it so they get the most new games, but then other agents like also get games.

532
00:38:31,120 --> 00:38:33,280
I think it tops out around thing.

533
00:38:33,280 --> 00:38:37,680
I don't know the exact numbers, but something around maybe like 10,000 games, it'll start

534
00:38:37,680 --> 00:38:42,880
to ignore you entirely, because it's like, well, we've established what your skill level

535
00:38:42,880 --> 00:38:44,480
is.

536
00:38:44,480 --> 00:38:49,240
But other ones, yeah, it's just basically on a need basis, depending on the, because so

537
00:38:49,240 --> 00:38:52,720
many people are constantly uploading things for their individual experiment, because once

538
00:38:52,720 --> 00:38:56,360
you get past the scripted bot, you can't really tell very well.

539
00:38:56,360 --> 00:38:57,360
Okay.

540
00:38:57,360 --> 00:39:03,080
So it's kind of like a CICD system, you create this model, you experiment with it.

541
00:39:03,080 --> 00:39:08,000
And then you upload it into this testing infrastructure that basically just pits it against

542
00:39:08,000 --> 00:39:14,600
other models and determine how it fairs against them.

543
00:39:14,600 --> 00:39:23,080
Maybe jumping ahead to the actual benchmark match, can you give us the highlights of the

544
00:39:23,080 --> 00:39:24,080
benchmark match?

545
00:39:24,080 --> 00:39:25,560
First of all, what were the results?

546
00:39:25,560 --> 00:39:26,560
Yeah.

547
00:39:26,560 --> 00:39:31,800
So the results of the benchmark match were the first two games, opening a 5-1 against

548
00:39:31,800 --> 00:39:33,040
the humans.

549
00:39:33,040 --> 00:39:38,160
And just one thing you have to understand, like these humans have played for 10,000 hours

550
00:39:38,160 --> 00:39:39,160
against this game.

551
00:39:39,160 --> 00:39:41,720
These people are very good at what they do.

552
00:39:41,720 --> 00:39:47,600
The players we had at the game were like, were some were previous pros, but our casters,

553
00:39:47,600 --> 00:39:52,440
but they understand the game so well that they're able to talk to other people about it.

554
00:39:52,440 --> 00:39:55,240
And I think that's really a great demonstration of how well they know it.

555
00:39:55,240 --> 00:40:01,960
So they're excellent, 99.95% percentile players.

556
00:40:01,960 --> 00:40:09,880
And they lost the first two games, and the only reason they won the last game was because

557
00:40:09,880 --> 00:40:17,880
of this adversarial drafting that our audience and Twitch chat were able to assist with.

558
00:40:17,880 --> 00:40:20,080
So that's the big thing.

559
00:40:20,080 --> 00:40:25,440
And I think it's not as much, there's a couple things with the drafting results.

560
00:40:25,440 --> 00:40:29,080
I mean, so the first ones, for the first few minutes of the first two games, it was

561
00:40:29,080 --> 00:40:31,920
tracking pretty even, but that's how most games go.

562
00:40:31,920 --> 00:40:36,000
You don't really know if you're winning or not even if things are even like, well,

563
00:40:36,000 --> 00:40:39,680
opening five got a kill, they got a kill, it was sort of even, but then things changed

564
00:40:39,680 --> 00:40:44,000
because then opening five starts pushing and they push their lanes and pushing the lanes

565
00:40:44,000 --> 00:40:49,000
basically means going to the other side of the base and really trying to take the other

566
00:40:49,000 --> 00:40:50,160
side.

567
00:40:50,160 --> 00:40:54,760
So even humans had to sacrifice a lot to get some of their first towers.

568
00:40:54,760 --> 00:40:57,760
And so even though they were getting the towers, it didn't mean that they're really ahead

569
00:40:57,760 --> 00:41:00,120
because they had to sacrifice so much.

570
00:41:00,120 --> 00:41:05,320
And then after that, it just kind of went uphill for opening five.

571
00:41:05,320 --> 00:41:10,520
The fact that the game opens up late in the game is it have to do with that open AI is

572
00:41:10,520 --> 00:41:16,560
kind of figured out some the right time to start pushing or is it do you see like the

573
00:41:16,560 --> 00:41:22,160
culmination of some longer term strategy that open AI had been playing all along that,

574
00:41:22,160 --> 00:41:25,680
you know, either the humans were oblivious to or couldn't effectively counter or something

575
00:41:25,680 --> 00:41:27,320
like that.

576
00:41:27,320 --> 00:41:31,960
So I think it's both and it's again, because I think this is actually a complex problem

577
00:41:31,960 --> 00:41:38,000
because, you know, a lot of professional games even will be pretty even at the beginning

578
00:41:38,000 --> 00:41:39,640
or even just amateur games.

579
00:41:39,640 --> 00:41:43,560
So having a advantage at the very beginning does not mean you'll have an advantage later

580
00:41:43,560 --> 00:41:47,120
in the game, but it can, it's sort of a hard answer.

581
00:41:47,120 --> 00:41:50,800
I think the thing, how I was talking really about the asymmetric awards, we did start

582
00:41:50,800 --> 00:41:55,920
doing an experiment where we said, okay, fine, no penalties, right?

583
00:41:55,920 --> 00:42:00,800
And the games do finish faster because they're trying to maximize that reward.

584
00:42:00,800 --> 00:42:05,120
So it could be, I think it's a little above, if it's, you know, most games do start out

585
00:42:05,120 --> 00:42:06,120
even.

586
00:42:06,120 --> 00:42:13,000
But then also, I think, you know, open AI 5 is motivated to, you know, make it a little

587
00:42:13,000 --> 00:42:14,960
longer than normal.

588
00:42:14,960 --> 00:42:17,760
Hmm, where are the humans down?

589
00:42:17,760 --> 00:42:20,720
Yeah, there you go.

590
00:42:20,720 --> 00:42:26,880
So it's, yeah, it's all these things, this is why I think after TI certainly will be doing

591
00:42:26,880 --> 00:42:31,280
a lot more like ablation studies, things like that, to figure out exactly how much of a

592
00:42:31,280 --> 00:42:34,720
contribution each of these things make, because right now we're just sort of rushing to

593
00:42:34,720 --> 00:42:39,680
the end, trying to make the best open AI 5 we can, but we really want to understand more

594
00:42:39,680 --> 00:42:45,240
in depth how, how each of these little knobs affects the performance.

595
00:42:45,240 --> 00:42:51,040
Are there any other observations that are noteworthy coming out of the benchmark?

596
00:42:51,040 --> 00:42:52,360
I mean, certainly there are.

597
00:42:52,360 --> 00:42:58,760
What were some of the main things that, you know, either the open AI team or the audience

598
00:42:58,760 --> 00:43:07,800
or the commentators observed about the way open AI had learned to play relative to humans?

599
00:43:07,800 --> 00:43:13,200
Yeah, so I don't know too much about specific strategies.

600
00:43:13,200 --> 00:43:18,200
I feel like you have to have a certain level of Dota understanding to really understand

601
00:43:18,200 --> 00:43:19,400
how these things work.

602
00:43:19,400 --> 00:43:25,600
One thing the commentators did say is that they tend to go very much for pushing lanes,

603
00:43:25,600 --> 00:43:27,920
which means that like they'll just kind of go straight forward.

604
00:43:27,920 --> 00:43:34,200
There, again, there are numerous valid strategies in Dota because it is a very complex game.

605
00:43:34,200 --> 00:43:41,480
They tend to take on these more, I guess, hard fought strategies like where you just kind

606
00:43:41,480 --> 00:43:46,520
of go for it in some cases and they have the confidence to make it through most of the

607
00:43:46,520 --> 00:43:47,840
time.

608
00:43:47,840 --> 00:43:50,920
Not always, but they, and they also support each other.

609
00:43:50,920 --> 00:43:55,000
That's the other thing that we saw in the last even our internal games is that we have

610
00:43:55,000 --> 00:44:01,560
this, this Piper parameter called Team Spirit and what we do is, you know, if we turn it

611
00:44:01,560 --> 00:44:03,360
up, it's basically it's like a shared reward.

612
00:44:03,360 --> 00:44:08,560
So if the higher it is, the more reward you get for some of your teammates kills rather

613
00:44:08,560 --> 00:44:11,240
than just one of your kills.

614
00:44:11,240 --> 00:44:15,760
And interesting things as down at zero, they play terribly and if it's a one, they play

615
00:44:15,760 --> 00:44:16,760
terribly.

616
00:44:16,760 --> 00:44:20,040
So there is a mid-ground where you have to be a little bit selfish, but also care about

617
00:44:20,040 --> 00:44:23,160
your teammates enough to go help them when they're dying.

618
00:44:23,160 --> 00:44:28,000
But it does, it is interesting, they seem to play more collaboratively than humans at

619
00:44:28,000 --> 00:44:29,000
times.

620
00:44:29,000 --> 00:44:31,280
I'm seem to care about each other a little more.

621
00:44:31,280 --> 00:44:35,080
So I think that is part of the reason that they have done so well.

622
00:44:35,080 --> 00:44:41,200
You mentioned or I saw in a video somewhere, one of the commentators was talking about

623
00:44:41,200 --> 00:44:44,760
some strategy that he observed the bots playing.

624
00:44:44,760 --> 00:44:48,600
I think it was something like keeping the center of the board clear or something to that

625
00:44:48,600 --> 00:44:52,440
effect that, you know, it took him eight years to figure out or something.

626
00:44:52,440 --> 00:44:53,440
Yeah.

627
00:44:53,440 --> 00:44:59,880
So at our first, I think, so we had a, we published a video in a blog post a while back.

628
00:44:59,880 --> 00:45:05,320
And one of the interesting things about the Dota board is that it's not symmetrical.

629
00:45:05,320 --> 00:45:08,280
So I mean, it's sort of symmetrical, but there are some different parts.

630
00:45:08,280 --> 00:45:16,360
And so what Blitz, who was commentating that those games was saying is that there are,

631
00:45:16,360 --> 00:45:21,200
like, so bottom, the bottom towers on the radiant side are surrounded by forests.

632
00:45:21,200 --> 00:45:25,360
So it's actually really hard to defend those towers.

633
00:45:25,360 --> 00:45:29,640
And so his advice is like if you're playing radiant, don't even bother.

634
00:45:29,640 --> 00:45:33,720
Just let them take those towers because you have a much better chance of taking out the

635
00:45:33,720 --> 00:45:37,560
enemy and your mid towers and your top towers if you're radiant.

636
00:45:37,560 --> 00:45:46,640
So it just says, just said that it's like it's very hard to defend the ones in the weeds.

637
00:45:46,640 --> 00:45:53,440
So again, there's a lot of a lot of strategies there and it's I think the kind of the questions

638
00:45:53,440 --> 00:45:55,440
you're asking me is like one of these high level strategies.

639
00:45:55,440 --> 00:46:01,040
It's part of the reason we had these very well practice humans come look at these things

640
00:46:01,040 --> 00:46:05,880
because these are things that a lot of us just as, you know, as machine learning engineers

641
00:46:05,880 --> 00:46:11,560
and researchers, we can't spot ourselves because it requires so many hours of gameplay

642
00:46:11,560 --> 00:46:15,720
that we haven't done yet.

643
00:46:15,720 --> 00:46:24,200
So maybe to wrap up, can you talk a little bit about how this fits into the broader

644
00:46:24,200 --> 00:46:27,200
landscape of projects at OpenAI?

645
00:46:27,200 --> 00:46:32,600
You mentioned that the next big challenge is TI.

646
00:46:32,600 --> 00:46:41,120
Is this OpenAI 5 allowed to compete in TI like for the 30, 40 million or is it just a

647
00:46:41,120 --> 00:46:46,040
milestone or are you planning some additional benchmarking kind of there?

648
00:46:46,040 --> 00:46:51,800
Yeah, so we're just doing this for, I mean, again, OpenAI is a research organization.

649
00:46:51,800 --> 00:47:01,400
So we're not planning on being part of the human pool as we're not entering a human.

650
00:47:01,400 --> 00:47:08,080
But I think the main thing for us is really just to see how well we can get OpenAI 5 to work.

651
00:47:08,080 --> 00:47:14,800
That's our main and only goal is feeling to see, can we get super human performance from

652
00:47:14,800 --> 00:47:16,640
reinforcement learning and self play?

653
00:47:16,640 --> 00:47:22,400
Well, Chris, you thanks so much for taking the time to explain all this complicated stuff

654
00:47:22,400 --> 00:47:29,760
to us and help us understand what OpenAI is doing and why you're also excited about

655
00:47:29,760 --> 00:47:31,760
the OpenAI 5 playing Dota.

656
00:47:31,760 --> 00:47:32,760
Great.

657
00:47:32,760 --> 00:47:33,760
Well, thank you for having me.

658
00:47:33,760 --> 00:47:36,760
It's been a pleasure.

659
00:47:36,760 --> 00:47:40,880
All right, everyone, that's our show for today.

660
00:47:40,880 --> 00:47:45,840
For more information on Christie or any of the topics covered in this episode, head over

661
00:47:45,840 --> 00:47:50,920
to twimmelai.com slash talk slash 176.

662
00:47:50,920 --> 00:47:54,560
If you're a fan of the podcast, we'd like to encourage you to head to your Apple or

663
00:47:54,560 --> 00:47:59,320
Google podcast app and leave us a five-star rating and review.

664
00:47:59,320 --> 00:48:03,600
The reviews help inspire us to create more and better content and they help new listeners

665
00:48:03,600 --> 00:48:06,040
find and enjoy the show.

666
00:48:06,040 --> 00:48:32,800
As always, thanks so much for listening and catch you next time.

